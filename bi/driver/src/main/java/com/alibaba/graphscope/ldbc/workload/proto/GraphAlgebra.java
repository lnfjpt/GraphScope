// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: algebra.proto

package com.alibaba.graphscope.ldbc.workload.proto;

public final class GraphAlgebra {
  private GraphAlgebra() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MetaDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.MetaData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.common.IrDataType type = 1;</code>
     * @return Whether the type field is set.
     */
    boolean hasType();
    /**
     * <code>.common.IrDataType type = 1;</code>
     * @return The type.
     */
    com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataType getType();
    /**
     * <code>.common.IrDataType type = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataTypeOrBuilder getTypeOrBuilder();

    /**
     * <code>int32 alias = 2;</code>
     * @return The alias.
     */
    int getAlias();
  }
  /**
   * Protobuf type {@code algebra.MetaData}
   */
  public static final class MetaData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.MetaData)
      MetaDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MetaData.newBuilder() to construct.
    private MetaData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MetaData() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MetaData();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_MetaData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_MetaData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataType type_;
    /**
     * <code>.common.IrDataType type = 1;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override
    public boolean hasType() {
      return type_ != null;
    }
    /**
     * <code>.common.IrDataType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataType getType() {
      return type_ == null ? com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataType.getDefaultInstance() : type_;
    }
    /**
     * <code>.common.IrDataType type = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataTypeOrBuilder getTypeOrBuilder() {
      return type_ == null ? com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataType.getDefaultInstance() : type_;
    }

    public static final int ALIAS_FIELD_NUMBER = 2;
    private int alias_ = 0;
    /**
     * <code>int32 alias = 2;</code>
     * @return The alias.
     */
    @java.lang.Override
    public int getAlias() {
      return alias_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != null) {
        output.writeMessage(1, getType());
      }
      if (alias_ != 0) {
        output.writeInt32(2, alias_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getType());
      }
      if (alias_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, alias_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData) obj;

      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (!getType()
            .equals(other.getType())) return false;
      }
      if (getAlias()
          != other.getAlias()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType().hashCode();
      }
      hash = (37 * hash) + ALIAS_FIELD_NUMBER;
      hash = (53 * hash) + getAlias();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code algebra.MetaData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.MetaData)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_MetaData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_MetaData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        type_ = null;
        if (typeBuilder_ != null) {
          typeBuilder_.dispose();
          typeBuilder_ = null;
        }
        alias_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_MetaData_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.type_ = typeBuilder_ == null
              ? type_
              : typeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.alias_ = alias_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance()) return this;
        if (other.hasType()) {
          mergeType(other.getType());
        }
        if (other.getAlias() != 0) {
          setAlias(other.getAlias());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getTypeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                alias_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataType type_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataType, com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataType.Builder, com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataTypeOrBuilder> typeBuilder_;
      /**
       * <code>.common.IrDataType type = 1;</code>
       * @return Whether the type field is set.
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.common.IrDataType type = 1;</code>
       * @return The type.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataType getType() {
        if (typeBuilder_ == null) {
          return type_ == null ? com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataType.getDefaultInstance() : type_;
        } else {
          return typeBuilder_.getMessage();
        }
      }
      /**
       * <code>.common.IrDataType type = 1;</code>
       */
      public Builder setType(com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataType value) {
        if (typeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
        } else {
          typeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.common.IrDataType type = 1;</code>
       */
      public Builder setType(
          com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataType.Builder builderForValue) {
        if (typeBuilder_ == null) {
          type_ = builderForValue.build();
        } else {
          typeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.common.IrDataType type = 1;</code>
       */
      public Builder mergeType(com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataType value) {
        if (typeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            type_ != null &&
            type_ != com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataType.getDefaultInstance()) {
            getTypeBuilder().mergeFrom(value);
          } else {
            type_ = value;
          }
        } else {
          typeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.common.IrDataType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = null;
        if (typeBuilder_ != null) {
          typeBuilder_.dispose();
          typeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.common.IrDataType type = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataType.Builder getTypeBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>.common.IrDataType type = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataTypeOrBuilder getTypeOrBuilder() {
        if (typeBuilder_ != null) {
          return typeBuilder_.getMessageOrBuilder();
        } else {
          return type_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataType.getDefaultInstance() : type_;
        }
      }
      /**
       * <code>.common.IrDataType type = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataType, com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataType.Builder, com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataTypeOrBuilder> 
          getTypeFieldBuilder() {
        if (typeBuilder_ == null) {
          typeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataType, com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataType.Builder, com.alibaba.graphscope.ldbc.workload.proto.DataType.IrDataTypeOrBuilder>(
                  getType(),
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        return typeBuilder_;
      }

      private int alias_ ;
      /**
       * <code>int32 alias = 2;</code>
       * @return The alias.
       */
      @java.lang.Override
      public int getAlias() {
        return alias_;
      }
      /**
       * <code>int32 alias = 2;</code>
       * @param value The alias to set.
       * @return This builder for chaining.
       */
      public Builder setAlias(int value) {

        alias_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>int32 alias = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAlias() {
        bitField0_ = (bitField0_ & ~0x00000002);
        alias_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.MetaData)
    }

    // @@protoc_insertion_point(class_scope:algebra.MetaData)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MetaData>
        PARSER = new com.google.protobuf.AbstractParser<MetaData>() {
      @java.lang.Override
      public MetaData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MetaData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MetaData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProjectOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.Project)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A list of [expression -&gt; alias] to be projected from the graph relation.
     * e.g., project_{a.birthday / 100 % 100 as birth_month }
     * </pre>
     *
     * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
     */
    java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias> 
        getMappingsList();
    /**
     * <pre>
     * A list of [expression -&gt; alias] to be projected from the graph relation.
     * e.g., project_{a.birthday / 100 % 100 as birth_month }
     * </pre>
     *
     * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias getMappings(int index);
    /**
     * <pre>
     * A list of [expression -&gt; alias] to be projected from the graph relation.
     * e.g., project_{a.birthday / 100 % 100 as birth_month }
     * </pre>
     *
     * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
     */
    int getMappingsCount();
    /**
     * <pre>
     * A list of [expression -&gt; alias] to be projected from the graph relation.
     * e.g., project_{a.birthday / 100 % 100 as birth_month }
     * </pre>
     *
     * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
     */
    java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAliasOrBuilder> 
        getMappingsOrBuilderList();
    /**
     * <pre>
     * A list of [expression -&gt; alias] to be projected from the graph relation.
     * e.g., project_{a.birthday / 100 % 100 as birth_month }
     * </pre>
     *
     * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAliasOrBuilder getMappingsOrBuilder(
        int index);

    /**
     * <pre>
     * An indicator to tell the runtime whether the projected value is appending to or replacing
     * existing relation.
     * </pre>
     *
     * <code>bool is_append = 2;</code>
     * @return The isAppend.
     */
    boolean getIsAppend();

    /**
     * <pre>
     * The datatype of output results
     * </pre>
     *
     * <code>repeated .algebra.MetaData meta_data = 3;</code>
     */
    java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData> 
        getMetaDataList();
    /**
     * <pre>
     * The datatype of output results
     * </pre>
     *
     * <code>repeated .algebra.MetaData meta_data = 3;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData getMetaData(int index);
    /**
     * <pre>
     * The datatype of output results
     * </pre>
     *
     * <code>repeated .algebra.MetaData meta_data = 3;</code>
     */
    int getMetaDataCount();
    /**
     * <pre>
     * The datatype of output results
     * </pre>
     *
     * <code>repeated .algebra.MetaData meta_data = 3;</code>
     */
    java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder> 
        getMetaDataOrBuilderList();
    /**
     * <pre>
     * The datatype of output results
     * </pre>
     *
     * <code>repeated .algebra.MetaData meta_data = 3;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder getMetaDataOrBuilder(
        int index);
  }
  /**
   * <pre>
   * To project a relation on certain attributes or further their properties
   * </pre>
   *
   * Protobuf type {@code algebra.Project}
   */
  public static final class Project extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.Project)
      ProjectOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Project.newBuilder() to construct.
    private Project(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Project() {
      mappings_ = java.util.Collections.emptyList();
      metaData_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Project();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Project_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Project_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.Builder.class);
    }

    public interface ExprAliasOrBuilder extends
        // @@protoc_insertion_point(interface_extends:algebra.Project.ExprAlias)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The expression to be aliased
       * </pre>
       *
       * <code>.common.Expression expr = 1;</code>
       * @return Whether the expr field is set.
       */
      boolean hasExpr();
      /**
       * <pre>
       * The expression to be aliased
       * </pre>
       *
       * <code>.common.Expression expr = 1;</code>
       * @return The expr.
       */
      com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression getExpr();
      /**
       * <pre>
       * The expression to be aliased
       * </pre>
       *
       * <code>.common.Expression expr = 1;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.ExpressionOrBuilder getExprOrBuilder();

      /**
       * <pre>
       * The alias that is either given by the query or by the system
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       * @return Whether the alias field is set.
       */
      boolean hasAlias();
      /**
       * <pre>
       * The alias that is either given by the query or by the system
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       * @return The alias.
       */
      com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias();
      /**
       * <pre>
       * The alias that is either given by the query or by the system
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder();
    }
    /**
     * Protobuf type {@code algebra.Project.ExprAlias}
     */
    public static final class ExprAlias extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:algebra.Project.ExprAlias)
        ExprAliasOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ExprAlias.newBuilder() to construct.
      private ExprAlias(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ExprAlias() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ExprAlias();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Project_ExprAlias_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Project_ExprAlias_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias.Builder.class);
      }

      public static final int EXPR_FIELD_NUMBER = 1;
      private com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression expr_;
      /**
       * <pre>
       * The expression to be aliased
       * </pre>
       *
       * <code>.common.Expression expr = 1;</code>
       * @return Whether the expr field is set.
       */
      @java.lang.Override
      public boolean hasExpr() {
        return expr_ != null;
      }
      /**
       * <pre>
       * The expression to be aliased
       * </pre>
       *
       * <code>.common.Expression expr = 1;</code>
       * @return The expr.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression getExpr() {
        return expr_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.getDefaultInstance() : expr_;
      }
      /**
       * <pre>
       * The expression to be aliased
       * </pre>
       *
       * <code>.common.Expression expr = 1;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.ExpressionOrBuilder getExprOrBuilder() {
        return expr_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.getDefaultInstance() : expr_;
      }

      public static final int ALIAS_FIELD_NUMBER = 2;
      private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId alias_;
      /**
       * <pre>
       * The alias that is either given by the query or by the system
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       * @return Whether the alias field is set.
       */
      @java.lang.Override
      public boolean hasAlias() {
        return alias_ != null;
      }
      /**
       * <pre>
       * The alias that is either given by the query or by the system
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       * @return The alias.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias() {
        return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
      }
      /**
       * <pre>
       * The alias that is either given by the query or by the system
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder() {
        return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (expr_ != null) {
          output.writeMessage(1, getExpr());
        }
        if (alias_ != null) {
          output.writeMessage(2, getAlias());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (expr_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getExpr());
        }
        if (alias_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getAlias());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias)) {
          return super.equals(obj);
        }
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias) obj;

        if (hasExpr() != other.hasExpr()) return false;
        if (hasExpr()) {
          if (!getExpr()
              .equals(other.getExpr())) return false;
        }
        if (hasAlias() != other.hasAlias()) return false;
        if (hasAlias()) {
          if (!getAlias()
              .equals(other.getAlias())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasExpr()) {
          hash = (37 * hash) + EXPR_FIELD_NUMBER;
          hash = (53 * hash) + getExpr().hashCode();
        }
        if (hasAlias()) {
          hash = (37 * hash) + ALIAS_FIELD_NUMBER;
          hash = (53 * hash) + getAlias().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code algebra.Project.ExprAlias}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:algebra.Project.ExprAlias)
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAliasOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Project_ExprAlias_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Project_ExprAlias_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias.Builder.class);
        }

        // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          expr_ = null;
          if (exprBuilder_ != null) {
            exprBuilder_.dispose();
            exprBuilder_ = null;
          }
          alias_ = null;
          if (aliasBuilder_ != null) {
            aliasBuilder_.dispose();
            aliasBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Project_ExprAlias_descriptor;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias getDefaultInstanceForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias.getDefaultInstance();
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias build() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias buildPartial() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.expr_ = exprBuilder_ == null
                ? expr_
                : exprBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.alias_ = aliasBuilder_ == null
                ? alias_
                : aliasBuilder_.build();
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias) {
            return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias other) {
          if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias.getDefaultInstance()) return this;
          if (other.hasExpr()) {
            mergeExpr(other.getExpr());
          }
          if (other.hasAlias()) {
            mergeAlias(other.getAlias());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getExprFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 18: {
                  input.readMessage(
                      getAliasFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression expr_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.ExpressionOrBuilder> exprBuilder_;
        /**
         * <pre>
         * The expression to be aliased
         * </pre>
         *
         * <code>.common.Expression expr = 1;</code>
         * @return Whether the expr field is set.
         */
        public boolean hasExpr() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * The expression to be aliased
         * </pre>
         *
         * <code>.common.Expression expr = 1;</code>
         * @return The expr.
         */
        public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression getExpr() {
          if (exprBuilder_ == null) {
            return expr_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.getDefaultInstance() : expr_;
          } else {
            return exprBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The expression to be aliased
         * </pre>
         *
         * <code>.common.Expression expr = 1;</code>
         */
        public Builder setExpr(com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression value) {
          if (exprBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            expr_ = value;
          } else {
            exprBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The expression to be aliased
         * </pre>
         *
         * <code>.common.Expression expr = 1;</code>
         */
        public Builder setExpr(
            com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.Builder builderForValue) {
          if (exprBuilder_ == null) {
            expr_ = builderForValue.build();
          } else {
            exprBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The expression to be aliased
         * </pre>
         *
         * <code>.common.Expression expr = 1;</code>
         */
        public Builder mergeExpr(com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression value) {
          if (exprBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0) &&
              expr_ != null &&
              expr_ != com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.getDefaultInstance()) {
              getExprBuilder().mergeFrom(value);
            } else {
              expr_ = value;
            }
          } else {
            exprBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The expression to be aliased
         * </pre>
         *
         * <code>.common.Expression expr = 1;</code>
         */
        public Builder clearExpr() {
          bitField0_ = (bitField0_ & ~0x00000001);
          expr_ = null;
          if (exprBuilder_ != null) {
            exprBuilder_.dispose();
            exprBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The expression to be aliased
         * </pre>
         *
         * <code>.common.Expression expr = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.Builder getExprBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getExprFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The expression to be aliased
         * </pre>
         *
         * <code>.common.Expression expr = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.ExpressionOrBuilder getExprOrBuilder() {
          if (exprBuilder_ != null) {
            return exprBuilder_.getMessageOrBuilder();
          } else {
            return expr_ == null ?
                com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.getDefaultInstance() : expr_;
          }
        }
        /**
         * <pre>
         * The expression to be aliased
         * </pre>
         *
         * <code>.common.Expression expr = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.ExpressionOrBuilder> 
            getExprFieldBuilder() {
          if (exprBuilder_ == null) {
            exprBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.ExpressionOrBuilder>(
                    getExpr(),
                    getParentForChildren(),
                    isClean());
            expr_ = null;
          }
          return exprBuilder_;
        }

        private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId alias_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> aliasBuilder_;
        /**
         * <pre>
         * The alias that is either given by the query or by the system
         * </pre>
         *
         * <code>.common.NameOrId alias = 2;</code>
         * @return Whether the alias field is set.
         */
        public boolean hasAlias() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * The alias that is either given by the query or by the system
         * </pre>
         *
         * <code>.common.NameOrId alias = 2;</code>
         * @return The alias.
         */
        public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias() {
          if (aliasBuilder_ == null) {
            return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
          } else {
            return aliasBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The alias that is either given by the query or by the system
         * </pre>
         *
         * <code>.common.NameOrId alias = 2;</code>
         */
        public Builder setAlias(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
          if (aliasBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            alias_ = value;
          } else {
            aliasBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The alias that is either given by the query or by the system
         * </pre>
         *
         * <code>.common.NameOrId alias = 2;</code>
         */
        public Builder setAlias(
            com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
          if (aliasBuilder_ == null) {
            alias_ = builderForValue.build();
          } else {
            aliasBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The alias that is either given by the query or by the system
         * </pre>
         *
         * <code>.common.NameOrId alias = 2;</code>
         */
        public Builder mergeAlias(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
          if (aliasBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0) &&
              alias_ != null &&
              alias_ != com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance()) {
              getAliasBuilder().mergeFrom(value);
            } else {
              alias_ = value;
            }
          } else {
            aliasBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The alias that is either given by the query or by the system
         * </pre>
         *
         * <code>.common.NameOrId alias = 2;</code>
         */
        public Builder clearAlias() {
          bitField0_ = (bitField0_ & ~0x00000002);
          alias_ = null;
          if (aliasBuilder_ != null) {
            aliasBuilder_.dispose();
            aliasBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The alias that is either given by the query or by the system
         * </pre>
         *
         * <code>.common.NameOrId alias = 2;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder getAliasBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getAliasFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The alias that is either given by the query or by the system
         * </pre>
         *
         * <code>.common.NameOrId alias = 2;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder() {
          if (aliasBuilder_ != null) {
            return aliasBuilder_.getMessageOrBuilder();
          } else {
            return alias_ == null ?
                com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
          }
        }
        /**
         * <pre>
         * The alias that is either given by the query or by the system
         * </pre>
         *
         * <code>.common.NameOrId alias = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
            getAliasFieldBuilder() {
          if (aliasBuilder_ == null) {
            aliasBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder>(
                    getAlias(),
                    getParentForChildren(),
                    isClean());
            alias_ = null;
          }
          return aliasBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:algebra.Project.ExprAlias)
      }

      // @@protoc_insertion_point(class_scope:algebra.Project.ExprAlias)
      private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias();
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ExprAlias>
          PARSER = new com.google.protobuf.AbstractParser<ExprAlias>() {
        @java.lang.Override
        public ExprAlias parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ExprAlias> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ExprAlias> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int MAPPINGS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias> mappings_;
    /**
     * <pre>
     * A list of [expression -&gt; alias] to be projected from the graph relation.
     * e.g., project_{a.birthday / 100 % 100 as birth_month }
     * </pre>
     *
     * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias> getMappingsList() {
      return mappings_;
    }
    /**
     * <pre>
     * A list of [expression -&gt; alias] to be projected from the graph relation.
     * e.g., project_{a.birthday / 100 % 100 as birth_month }
     * </pre>
     *
     * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAliasOrBuilder> 
        getMappingsOrBuilderList() {
      return mappings_;
    }
    /**
     * <pre>
     * A list of [expression -&gt; alias] to be projected from the graph relation.
     * e.g., project_{a.birthday / 100 % 100 as birth_month }
     * </pre>
     *
     * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
     */
    @java.lang.Override
    public int getMappingsCount() {
      return mappings_.size();
    }
    /**
     * <pre>
     * A list of [expression -&gt; alias] to be projected from the graph relation.
     * e.g., project_{a.birthday / 100 % 100 as birth_month }
     * </pre>
     *
     * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias getMappings(int index) {
      return mappings_.get(index);
    }
    /**
     * <pre>
     * A list of [expression -&gt; alias] to be projected from the graph relation.
     * e.g., project_{a.birthday / 100 % 100 as birth_month }
     * </pre>
     *
     * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAliasOrBuilder getMappingsOrBuilder(
        int index) {
      return mappings_.get(index);
    }

    public static final int IS_APPEND_FIELD_NUMBER = 2;
    private boolean isAppend_ = false;
    /**
     * <pre>
     * An indicator to tell the runtime whether the projected value is appending to or replacing
     * existing relation.
     * </pre>
     *
     * <code>bool is_append = 2;</code>
     * @return The isAppend.
     */
    @java.lang.Override
    public boolean getIsAppend() {
      return isAppend_;
    }

    public static final int META_DATA_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData> metaData_;
    /**
     * <pre>
     * The datatype of output results
     * </pre>
     *
     * <code>repeated .algebra.MetaData meta_data = 3;</code>
     */
    @java.lang.Override
    public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData> getMetaDataList() {
      return metaData_;
    }
    /**
     * <pre>
     * The datatype of output results
     * </pre>
     *
     * <code>repeated .algebra.MetaData meta_data = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder> 
        getMetaDataOrBuilderList() {
      return metaData_;
    }
    /**
     * <pre>
     * The datatype of output results
     * </pre>
     *
     * <code>repeated .algebra.MetaData meta_data = 3;</code>
     */
    @java.lang.Override
    public int getMetaDataCount() {
      return metaData_.size();
    }
    /**
     * <pre>
     * The datatype of output results
     * </pre>
     *
     * <code>repeated .algebra.MetaData meta_data = 3;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData getMetaData(int index) {
      return metaData_.get(index);
    }
    /**
     * <pre>
     * The datatype of output results
     * </pre>
     *
     * <code>repeated .algebra.MetaData meta_data = 3;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder getMetaDataOrBuilder(
        int index) {
      return metaData_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < mappings_.size(); i++) {
        output.writeMessage(1, mappings_.get(i));
      }
      if (isAppend_ != false) {
        output.writeBool(2, isAppend_);
      }
      for (int i = 0; i < metaData_.size(); i++) {
        output.writeMessage(3, metaData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < mappings_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, mappings_.get(i));
      }
      if (isAppend_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isAppend_);
      }
      for (int i = 0; i < metaData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, metaData_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project) obj;

      if (!getMappingsList()
          .equals(other.getMappingsList())) return false;
      if (getIsAppend()
          != other.getIsAppend()) return false;
      if (!getMetaDataList()
          .equals(other.getMetaDataList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getMappingsCount() > 0) {
        hash = (37 * hash) + MAPPINGS_FIELD_NUMBER;
        hash = (53 * hash) + getMappingsList().hashCode();
      }
      hash = (37 * hash) + IS_APPEND_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsAppend());
      if (getMetaDataCount() > 0) {
        hash = (37 * hash) + META_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetaDataList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * To project a relation on certain attributes or further their properties
     * </pre>
     *
     * Protobuf type {@code algebra.Project}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.Project)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ProjectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Project_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Project_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (mappingsBuilder_ == null) {
          mappings_ = java.util.Collections.emptyList();
        } else {
          mappings_ = null;
          mappingsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        isAppend_ = false;
        if (metaDataBuilder_ == null) {
          metaData_ = java.util.Collections.emptyList();
        } else {
          metaData_ = null;
          metaDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Project_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project result) {
        if (mappingsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            mappings_ = java.util.Collections.unmodifiableList(mappings_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.mappings_ = mappings_;
        } else {
          result.mappings_ = mappingsBuilder_.build();
        }
        if (metaDataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            metaData_ = java.util.Collections.unmodifiableList(metaData_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.metaData_ = metaData_;
        } else {
          result.metaData_ = metaDataBuilder_.build();
        }
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.isAppend_ = isAppend_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.getDefaultInstance()) return this;
        if (mappingsBuilder_ == null) {
          if (!other.mappings_.isEmpty()) {
            if (mappings_.isEmpty()) {
              mappings_ = other.mappings_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMappingsIsMutable();
              mappings_.addAll(other.mappings_);
            }
            onChanged();
          }
        } else {
          if (!other.mappings_.isEmpty()) {
            if (mappingsBuilder_.isEmpty()) {
              mappingsBuilder_.dispose();
              mappingsBuilder_ = null;
              mappings_ = other.mappings_;
              bitField0_ = (bitField0_ & ~0x00000001);
              mappingsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMappingsFieldBuilder() : null;
            } else {
              mappingsBuilder_.addAllMessages(other.mappings_);
            }
          }
        }
        if (other.getIsAppend() != false) {
          setIsAppend(other.getIsAppend());
        }
        if (metaDataBuilder_ == null) {
          if (!other.metaData_.isEmpty()) {
            if (metaData_.isEmpty()) {
              metaData_ = other.metaData_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureMetaDataIsMutable();
              metaData_.addAll(other.metaData_);
            }
            onChanged();
          }
        } else {
          if (!other.metaData_.isEmpty()) {
            if (metaDataBuilder_.isEmpty()) {
              metaDataBuilder_.dispose();
              metaDataBuilder_ = null;
              metaData_ = other.metaData_;
              bitField0_ = (bitField0_ & ~0x00000004);
              metaDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMetaDataFieldBuilder() : null;
            } else {
              metaDataBuilder_.addAllMessages(other.metaData_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias m =
                    input.readMessage(
                        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias.parser(),
                        extensionRegistry);
                if (mappingsBuilder_ == null) {
                  ensureMappingsIsMutable();
                  mappings_.add(m);
                } else {
                  mappingsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 16: {
                isAppend_ = input.readBool();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData m =
                    input.readMessage(
                        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.parser(),
                        extensionRegistry);
                if (metaDataBuilder_ == null) {
                  ensureMetaDataIsMutable();
                  metaData_.add(m);
                } else {
                  metaDataBuilder_.addMessage(m);
                }
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias> mappings_ =
        java.util.Collections.emptyList();
      private void ensureMappingsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          mappings_ = new java.util.ArrayList<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias>(mappings_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAliasOrBuilder> mappingsBuilder_;

      /**
       * <pre>
       * A list of [expression -&gt; alias] to be projected from the graph relation.
       * e.g., project_{a.birthday / 100 % 100 as birth_month }
       * </pre>
       *
       * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias> getMappingsList() {
        if (mappingsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mappings_);
        } else {
          return mappingsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A list of [expression -&gt; alias] to be projected from the graph relation.
       * e.g., project_{a.birthday / 100 % 100 as birth_month }
       * </pre>
       *
       * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
       */
      public int getMappingsCount() {
        if (mappingsBuilder_ == null) {
          return mappings_.size();
        } else {
          return mappingsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A list of [expression -&gt; alias] to be projected from the graph relation.
       * e.g., project_{a.birthday / 100 % 100 as birth_month }
       * </pre>
       *
       * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias getMappings(int index) {
        if (mappingsBuilder_ == null) {
          return mappings_.get(index);
        } else {
          return mappingsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A list of [expression -&gt; alias] to be projected from the graph relation.
       * e.g., project_{a.birthday / 100 % 100 as birth_month }
       * </pre>
       *
       * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
       */
      public Builder setMappings(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias value) {
        if (mappingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingsIsMutable();
          mappings_.set(index, value);
          onChanged();
        } else {
          mappingsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of [expression -&gt; alias] to be projected from the graph relation.
       * e.g., project_{a.birthday / 100 % 100 as birth_month }
       * </pre>
       *
       * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
       */
      public Builder setMappings(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias.Builder builderForValue) {
        if (mappingsBuilder_ == null) {
          ensureMappingsIsMutable();
          mappings_.set(index, builderForValue.build());
          onChanged();
        } else {
          mappingsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of [expression -&gt; alias] to be projected from the graph relation.
       * e.g., project_{a.birthday / 100 % 100 as birth_month }
       * </pre>
       *
       * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
       */
      public Builder addMappings(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias value) {
        if (mappingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingsIsMutable();
          mappings_.add(value);
          onChanged();
        } else {
          mappingsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of [expression -&gt; alias] to be projected from the graph relation.
       * e.g., project_{a.birthday / 100 % 100 as birth_month }
       * </pre>
       *
       * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
       */
      public Builder addMappings(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias value) {
        if (mappingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingsIsMutable();
          mappings_.add(index, value);
          onChanged();
        } else {
          mappingsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of [expression -&gt; alias] to be projected from the graph relation.
       * e.g., project_{a.birthday / 100 % 100 as birth_month }
       * </pre>
       *
       * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
       */
      public Builder addMappings(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias.Builder builderForValue) {
        if (mappingsBuilder_ == null) {
          ensureMappingsIsMutable();
          mappings_.add(builderForValue.build());
          onChanged();
        } else {
          mappingsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of [expression -&gt; alias] to be projected from the graph relation.
       * e.g., project_{a.birthday / 100 % 100 as birth_month }
       * </pre>
       *
       * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
       */
      public Builder addMappings(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias.Builder builderForValue) {
        if (mappingsBuilder_ == null) {
          ensureMappingsIsMutable();
          mappings_.add(index, builderForValue.build());
          onChanged();
        } else {
          mappingsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of [expression -&gt; alias] to be projected from the graph relation.
       * e.g., project_{a.birthday / 100 % 100 as birth_month }
       * </pre>
       *
       * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
       */
      public Builder addAllMappings(
          java.lang.Iterable<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias> values) {
        if (mappingsBuilder_ == null) {
          ensureMappingsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, mappings_);
          onChanged();
        } else {
          mappingsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A list of [expression -&gt; alias] to be projected from the graph relation.
       * e.g., project_{a.birthday / 100 % 100 as birth_month }
       * </pre>
       *
       * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
       */
      public Builder clearMappings() {
        if (mappingsBuilder_ == null) {
          mappings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          mappingsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A list of [expression -&gt; alias] to be projected from the graph relation.
       * e.g., project_{a.birthday / 100 % 100 as birth_month }
       * </pre>
       *
       * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
       */
      public Builder removeMappings(int index) {
        if (mappingsBuilder_ == null) {
          ensureMappingsIsMutable();
          mappings_.remove(index);
          onChanged();
        } else {
          mappingsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A list of [expression -&gt; alias] to be projected from the graph relation.
       * e.g., project_{a.birthday / 100 % 100 as birth_month }
       * </pre>
       *
       * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias.Builder getMappingsBuilder(
          int index) {
        return getMappingsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A list of [expression -&gt; alias] to be projected from the graph relation.
       * e.g., project_{a.birthday / 100 % 100 as birth_month }
       * </pre>
       *
       * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAliasOrBuilder getMappingsOrBuilder(
          int index) {
        if (mappingsBuilder_ == null) {
          return mappings_.get(index);  } else {
          return mappingsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A list of [expression -&gt; alias] to be projected from the graph relation.
       * e.g., project_{a.birthday / 100 % 100 as birth_month }
       * </pre>
       *
       * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
       */
      public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAliasOrBuilder> 
           getMappingsOrBuilderList() {
        if (mappingsBuilder_ != null) {
          return mappingsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mappings_);
        }
      }
      /**
       * <pre>
       * A list of [expression -&gt; alias] to be projected from the graph relation.
       * e.g., project_{a.birthday / 100 % 100 as birth_month }
       * </pre>
       *
       * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias.Builder addMappingsBuilder() {
        return getMappingsFieldBuilder().addBuilder(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of [expression -&gt; alias] to be projected from the graph relation.
       * e.g., project_{a.birthday / 100 % 100 as birth_month }
       * </pre>
       *
       * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias.Builder addMappingsBuilder(
          int index) {
        return getMappingsFieldBuilder().addBuilder(
            index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of [expression -&gt; alias] to be projected from the graph relation.
       * e.g., project_{a.birthday / 100 % 100 as birth_month }
       * </pre>
       *
       * <code>repeated .algebra.Project.ExprAlias mappings = 1;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias.Builder> 
           getMappingsBuilderList() {
        return getMappingsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAliasOrBuilder> 
          getMappingsFieldBuilder() {
        if (mappingsBuilder_ == null) {
          mappingsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAlias.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.ExprAliasOrBuilder>(
                  mappings_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          mappings_ = null;
        }
        return mappingsBuilder_;
      }

      private boolean isAppend_ ;
      /**
       * <pre>
       * An indicator to tell the runtime whether the projected value is appending to or replacing
       * existing relation.
       * </pre>
       *
       * <code>bool is_append = 2;</code>
       * @return The isAppend.
       */
      @java.lang.Override
      public boolean getIsAppend() {
        return isAppend_;
      }
      /**
       * <pre>
       * An indicator to tell the runtime whether the projected value is appending to or replacing
       * existing relation.
       * </pre>
       *
       * <code>bool is_append = 2;</code>
       * @param value The isAppend to set.
       * @return This builder for chaining.
       */
      public Builder setIsAppend(boolean value) {

        isAppend_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An indicator to tell the runtime whether the projected value is appending to or replacing
       * existing relation.
       * </pre>
       *
       * <code>bool is_append = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsAppend() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isAppend_ = false;
        onChanged();
        return this;
      }

      private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData> metaData_ =
        java.util.Collections.emptyList();
      private void ensureMetaDataIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          metaData_ = new java.util.ArrayList<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData>(metaData_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder> metaDataBuilder_;

      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData> getMetaDataList() {
        if (metaDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaData_);
        } else {
          return metaDataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public int getMetaDataCount() {
        if (metaDataBuilder_ == null) {
          return metaData_.size();
        } else {
          return metaDataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData getMetaData(int index) {
        if (metaDataBuilder_ == null) {
          return metaData_.get(index);
        } else {
          return metaDataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public Builder setMetaData(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData value) {
        if (metaDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaDataIsMutable();
          metaData_.set(index, value);
          onChanged();
        } else {
          metaDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public Builder setMetaData(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder builderForValue) {
        if (metaDataBuilder_ == null) {
          ensureMetaDataIsMutable();
          metaData_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public Builder addMetaData(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData value) {
        if (metaDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaDataIsMutable();
          metaData_.add(value);
          onChanged();
        } else {
          metaDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public Builder addMetaData(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData value) {
        if (metaDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaDataIsMutable();
          metaData_.add(index, value);
          onChanged();
        } else {
          metaDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public Builder addMetaData(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder builderForValue) {
        if (metaDataBuilder_ == null) {
          ensureMetaDataIsMutable();
          metaData_.add(builderForValue.build());
          onChanged();
        } else {
          metaDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public Builder addMetaData(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder builderForValue) {
        if (metaDataBuilder_ == null) {
          ensureMetaDataIsMutable();
          metaData_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public Builder addAllMetaData(
          java.lang.Iterable<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData> values) {
        if (metaDataBuilder_ == null) {
          ensureMetaDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaData_);
          onChanged();
        } else {
          metaDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public Builder clearMetaData() {
        if (metaDataBuilder_ == null) {
          metaData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          metaDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public Builder removeMetaData(int index) {
        if (metaDataBuilder_ == null) {
          ensureMetaDataIsMutable();
          metaData_.remove(index);
          onChanged();
        } else {
          metaDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder getMetaDataBuilder(
          int index) {
        return getMetaDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder getMetaDataOrBuilder(
          int index) {
        if (metaDataBuilder_ == null) {
          return metaData_.get(index);  } else {
          return metaDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder> 
           getMetaDataOrBuilderList() {
        if (metaDataBuilder_ != null) {
          return metaDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaData_);
        }
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder addMetaDataBuilder() {
        return getMetaDataFieldBuilder().addBuilder(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance());
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder addMetaDataBuilder(
          int index) {
        return getMetaDataFieldBuilder().addBuilder(
            index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance());
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder> 
           getMetaDataBuilderList() {
        return getMetaDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder> 
          getMetaDataFieldBuilder() {
        if (metaDataBuilder_ == null) {
          metaDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder>(
                  metaData_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          metaData_ = null;
        }
        return metaDataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.Project)
    }

    // @@protoc_insertion_point(class_scope:algebra.Project)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Project>
        PARSER = new com.google.protobuf.AbstractParser<Project>() {
      @java.lang.Override
      public Project parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Project> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Project> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SelectOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.Select)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A predicate formulated as an expression tree
     * </pre>
     *
     * <code>.common.Expression predicate = 1;</code>
     * @return Whether the predicate field is set.
     */
    boolean hasPredicate();
    /**
     * <pre>
     * A predicate formulated as an expression tree
     * </pre>
     *
     * <code>.common.Expression predicate = 1;</code>
     * @return The predicate.
     */
    com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression getPredicate();
    /**
     * <pre>
     * A predicate formulated as an expression tree
     * </pre>
     *
     * <code>.common.Expression predicate = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.ExpressionOrBuilder getPredicateOrBuilder();
  }
  /**
   * <pre>
   * To filter a relation based on a given predicate
   * </pre>
   *
   * Protobuf type {@code algebra.Select}
   */
  public static final class Select extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.Select)
      SelectOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Select.newBuilder() to construct.
    private Select(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Select() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Select();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Select_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Select_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.Builder.class);
    }

    public static final int PREDICATE_FIELD_NUMBER = 1;
    private com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression predicate_;
    /**
     * <pre>
     * A predicate formulated as an expression tree
     * </pre>
     *
     * <code>.common.Expression predicate = 1;</code>
     * @return Whether the predicate field is set.
     */
    @java.lang.Override
    public boolean hasPredicate() {
      return predicate_ != null;
    }
    /**
     * <pre>
     * A predicate formulated as an expression tree
     * </pre>
     *
     * <code>.common.Expression predicate = 1;</code>
     * @return The predicate.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression getPredicate() {
      return predicate_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.getDefaultInstance() : predicate_;
    }
    /**
     * <pre>
     * A predicate formulated as an expression tree
     * </pre>
     *
     * <code>.common.Expression predicate = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.ExpressionOrBuilder getPredicateOrBuilder() {
      return predicate_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.getDefaultInstance() : predicate_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (predicate_ != null) {
        output.writeMessage(1, getPredicate());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (predicate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPredicate());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select) obj;

      if (hasPredicate() != other.hasPredicate()) return false;
      if (hasPredicate()) {
        if (!getPredicate()
            .equals(other.getPredicate())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPredicate()) {
        hash = (37 * hash) + PREDICATE_FIELD_NUMBER;
        hash = (53 * hash) + getPredicate().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * To filter a relation based on a given predicate
     * </pre>
     *
     * Protobuf type {@code algebra.Select}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.Select)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SelectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Select_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Select_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        predicate_ = null;
        if (predicateBuilder_ != null) {
          predicateBuilder_.dispose();
          predicateBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Select_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.predicate_ = predicateBuilder_ == null
              ? predicate_
              : predicateBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.getDefaultInstance()) return this;
        if (other.hasPredicate()) {
          mergePredicate(other.getPredicate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getPredicateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression predicate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.ExpressionOrBuilder> predicateBuilder_;
      /**
       * <pre>
       * A predicate formulated as an expression tree
       * </pre>
       *
       * <code>.common.Expression predicate = 1;</code>
       * @return Whether the predicate field is set.
       */
      public boolean hasPredicate() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * A predicate formulated as an expression tree
       * </pre>
       *
       * <code>.common.Expression predicate = 1;</code>
       * @return The predicate.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression getPredicate() {
        if (predicateBuilder_ == null) {
          return predicate_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.getDefaultInstance() : predicate_;
        } else {
          return predicateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * A predicate formulated as an expression tree
       * </pre>
       *
       * <code>.common.Expression predicate = 1;</code>
       */
      public Builder setPredicate(com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression value) {
        if (predicateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          predicate_ = value;
        } else {
          predicateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A predicate formulated as an expression tree
       * </pre>
       *
       * <code>.common.Expression predicate = 1;</code>
       */
      public Builder setPredicate(
          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.Builder builderForValue) {
        if (predicateBuilder_ == null) {
          predicate_ = builderForValue.build();
        } else {
          predicateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A predicate formulated as an expression tree
       * </pre>
       *
       * <code>.common.Expression predicate = 1;</code>
       */
      public Builder mergePredicate(com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression value) {
        if (predicateBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            predicate_ != null &&
            predicate_ != com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.getDefaultInstance()) {
            getPredicateBuilder().mergeFrom(value);
          } else {
            predicate_ = value;
          }
        } else {
          predicateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A predicate formulated as an expression tree
       * </pre>
       *
       * <code>.common.Expression predicate = 1;</code>
       */
      public Builder clearPredicate() {
        bitField0_ = (bitField0_ & ~0x00000001);
        predicate_ = null;
        if (predicateBuilder_ != null) {
          predicateBuilder_.dispose();
          predicateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A predicate formulated as an expression tree
       * </pre>
       *
       * <code>.common.Expression predicate = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.Builder getPredicateBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPredicateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * A predicate formulated as an expression tree
       * </pre>
       *
       * <code>.common.Expression predicate = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.ExpressionOrBuilder getPredicateOrBuilder() {
        if (predicateBuilder_ != null) {
          return predicateBuilder_.getMessageOrBuilder();
        } else {
          return predicate_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.getDefaultInstance() : predicate_;
        }
      }
      /**
       * <pre>
       * A predicate formulated as an expression tree
       * </pre>
       *
       * <code>.common.Expression predicate = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.ExpressionOrBuilder> 
          getPredicateFieldBuilder() {
        if (predicateBuilder_ == null) {
          predicateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.ExpressionOrBuilder>(
                  getPredicate(),
                  getParentForChildren(),
                  isClean());
          predicate_ = null;
        }
        return predicateBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.Select)
    }

    // @@protoc_insertion_point(class_scope:algebra.Select)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Select>
        PARSER = new com.google.protobuf.AbstractParser<Select>() {
      @java.lang.Override
      public Select parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Select> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Select> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface JoinOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.Join)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * TODO(longbin) An expression-ish predicate here is a more general form:
     * We currently only support the predicate of the equality of the given keys of both relations are equal.
     * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
     * participants.
     * </pre>
     *
     * <code>repeated .common.Variable left_keys = 1;</code>
     */
    java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable> 
        getLeftKeysList();
    /**
     * <pre>
     * TODO(longbin) An expression-ish predicate here is a more general form:
     * We currently only support the predicate of the equality of the given keys of both relations are equal.
     * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
     * participants.
     * </pre>
     *
     * <code>repeated .common.Variable left_keys = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable getLeftKeys(int index);
    /**
     * <pre>
     * TODO(longbin) An expression-ish predicate here is a more general form:
     * We currently only support the predicate of the equality of the given keys of both relations are equal.
     * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
     * participants.
     * </pre>
     *
     * <code>repeated .common.Variable left_keys = 1;</code>
     */
    int getLeftKeysCount();
    /**
     * <pre>
     * TODO(longbin) An expression-ish predicate here is a more general form:
     * We currently only support the predicate of the equality of the given keys of both relations are equal.
     * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
     * participants.
     * </pre>
     *
     * <code>repeated .common.Variable left_keys = 1;</code>
     */
    java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> 
        getLeftKeysOrBuilderList();
    /**
     * <pre>
     * TODO(longbin) An expression-ish predicate here is a more general form:
     * We currently only support the predicate of the equality of the given keys of both relations are equal.
     * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
     * participants.
     * </pre>
     *
     * <code>repeated .common.Variable left_keys = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder getLeftKeysOrBuilder(
        int index);

    /**
     * <code>repeated .common.Variable right_keys = 2;</code>
     */
    java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable> 
        getRightKeysList();
    /**
     * <code>repeated .common.Variable right_keys = 2;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable getRightKeys(int index);
    /**
     * <code>repeated .common.Variable right_keys = 2;</code>
     */
    int getRightKeysCount();
    /**
     * <code>repeated .common.Variable right_keys = 2;</code>
     */
    java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> 
        getRightKeysOrBuilderList();
    /**
     * <code>repeated .common.Variable right_keys = 2;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder getRightKeysOrBuilder(
        int index);

    /**
     * <code>.algebra.Join.JoinKind kind = 3;</code>
     * @return The enum numeric value on the wire for kind.
     */
    int getKindValue();
    /**
     * <code>.algebra.Join.JoinKind kind = 3;</code>
     * @return The kind.
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind getKind();
  }
  /**
   * <pre>
   * Join two relations based on certain predicate.
   * </pre>
   *
   * Protobuf type {@code algebra.Join}
   */
  public static final class Join extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.Join)
      JoinOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Join.newBuilder() to construct.
    private Join(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Join() {
      leftKeys_ = java.util.Collections.emptyList();
      rightKeys_ = java.util.Collections.emptyList();
      kind_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Join();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Join_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Join_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.Builder.class);
    }

    /**
     * Protobuf enum {@code algebra.Join.JoinKind}
     */
    public enum JoinKind
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Inner join
       * </pre>
       *
       * <code>INNER = 0;</code>
       */
      INNER(0),
      /**
       * <pre>
       * Left outer join
       * </pre>
       *
       * <code>LEFT_OUTER = 1;</code>
       */
      LEFT_OUTER(1),
      /**
       * <pre>
       * Right outer join
       * </pre>
       *
       * <code>RIGHT_OUTER = 2;</code>
       */
      RIGHT_OUTER(2),
      /**
       * <pre>
       * Full outer join
       * </pre>
       *
       * <code>FULL_OUTER = 3;</code>
       */
      FULL_OUTER(3),
      /**
       * <pre>
       * Left semi-join, right alternative can be naturally adapted
       * </pre>
       *
       * <code>SEMI = 4;</code>
       */
      SEMI(4),
      /**
       * <pre>
       * Left anti-join, right alternative can be naturally adapted
       * </pre>
       *
       * <code>ANTI = 5;</code>
       */
      ANTI(5),
      /**
       * <pre>
       * aka. Cartesian product
       * </pre>
       *
       * <code>TIMES = 6;</code>
       */
      TIMES(6),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Inner join
       * </pre>
       *
       * <code>INNER = 0;</code>
       */
      public static final int INNER_VALUE = 0;
      /**
       * <pre>
       * Left outer join
       * </pre>
       *
       * <code>LEFT_OUTER = 1;</code>
       */
      public static final int LEFT_OUTER_VALUE = 1;
      /**
       * <pre>
       * Right outer join
       * </pre>
       *
       * <code>RIGHT_OUTER = 2;</code>
       */
      public static final int RIGHT_OUTER_VALUE = 2;
      /**
       * <pre>
       * Full outer join
       * </pre>
       *
       * <code>FULL_OUTER = 3;</code>
       */
      public static final int FULL_OUTER_VALUE = 3;
      /**
       * <pre>
       * Left semi-join, right alternative can be naturally adapted
       * </pre>
       *
       * <code>SEMI = 4;</code>
       */
      public static final int SEMI_VALUE = 4;
      /**
       * <pre>
       * Left anti-join, right alternative can be naturally adapted
       * </pre>
       *
       * <code>ANTI = 5;</code>
       */
      public static final int ANTI_VALUE = 5;
      /**
       * <pre>
       * aka. Cartesian product
       * </pre>
       *
       * <code>TIMES = 6;</code>
       */
      public static final int TIMES_VALUE = 6;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static JoinKind valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static JoinKind forNumber(int value) {
        switch (value) {
          case 0: return INNER;
          case 1: return LEFT_OUTER;
          case 2: return RIGHT_OUTER;
          case 3: return FULL_OUTER;
          case 4: return SEMI;
          case 5: return ANTI;
          case 6: return TIMES;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<JoinKind>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          JoinKind> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<JoinKind>() {
              public JoinKind findValueByNumber(int number) {
                return JoinKind.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.getDescriptor().getEnumTypes().get(0);
      }

      private static final JoinKind[] VALUES = values();

      public static JoinKind valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private JoinKind(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:algebra.Join.JoinKind)
    }

    public static final int LEFT_KEYS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable> leftKeys_;
    /**
     * <pre>
     * TODO(longbin) An expression-ish predicate here is a more general form:
     * We currently only support the predicate of the equality of the given keys of both relations are equal.
     * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
     * participants.
     * </pre>
     *
     * <code>repeated .common.Variable left_keys = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable> getLeftKeysList() {
      return leftKeys_;
    }
    /**
     * <pre>
     * TODO(longbin) An expression-ish predicate here is a more general form:
     * We currently only support the predicate of the equality of the given keys of both relations are equal.
     * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
     * participants.
     * </pre>
     *
     * <code>repeated .common.Variable left_keys = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> 
        getLeftKeysOrBuilderList() {
      return leftKeys_;
    }
    /**
     * <pre>
     * TODO(longbin) An expression-ish predicate here is a more general form:
     * We currently only support the predicate of the equality of the given keys of both relations are equal.
     * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
     * participants.
     * </pre>
     *
     * <code>repeated .common.Variable left_keys = 1;</code>
     */
    @java.lang.Override
    public int getLeftKeysCount() {
      return leftKeys_.size();
    }
    /**
     * <pre>
     * TODO(longbin) An expression-ish predicate here is a more general form:
     * We currently only support the predicate of the equality of the given keys of both relations are equal.
     * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
     * participants.
     * </pre>
     *
     * <code>repeated .common.Variable left_keys = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable getLeftKeys(int index) {
      return leftKeys_.get(index);
    }
    /**
     * <pre>
     * TODO(longbin) An expression-ish predicate here is a more general form:
     * We currently only support the predicate of the equality of the given keys of both relations are equal.
     * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
     * participants.
     * </pre>
     *
     * <code>repeated .common.Variable left_keys = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder getLeftKeysOrBuilder(
        int index) {
      return leftKeys_.get(index);
    }

    public static final int RIGHT_KEYS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable> rightKeys_;
    /**
     * <code>repeated .common.Variable right_keys = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable> getRightKeysList() {
      return rightKeys_;
    }
    /**
     * <code>repeated .common.Variable right_keys = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> 
        getRightKeysOrBuilderList() {
      return rightKeys_;
    }
    /**
     * <code>repeated .common.Variable right_keys = 2;</code>
     */
    @java.lang.Override
    public int getRightKeysCount() {
      return rightKeys_.size();
    }
    /**
     * <code>repeated .common.Variable right_keys = 2;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable getRightKeys(int index) {
      return rightKeys_.get(index);
    }
    /**
     * <code>repeated .common.Variable right_keys = 2;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder getRightKeysOrBuilder(
        int index) {
      return rightKeys_.get(index);
    }

    public static final int KIND_FIELD_NUMBER = 3;
    private int kind_ = 0;
    /**
     * <code>.algebra.Join.JoinKind kind = 3;</code>
     * @return The enum numeric value on the wire for kind.
     */
    @java.lang.Override public int getKindValue() {
      return kind_;
    }
    /**
     * <code>.algebra.Join.JoinKind kind = 3;</code>
     * @return The kind.
     */
    @java.lang.Override public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind getKind() {
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind result = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind.forNumber(kind_);
      return result == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < leftKeys_.size(); i++) {
        output.writeMessage(1, leftKeys_.get(i));
      }
      for (int i = 0; i < rightKeys_.size(); i++) {
        output.writeMessage(2, rightKeys_.get(i));
      }
      if (kind_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind.INNER.getNumber()) {
        output.writeEnum(3, kind_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < leftKeys_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, leftKeys_.get(i));
      }
      for (int i = 0; i < rightKeys_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, rightKeys_.get(i));
      }
      if (kind_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind.INNER.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, kind_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join) obj;

      if (!getLeftKeysList()
          .equals(other.getLeftKeysList())) return false;
      if (!getRightKeysList()
          .equals(other.getRightKeysList())) return false;
      if (kind_ != other.kind_) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getLeftKeysCount() > 0) {
        hash = (37 * hash) + LEFT_KEYS_FIELD_NUMBER;
        hash = (53 * hash) + getLeftKeysList().hashCode();
      }
      if (getRightKeysCount() > 0) {
        hash = (37 * hash) + RIGHT_KEYS_FIELD_NUMBER;
        hash = (53 * hash) + getRightKeysList().hashCode();
      }
      hash = (37 * hash) + KIND_FIELD_NUMBER;
      hash = (53 * hash) + kind_;
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Join two relations based on certain predicate.
     * </pre>
     *
     * Protobuf type {@code algebra.Join}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.Join)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.JoinOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Join_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Join_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (leftKeysBuilder_ == null) {
          leftKeys_ = java.util.Collections.emptyList();
        } else {
          leftKeys_ = null;
          leftKeysBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (rightKeysBuilder_ == null) {
          rightKeys_ = java.util.Collections.emptyList();
        } else {
          rightKeys_ = null;
          rightKeysBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        kind_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Join_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join result) {
        if (leftKeysBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            leftKeys_ = java.util.Collections.unmodifiableList(leftKeys_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.leftKeys_ = leftKeys_;
        } else {
          result.leftKeys_ = leftKeysBuilder_.build();
        }
        if (rightKeysBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            rightKeys_ = java.util.Collections.unmodifiableList(rightKeys_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.rightKeys_ = rightKeys_;
        } else {
          result.rightKeys_ = rightKeysBuilder_.build();
        }
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.kind_ = kind_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.getDefaultInstance()) return this;
        if (leftKeysBuilder_ == null) {
          if (!other.leftKeys_.isEmpty()) {
            if (leftKeys_.isEmpty()) {
              leftKeys_ = other.leftKeys_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLeftKeysIsMutable();
              leftKeys_.addAll(other.leftKeys_);
            }
            onChanged();
          }
        } else {
          if (!other.leftKeys_.isEmpty()) {
            if (leftKeysBuilder_.isEmpty()) {
              leftKeysBuilder_.dispose();
              leftKeysBuilder_ = null;
              leftKeys_ = other.leftKeys_;
              bitField0_ = (bitField0_ & ~0x00000001);
              leftKeysBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLeftKeysFieldBuilder() : null;
            } else {
              leftKeysBuilder_.addAllMessages(other.leftKeys_);
            }
          }
        }
        if (rightKeysBuilder_ == null) {
          if (!other.rightKeys_.isEmpty()) {
            if (rightKeys_.isEmpty()) {
              rightKeys_ = other.rightKeys_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRightKeysIsMutable();
              rightKeys_.addAll(other.rightKeys_);
            }
            onChanged();
          }
        } else {
          if (!other.rightKeys_.isEmpty()) {
            if (rightKeysBuilder_.isEmpty()) {
              rightKeysBuilder_.dispose();
              rightKeysBuilder_ = null;
              rightKeys_ = other.rightKeys_;
              bitField0_ = (bitField0_ & ~0x00000002);
              rightKeysBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRightKeysFieldBuilder() : null;
            } else {
              rightKeysBuilder_.addAllMessages(other.rightKeys_);
            }
          }
        }
        if (other.kind_ != 0) {
          setKindValue(other.getKindValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable m =
                    input.readMessage(
                        com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.parser(),
                        extensionRegistry);
                if (leftKeysBuilder_ == null) {
                  ensureLeftKeysIsMutable();
                  leftKeys_.add(m);
                } else {
                  leftKeysBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable m =
                    input.readMessage(
                        com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.parser(),
                        extensionRegistry);
                if (rightKeysBuilder_ == null) {
                  ensureRightKeysIsMutable();
                  rightKeys_.add(m);
                } else {
                  rightKeysBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 24: {
                kind_ = input.readEnum();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable> leftKeys_ =
        java.util.Collections.emptyList();
      private void ensureLeftKeysIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          leftKeys_ = new java.util.ArrayList<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable>(leftKeys_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> leftKeysBuilder_;

      /**
       * <pre>
       * TODO(longbin) An expression-ish predicate here is a more general form:
       * We currently only support the predicate of the equality of the given keys of both relations are equal.
       * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
       * participants.
       * </pre>
       *
       * <code>repeated .common.Variable left_keys = 1;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable> getLeftKeysList() {
        if (leftKeysBuilder_ == null) {
          return java.util.Collections.unmodifiableList(leftKeys_);
        } else {
          return leftKeysBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * TODO(longbin) An expression-ish predicate here is a more general form:
       * We currently only support the predicate of the equality of the given keys of both relations are equal.
       * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
       * participants.
       * </pre>
       *
       * <code>repeated .common.Variable left_keys = 1;</code>
       */
      public int getLeftKeysCount() {
        if (leftKeysBuilder_ == null) {
          return leftKeys_.size();
        } else {
          return leftKeysBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * TODO(longbin) An expression-ish predicate here is a more general form:
       * We currently only support the predicate of the equality of the given keys of both relations are equal.
       * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
       * participants.
       * </pre>
       *
       * <code>repeated .common.Variable left_keys = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable getLeftKeys(int index) {
        if (leftKeysBuilder_ == null) {
          return leftKeys_.get(index);
        } else {
          return leftKeysBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * TODO(longbin) An expression-ish predicate here is a more general form:
       * We currently only support the predicate of the equality of the given keys of both relations are equal.
       * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
       * participants.
       * </pre>
       *
       * <code>repeated .common.Variable left_keys = 1;</code>
       */
      public Builder setLeftKeys(
          int index, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable value) {
        if (leftKeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeftKeysIsMutable();
          leftKeys_.set(index, value);
          onChanged();
        } else {
          leftKeysBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * TODO(longbin) An expression-ish predicate here is a more general form:
       * We currently only support the predicate of the equality of the given keys of both relations are equal.
       * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
       * participants.
       * </pre>
       *
       * <code>repeated .common.Variable left_keys = 1;</code>
       */
      public Builder setLeftKeys(
          int index, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder builderForValue) {
        if (leftKeysBuilder_ == null) {
          ensureLeftKeysIsMutable();
          leftKeys_.set(index, builderForValue.build());
          onChanged();
        } else {
          leftKeysBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * TODO(longbin) An expression-ish predicate here is a more general form:
       * We currently only support the predicate of the equality of the given keys of both relations are equal.
       * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
       * participants.
       * </pre>
       *
       * <code>repeated .common.Variable left_keys = 1;</code>
       */
      public Builder addLeftKeys(com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable value) {
        if (leftKeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeftKeysIsMutable();
          leftKeys_.add(value);
          onChanged();
        } else {
          leftKeysBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * TODO(longbin) An expression-ish predicate here is a more general form:
       * We currently only support the predicate of the equality of the given keys of both relations are equal.
       * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
       * participants.
       * </pre>
       *
       * <code>repeated .common.Variable left_keys = 1;</code>
       */
      public Builder addLeftKeys(
          int index, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable value) {
        if (leftKeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeftKeysIsMutable();
          leftKeys_.add(index, value);
          onChanged();
        } else {
          leftKeysBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * TODO(longbin) An expression-ish predicate here is a more general form:
       * We currently only support the predicate of the equality of the given keys of both relations are equal.
       * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
       * participants.
       * </pre>
       *
       * <code>repeated .common.Variable left_keys = 1;</code>
       */
      public Builder addLeftKeys(
          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder builderForValue) {
        if (leftKeysBuilder_ == null) {
          ensureLeftKeysIsMutable();
          leftKeys_.add(builderForValue.build());
          onChanged();
        } else {
          leftKeysBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * TODO(longbin) An expression-ish predicate here is a more general form:
       * We currently only support the predicate of the equality of the given keys of both relations are equal.
       * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
       * participants.
       * </pre>
       *
       * <code>repeated .common.Variable left_keys = 1;</code>
       */
      public Builder addLeftKeys(
          int index, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder builderForValue) {
        if (leftKeysBuilder_ == null) {
          ensureLeftKeysIsMutable();
          leftKeys_.add(index, builderForValue.build());
          onChanged();
        } else {
          leftKeysBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * TODO(longbin) An expression-ish predicate here is a more general form:
       * We currently only support the predicate of the equality of the given keys of both relations are equal.
       * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
       * participants.
       * </pre>
       *
       * <code>repeated .common.Variable left_keys = 1;</code>
       */
      public Builder addAllLeftKeys(
          java.lang.Iterable<? extends com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable> values) {
        if (leftKeysBuilder_ == null) {
          ensureLeftKeysIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, leftKeys_);
          onChanged();
        } else {
          leftKeysBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * TODO(longbin) An expression-ish predicate here is a more general form:
       * We currently only support the predicate of the equality of the given keys of both relations are equal.
       * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
       * participants.
       * </pre>
       *
       * <code>repeated .common.Variable left_keys = 1;</code>
       */
      public Builder clearLeftKeys() {
        if (leftKeysBuilder_ == null) {
          leftKeys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          leftKeysBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * TODO(longbin) An expression-ish predicate here is a more general form:
       * We currently only support the predicate of the equality of the given keys of both relations are equal.
       * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
       * participants.
       * </pre>
       *
       * <code>repeated .common.Variable left_keys = 1;</code>
       */
      public Builder removeLeftKeys(int index) {
        if (leftKeysBuilder_ == null) {
          ensureLeftKeysIsMutable();
          leftKeys_.remove(index);
          onChanged();
        } else {
          leftKeysBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * TODO(longbin) An expression-ish predicate here is a more general form:
       * We currently only support the predicate of the equality of the given keys of both relations are equal.
       * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
       * participants.
       * </pre>
       *
       * <code>repeated .common.Variable left_keys = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder getLeftKeysBuilder(
          int index) {
        return getLeftKeysFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * TODO(longbin) An expression-ish predicate here is a more general form:
       * We currently only support the predicate of the equality of the given keys of both relations are equal.
       * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
       * participants.
       * </pre>
       *
       * <code>repeated .common.Variable left_keys = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder getLeftKeysOrBuilder(
          int index) {
        if (leftKeysBuilder_ == null) {
          return leftKeys_.get(index);  } else {
          return leftKeysBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * TODO(longbin) An expression-ish predicate here is a more general form:
       * We currently only support the predicate of the equality of the given keys of both relations are equal.
       * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
       * participants.
       * </pre>
       *
       * <code>repeated .common.Variable left_keys = 1;</code>
       */
      public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> 
           getLeftKeysOrBuilderList() {
        if (leftKeysBuilder_ != null) {
          return leftKeysBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(leftKeys_);
        }
      }
      /**
       * <pre>
       * TODO(longbin) An expression-ish predicate here is a more general form:
       * We currently only support the predicate of the equality of the given keys of both relations are equal.
       * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
       * participants.
       * </pre>
       *
       * <code>repeated .common.Variable left_keys = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder addLeftKeysBuilder() {
        return getLeftKeysFieldBuilder().addBuilder(
            com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.getDefaultInstance());
      }
      /**
       * <pre>
       * TODO(longbin) An expression-ish predicate here is a more general form:
       * We currently only support the predicate of the equality of the given keys of both relations are equal.
       * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
       * participants.
       * </pre>
       *
       * <code>repeated .common.Variable left_keys = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder addLeftKeysBuilder(
          int index) {
        return getLeftKeysFieldBuilder().addBuilder(
            index, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.getDefaultInstance());
      }
      /**
       * <pre>
       * TODO(longbin) An expression-ish predicate here is a more general form:
       * We currently only support the predicate of the equality of the given keys of both relations are equal.
       * In general, a join operator can join on any arbitrary predicate regarding certain attributes of left and right
       * participants.
       * </pre>
       *
       * <code>repeated .common.Variable left_keys = 1;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder> 
           getLeftKeysBuilderList() {
        return getLeftKeysFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> 
          getLeftKeysFieldBuilder() {
        if (leftKeysBuilder_ == null) {
          leftKeysBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder>(
                  leftKeys_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          leftKeys_ = null;
        }
        return leftKeysBuilder_;
      }

      private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable> rightKeys_ =
        java.util.Collections.emptyList();
      private void ensureRightKeysIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          rightKeys_ = new java.util.ArrayList<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable>(rightKeys_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> rightKeysBuilder_;

      /**
       * <code>repeated .common.Variable right_keys = 2;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable> getRightKeysList() {
        if (rightKeysBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rightKeys_);
        } else {
          return rightKeysBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .common.Variable right_keys = 2;</code>
       */
      public int getRightKeysCount() {
        if (rightKeysBuilder_ == null) {
          return rightKeys_.size();
        } else {
          return rightKeysBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .common.Variable right_keys = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable getRightKeys(int index) {
        if (rightKeysBuilder_ == null) {
          return rightKeys_.get(index);
        } else {
          return rightKeysBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .common.Variable right_keys = 2;</code>
       */
      public Builder setRightKeys(
          int index, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable value) {
        if (rightKeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRightKeysIsMutable();
          rightKeys_.set(index, value);
          onChanged();
        } else {
          rightKeysBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .common.Variable right_keys = 2;</code>
       */
      public Builder setRightKeys(
          int index, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder builderForValue) {
        if (rightKeysBuilder_ == null) {
          ensureRightKeysIsMutable();
          rightKeys_.set(index, builderForValue.build());
          onChanged();
        } else {
          rightKeysBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .common.Variable right_keys = 2;</code>
       */
      public Builder addRightKeys(com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable value) {
        if (rightKeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRightKeysIsMutable();
          rightKeys_.add(value);
          onChanged();
        } else {
          rightKeysBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .common.Variable right_keys = 2;</code>
       */
      public Builder addRightKeys(
          int index, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable value) {
        if (rightKeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRightKeysIsMutable();
          rightKeys_.add(index, value);
          onChanged();
        } else {
          rightKeysBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .common.Variable right_keys = 2;</code>
       */
      public Builder addRightKeys(
          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder builderForValue) {
        if (rightKeysBuilder_ == null) {
          ensureRightKeysIsMutable();
          rightKeys_.add(builderForValue.build());
          onChanged();
        } else {
          rightKeysBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .common.Variable right_keys = 2;</code>
       */
      public Builder addRightKeys(
          int index, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder builderForValue) {
        if (rightKeysBuilder_ == null) {
          ensureRightKeysIsMutable();
          rightKeys_.add(index, builderForValue.build());
          onChanged();
        } else {
          rightKeysBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .common.Variable right_keys = 2;</code>
       */
      public Builder addAllRightKeys(
          java.lang.Iterable<? extends com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable> values) {
        if (rightKeysBuilder_ == null) {
          ensureRightKeysIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rightKeys_);
          onChanged();
        } else {
          rightKeysBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .common.Variable right_keys = 2;</code>
       */
      public Builder clearRightKeys() {
        if (rightKeysBuilder_ == null) {
          rightKeys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          rightKeysBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .common.Variable right_keys = 2;</code>
       */
      public Builder removeRightKeys(int index) {
        if (rightKeysBuilder_ == null) {
          ensureRightKeysIsMutable();
          rightKeys_.remove(index);
          onChanged();
        } else {
          rightKeysBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .common.Variable right_keys = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder getRightKeysBuilder(
          int index) {
        return getRightKeysFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .common.Variable right_keys = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder getRightKeysOrBuilder(
          int index) {
        if (rightKeysBuilder_ == null) {
          return rightKeys_.get(index);  } else {
          return rightKeysBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .common.Variable right_keys = 2;</code>
       */
      public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> 
           getRightKeysOrBuilderList() {
        if (rightKeysBuilder_ != null) {
          return rightKeysBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rightKeys_);
        }
      }
      /**
       * <code>repeated .common.Variable right_keys = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder addRightKeysBuilder() {
        return getRightKeysFieldBuilder().addBuilder(
            com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.getDefaultInstance());
      }
      /**
       * <code>repeated .common.Variable right_keys = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder addRightKeysBuilder(
          int index) {
        return getRightKeysFieldBuilder().addBuilder(
            index, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.getDefaultInstance());
      }
      /**
       * <code>repeated .common.Variable right_keys = 2;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder> 
           getRightKeysBuilderList() {
        return getRightKeysFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> 
          getRightKeysFieldBuilder() {
        if (rightKeysBuilder_ == null) {
          rightKeysBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder>(
                  rightKeys_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          rightKeys_ = null;
        }
        return rightKeysBuilder_;
      }

      private int kind_ = 0;
      /**
       * <code>.algebra.Join.JoinKind kind = 3;</code>
       * @return The enum numeric value on the wire for kind.
       */
      @java.lang.Override public int getKindValue() {
        return kind_;
      }
      /**
       * <code>.algebra.Join.JoinKind kind = 3;</code>
       * @param value The enum numeric value on the wire for kind to set.
       * @return This builder for chaining.
       */
      public Builder setKindValue(int value) {
        kind_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.algebra.Join.JoinKind kind = 3;</code>
       * @return The kind.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind getKind() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind result = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind.forNumber(kind_);
        return result == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind.UNRECOGNIZED : result;
      }
      /**
       * <code>.algebra.Join.JoinKind kind = 3;</code>
       * @param value The kind to set.
       * @return This builder for chaining.
       */
      public Builder setKind(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        kind_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.algebra.Join.JoinKind kind = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearKind() {
        bitField0_ = (bitField0_ & ~0x00000004);
        kind_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.Join)
    }

    // @@protoc_insertion_point(class_scope:algebra.Join)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Join>
        PARSER = new com.google.protobuf.AbstractParser<Join>() {
      @java.lang.Override
      public Join parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Join> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Join> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UnionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.Union)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int32 parents = 1;</code>
     * @return A list containing the parents.
     */
    java.util.List<java.lang.Integer> getParentsList();
    /**
     * <code>repeated int32 parents = 1;</code>
     * @return The count of parents.
     */
    int getParentsCount();
    /**
     * <code>repeated int32 parents = 1;</code>
     * @param index The index of the element to return.
     * @return The parents at the given index.
     */
    int getParents(int index);
  }
  /**
   * <pre>
   * Union multiple relations
   * </pre>
   *
   * Protobuf type {@code algebra.Union}
   */
  public static final class Union extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.Union)
      UnionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Union.newBuilder() to construct.
    private Union(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Union() {
      parents_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Union();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Union_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Union_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union.Builder.class);
    }

    public static final int PARENTS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList parents_;
    /**
     * <code>repeated int32 parents = 1;</code>
     * @return A list containing the parents.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getParentsList() {
      return parents_;
    }
    /**
     * <code>repeated int32 parents = 1;</code>
     * @return The count of parents.
     */
    public int getParentsCount() {
      return parents_.size();
    }
    /**
     * <code>repeated int32 parents = 1;</code>
     * @param index The index of the element to return.
     * @return The parents at the given index.
     */
    public int getParents(int index) {
      return parents_.getInt(index);
    }
    private int parentsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getParentsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(parentsMemoizedSerializedSize);
      }
      for (int i = 0; i < parents_.size(); i++) {
        output.writeInt32NoTag(parents_.getInt(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < parents_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(parents_.getInt(i));
        }
        size += dataSize;
        if (!getParentsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        parentsMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union) obj;

      if (!getParentsList()
          .equals(other.getParentsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getParentsCount() > 0) {
        hash = (37 * hash) + PARENTS_FIELD_NUMBER;
        hash = (53 * hash) + getParentsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Union multiple relations
     * </pre>
     *
     * Protobuf type {@code algebra.Union}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.Union)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.UnionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Union_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Union_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        parents_ = emptyIntList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Union_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          parents_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.parents_ = parents_;
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union.getDefaultInstance()) return this;
        if (!other.parents_.isEmpty()) {
          if (parents_.isEmpty()) {
            parents_ = other.parents_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureParentsIsMutable();
            parents_.addAll(other.parents_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int v = input.readInt32();
                ensureParentsIsMutable();
                parents_.addInt(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureParentsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  parents_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList parents_ = emptyIntList();
      private void ensureParentsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          parents_ = mutableCopy(parents_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <code>repeated int32 parents = 1;</code>
       * @return A list containing the parents.
       */
      public java.util.List<java.lang.Integer>
          getParentsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(parents_) : parents_;
      }
      /**
       * <code>repeated int32 parents = 1;</code>
       * @return The count of parents.
       */
      public int getParentsCount() {
        return parents_.size();
      }
      /**
       * <code>repeated int32 parents = 1;</code>
       * @param index The index of the element to return.
       * @return The parents at the given index.
       */
      public int getParents(int index) {
        return parents_.getInt(index);
      }
      /**
       * <code>repeated int32 parents = 1;</code>
       * @param index The index to set the value at.
       * @param value The parents to set.
       * @return This builder for chaining.
       */
      public Builder setParents(
          int index, int value) {

        ensureParentsIsMutable();
        parents_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 parents = 1;</code>
       * @param value The parents to add.
       * @return This builder for chaining.
       */
      public Builder addParents(int value) {

        ensureParentsIsMutable();
        parents_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 parents = 1;</code>
       * @param values The parents to add.
       * @return This builder for chaining.
       */
      public Builder addAllParents(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureParentsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, parents_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 parents = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearParents() {
        parents_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.Union)
    }

    // @@protoc_insertion_point(class_scope:algebra.Union)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Union>
        PARSER = new com.google.protobuf.AbstractParser<Union>() {
      @java.lang.Override
      public Union parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Union> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Union> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IntersectOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.Intersect)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int32 parents = 1;</code>
     * @return A list containing the parents.
     */
    java.util.List<java.lang.Integer> getParentsList();
    /**
     * <code>repeated int32 parents = 1;</code>
     * @return The count of parents.
     */
    int getParentsCount();
    /**
     * <code>repeated int32 parents = 1;</code>
     * @param index The index of the element to return.
     * @return The parents at the given index.
     */
    int getParents(int index);

    /**
     * <code>.common.NameOrId key = 2;</code>
     * @return Whether the key field is set.
     */
    boolean hasKey();
    /**
     * <code>.common.NameOrId key = 2;</code>
     * @return The key.
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getKey();
    /**
     * <code>.common.NameOrId key = 2;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getKeyOrBuilder();
  }
  /**
   * <pre>
   * Intersect multiple relations regarding a given key. In order to do so, the relations must satisfy:
   * * They have exactly the same schema,
   * * The data of every two relations is the same tuple-wise except for the data field referred by the given key,
   * * The key must refer to an array of objects.
   * The results of the intersection,
   * taking intersecting two relations R1[a, b, c, ..., array] and R2[a, b, c, ..., array] as an example,
   * is R[a, b, c, ..., array], where for each tuple r of R,  r.array = r1.array &lt;intersect&gt; r2.array
   * </pre>
   *
   * Protobuf type {@code algebra.Intersect}
   */
  public static final class Intersect extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.Intersect)
      IntersectOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Intersect.newBuilder() to construct.
    private Intersect(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Intersect() {
      parents_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Intersect();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Intersect_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Intersect_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect.Builder.class);
    }

    public static final int PARENTS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList parents_;
    /**
     * <code>repeated int32 parents = 1;</code>
     * @return A list containing the parents.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getParentsList() {
      return parents_;
    }
    /**
     * <code>repeated int32 parents = 1;</code>
     * @return The count of parents.
     */
    public int getParentsCount() {
      return parents_.size();
    }
    /**
     * <code>repeated int32 parents = 1;</code>
     * @param index The index of the element to return.
     * @return The parents at the given index.
     */
    public int getParents(int index) {
      return parents_.getInt(index);
    }
    private int parentsMemoizedSerializedSize = -1;

    public static final int KEY_FIELD_NUMBER = 2;
    private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId key_;
    /**
     * <code>.common.NameOrId key = 2;</code>
     * @return Whether the key field is set.
     */
    @java.lang.Override
    public boolean hasKey() {
      return key_ != null;
    }
    /**
     * <code>.common.NameOrId key = 2;</code>
     * @return The key.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getKey() {
      return key_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : key_;
    }
    /**
     * <code>.common.NameOrId key = 2;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getKeyOrBuilder() {
      return key_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : key_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getParentsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(parentsMemoizedSerializedSize);
      }
      for (int i = 0; i < parents_.size(); i++) {
        output.writeInt32NoTag(parents_.getInt(i));
      }
      if (key_ != null) {
        output.writeMessage(2, getKey());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < parents_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(parents_.getInt(i));
        }
        size += dataSize;
        if (!getParentsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        parentsMemoizedSerializedSize = dataSize;
      }
      if (key_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getKey());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect) obj;

      if (!getParentsList()
          .equals(other.getParentsList())) return false;
      if (hasKey() != other.hasKey()) return false;
      if (hasKey()) {
        if (!getKey()
            .equals(other.getKey())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getParentsCount() > 0) {
        hash = (37 * hash) + PARENTS_FIELD_NUMBER;
        hash = (53 * hash) + getParentsList().hashCode();
      }
      if (hasKey()) {
        hash = (37 * hash) + KEY_FIELD_NUMBER;
        hash = (53 * hash) + getKey().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Intersect multiple relations regarding a given key. In order to do so, the relations must satisfy:
     * * They have exactly the same schema,
     * * The data of every two relations is the same tuple-wise except for the data field referred by the given key,
     * * The key must refer to an array of objects.
     * The results of the intersection,
     * taking intersecting two relations R1[a, b, c, ..., array] and R2[a, b, c, ..., array] as an example,
     * is R[a, b, c, ..., array], where for each tuple r of R,  r.array = r1.array &lt;intersect&gt; r2.array
     * </pre>
     *
     * Protobuf type {@code algebra.Intersect}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.Intersect)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IntersectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Intersect_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Intersect_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        parents_ = emptyIntList();
        key_ = null;
        if (keyBuilder_ != null) {
          keyBuilder_.dispose();
          keyBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Intersect_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          parents_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.parents_ = parents_;
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.key_ = keyBuilder_ == null
              ? key_
              : keyBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect.getDefaultInstance()) return this;
        if (!other.parents_.isEmpty()) {
          if (parents_.isEmpty()) {
            parents_ = other.parents_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureParentsIsMutable();
            parents_.addAll(other.parents_);
          }
          onChanged();
        }
        if (other.hasKey()) {
          mergeKey(other.getKey());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int v = input.readInt32();
                ensureParentsIsMutable();
                parents_.addInt(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureParentsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  parents_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getKeyFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList parents_ = emptyIntList();
      private void ensureParentsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          parents_ = mutableCopy(parents_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <code>repeated int32 parents = 1;</code>
       * @return A list containing the parents.
       */
      public java.util.List<java.lang.Integer>
          getParentsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(parents_) : parents_;
      }
      /**
       * <code>repeated int32 parents = 1;</code>
       * @return The count of parents.
       */
      public int getParentsCount() {
        return parents_.size();
      }
      /**
       * <code>repeated int32 parents = 1;</code>
       * @param index The index of the element to return.
       * @return The parents at the given index.
       */
      public int getParents(int index) {
        return parents_.getInt(index);
      }
      /**
       * <code>repeated int32 parents = 1;</code>
       * @param index The index to set the value at.
       * @param value The parents to set.
       * @return This builder for chaining.
       */
      public Builder setParents(
          int index, int value) {

        ensureParentsIsMutable();
        parents_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 parents = 1;</code>
       * @param value The parents to add.
       * @return This builder for chaining.
       */
      public Builder addParents(int value) {

        ensureParentsIsMutable();
        parents_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 parents = 1;</code>
       * @param values The parents to add.
       * @return This builder for chaining.
       */
      public Builder addAllParents(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureParentsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, parents_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 parents = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearParents() {
        parents_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId key_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> keyBuilder_;
      /**
       * <code>.common.NameOrId key = 2;</code>
       * @return Whether the key field is set.
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.common.NameOrId key = 2;</code>
       * @return The key.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getKey() {
        if (keyBuilder_ == null) {
          return key_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : key_;
        } else {
          return keyBuilder_.getMessage();
        }
      }
      /**
       * <code>.common.NameOrId key = 2;</code>
       */
      public Builder setKey(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (keyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          key_ = value;
        } else {
          keyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.common.NameOrId key = 2;</code>
       */
      public Builder setKey(
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
        if (keyBuilder_ == null) {
          key_ = builderForValue.build();
        } else {
          keyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.common.NameOrId key = 2;</code>
       */
      public Builder mergeKey(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (keyBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            key_ != null &&
            key_ != com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance()) {
            getKeyBuilder().mergeFrom(value);
          } else {
            key_ = value;
          }
        } else {
          keyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.common.NameOrId key = 2;</code>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000002);
        key_ = null;
        if (keyBuilder_ != null) {
          keyBuilder_.dispose();
          keyBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.common.NameOrId key = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder getKeyBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getKeyFieldBuilder().getBuilder();
      }
      /**
       * <code>.common.NameOrId key = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getKeyOrBuilder() {
        if (keyBuilder_ != null) {
          return keyBuilder_.getMessageOrBuilder();
        } else {
          return key_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : key_;
        }
      }
      /**
       * <code>.common.NameOrId key = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
          getKeyFieldBuilder() {
        if (keyBuilder_ == null) {
          keyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder>(
                  getKey(),
                  getParentForChildren(),
                  isClean());
          key_ = null;
        }
        return keyBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.Intersect)
    }

    // @@protoc_insertion_point(class_scope:algebra.Intersect)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Intersect>
        PARSER = new com.google.protobuf.AbstractParser<Intersect>() {
      @java.lang.Override
      public Intersect parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Intersect> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Intersect> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GroupByOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.GroupBy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A collection of key-alias mappings
     * </pre>
     *
     * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
     */
    java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias> 
        getMappingsList();
    /**
     * <pre>
     * A collection of key-alias mappings
     * </pre>
     *
     * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias getMappings(int index);
    /**
     * <pre>
     * A collection of key-alias mappings
     * </pre>
     *
     * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
     */
    int getMappingsCount();
    /**
     * <pre>
     * A collection of key-alias mappings
     * </pre>
     *
     * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
     */
    java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAliasOrBuilder> 
        getMappingsOrBuilderList();
    /**
     * <pre>
     * A collection of key-alias mappings
     * </pre>
     *
     * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAliasOrBuilder getMappingsOrBuilder(
        int index);

    /**
     * <pre>
     * The grouping functions
     * </pre>
     *
     * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
     */
    java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc> 
        getFunctionsList();
    /**
     * <pre>
     * The grouping functions
     * </pre>
     *
     * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc getFunctions(int index);
    /**
     * <pre>
     * The grouping functions
     * </pre>
     *
     * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
     */
    int getFunctionsCount();
    /**
     * <pre>
     * The grouping functions
     * </pre>
     *
     * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
     */
    java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFuncOrBuilder> 
        getFunctionsOrBuilderList();
    /**
     * <pre>
     * The grouping functions
     * </pre>
     *
     * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFuncOrBuilder getFunctionsOrBuilder(
        int index);

    /**
     * <pre>
     * The datatype of output results
     * </pre>
     *
     * <code>repeated .algebra.MetaData meta_data = 3;</code>
     */
    java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData> 
        getMetaDataList();
    /**
     * <pre>
     * The datatype of output results
     * </pre>
     *
     * <code>repeated .algebra.MetaData meta_data = 3;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData getMetaData(int index);
    /**
     * <pre>
     * The datatype of output results
     * </pre>
     *
     * <code>repeated .algebra.MetaData meta_data = 3;</code>
     */
    int getMetaDataCount();
    /**
     * <pre>
     * The datatype of output results
     * </pre>
     *
     * <code>repeated .algebra.MetaData meta_data = 3;</code>
     */
    java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder> 
        getMetaDataOrBuilderList();
    /**
     * <pre>
     * The datatype of output results
     * </pre>
     *
     * <code>repeated .algebra.MetaData meta_data = 3;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder getMetaDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code algebra.GroupBy}
   */
  public static final class GroupBy extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.GroupBy)
      GroupByOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GroupBy.newBuilder() to construct.
    private GroupBy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GroupBy() {
      mappings_ = java.util.Collections.emptyList();
      functions_ = java.util.Collections.emptyList();
      metaData_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GroupBy();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_GroupBy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_GroupBy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.Builder.class);
    }

    public interface AggFuncOrBuilder extends
        // @@protoc_insertion_point(interface_extends:algebra.GroupBy.AggFunc)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The variables to apply this aggregation
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable vars = 1;</code>
       */
      java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable> 
          getVarsList();
      /**
       * <pre>
       * The variables to apply this aggregation
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable vars = 1;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable getVars(int index);
      /**
       * <pre>
       * The variables to apply this aggregation
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable vars = 1;</code>
       */
      int getVarsCount();
      /**
       * <pre>
       * The variables to apply this aggregation
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable vars = 1;</code>
       */
      java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> 
          getVarsOrBuilderList();
      /**
       * <pre>
       * The variables to apply this aggregation
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable vars = 1;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder getVarsOrBuilder(
          int index);

      /**
       * <pre>
       * The aggregate function
       * </pre>
       *
       * <code>.algebra.GroupBy.AggFunc.Aggregate aggregate = 2;</code>
       * @return The enum numeric value on the wire for aggregate.
       */
      int getAggregateValue();
      /**
       * <pre>
       * The aggregate function
       * </pre>
       *
       * <code>.algebra.GroupBy.AggFunc.Aggregate aggregate = 2;</code>
       * @return The aggregate.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.Aggregate getAggregate();

      /**
       * <pre>
       * The alias for the aggregated value
       * </pre>
       *
       * <code>.common.NameOrId alias = 3;</code>
       * @return Whether the alias field is set.
       */
      boolean hasAlias();
      /**
       * <pre>
       * The alias for the aggregated value
       * </pre>
       *
       * <code>.common.NameOrId alias = 3;</code>
       * @return The alias.
       */
      com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias();
      /**
       * <pre>
       * The alias for the aggregated value
       * </pre>
       *
       * <code>.common.NameOrId alias = 3;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder();
    }
    /**
     * <pre>
     * To define the function to be applied on each group after performing grouping. For example,
     * GROUPBY({a, b}, COUNT_DISTINCT(c, d) as e), one shall count distinct present of the pairs
     * (c, d), and alias the count as e.
     * </pre>
     *
     * Protobuf type {@code algebra.GroupBy.AggFunc}
     */
    public static final class AggFunc extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:algebra.GroupBy.AggFunc)
        AggFuncOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use AggFunc.newBuilder() to construct.
      private AggFunc(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private AggFunc() {
        vars_ = java.util.Collections.emptyList();
        aggregate_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new AggFunc();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_GroupBy_AggFunc_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_GroupBy_AggFunc_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.Builder.class);
      }

      /**
       * Protobuf enum {@code algebra.GroupBy.AggFunc.Aggregate}
       */
      public enum Aggregate
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>SUM = 0;</code>
         */
        SUM(0),
        /**
         * <code>MIN = 1;</code>
         */
        MIN(1),
        /**
         * <code>MAX = 2;</code>
         */
        MAX(2),
        /**
         * <code>COUNT = 3;</code>
         */
        COUNT(3),
        /**
         * <code>COUNT_DISTINCT = 4;</code>
         */
        COUNT_DISTINCT(4),
        /**
         * <code>TO_LIST = 5;</code>
         */
        TO_LIST(5),
        /**
         * <code>TO_SET = 6;</code>
         */
        TO_SET(6),
        /**
         * <code>AVG = 7;</code>
         */
        AVG(7),
        /**
         * <code>FIRST = 8;</code>
         */
        FIRST(8),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>SUM = 0;</code>
         */
        public static final int SUM_VALUE = 0;
        /**
         * <code>MIN = 1;</code>
         */
        public static final int MIN_VALUE = 1;
        /**
         * <code>MAX = 2;</code>
         */
        public static final int MAX_VALUE = 2;
        /**
         * <code>COUNT = 3;</code>
         */
        public static final int COUNT_VALUE = 3;
        /**
         * <code>COUNT_DISTINCT = 4;</code>
         */
        public static final int COUNT_DISTINCT_VALUE = 4;
        /**
         * <code>TO_LIST = 5;</code>
         */
        public static final int TO_LIST_VALUE = 5;
        /**
         * <code>TO_SET = 6;</code>
         */
        public static final int TO_SET_VALUE = 6;
        /**
         * <code>AVG = 7;</code>
         */
        public static final int AVG_VALUE = 7;
        /**
         * <code>FIRST = 8;</code>
         */
        public static final int FIRST_VALUE = 8;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static Aggregate valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static Aggregate forNumber(int value) {
          switch (value) {
            case 0: return SUM;
            case 1: return MIN;
            case 2: return MAX;
            case 3: return COUNT;
            case 4: return COUNT_DISTINCT;
            case 5: return TO_LIST;
            case 6: return TO_SET;
            case 7: return AVG;
            case 8: return FIRST;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Aggregate>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            Aggregate> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Aggregate>() {
                public Aggregate findValueByNumber(int number) {
                  return Aggregate.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                "Can't get the descriptor of an unrecognized enum value.");
          }
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.getDescriptor().getEnumTypes().get(0);
        }

        private static final Aggregate[] VALUES = values();

        public static Aggregate valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private Aggregate(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:algebra.GroupBy.AggFunc.Aggregate)
      }

      public static final int VARS_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable> vars_;
      /**
       * <pre>
       * The variables to apply this aggregation
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable vars = 1;</code>
       */
      @java.lang.Override
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable> getVarsList() {
        return vars_;
      }
      /**
       * <pre>
       * The variables to apply this aggregation
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable vars = 1;</code>
       */
      @java.lang.Override
      public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> 
          getVarsOrBuilderList() {
        return vars_;
      }
      /**
       * <pre>
       * The variables to apply this aggregation
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable vars = 1;</code>
       */
      @java.lang.Override
      public int getVarsCount() {
        return vars_.size();
      }
      /**
       * <pre>
       * The variables to apply this aggregation
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable vars = 1;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable getVars(int index) {
        return vars_.get(index);
      }
      /**
       * <pre>
       * The variables to apply this aggregation
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable vars = 1;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder getVarsOrBuilder(
          int index) {
        return vars_.get(index);
      }

      public static final int AGGREGATE_FIELD_NUMBER = 2;
      private int aggregate_ = 0;
      /**
       * <pre>
       * The aggregate function
       * </pre>
       *
       * <code>.algebra.GroupBy.AggFunc.Aggregate aggregate = 2;</code>
       * @return The enum numeric value on the wire for aggregate.
       */
      @java.lang.Override public int getAggregateValue() {
        return aggregate_;
      }
      /**
       * <pre>
       * The aggregate function
       * </pre>
       *
       * <code>.algebra.GroupBy.AggFunc.Aggregate aggregate = 2;</code>
       * @return The aggregate.
       */
      @java.lang.Override public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.Aggregate getAggregate() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.Aggregate result = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.Aggregate.forNumber(aggregate_);
        return result == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.Aggregate.UNRECOGNIZED : result;
      }

      public static final int ALIAS_FIELD_NUMBER = 3;
      private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId alias_;
      /**
       * <pre>
       * The alias for the aggregated value
       * </pre>
       *
       * <code>.common.NameOrId alias = 3;</code>
       * @return Whether the alias field is set.
       */
      @java.lang.Override
      public boolean hasAlias() {
        return alias_ != null;
      }
      /**
       * <pre>
       * The alias for the aggregated value
       * </pre>
       *
       * <code>.common.NameOrId alias = 3;</code>
       * @return The alias.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias() {
        return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
      }
      /**
       * <pre>
       * The alias for the aggregated value
       * </pre>
       *
       * <code>.common.NameOrId alias = 3;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder() {
        return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < vars_.size(); i++) {
          output.writeMessage(1, vars_.get(i));
        }
        if (aggregate_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.Aggregate.SUM.getNumber()) {
          output.writeEnum(2, aggregate_);
        }
        if (alias_ != null) {
          output.writeMessage(3, getAlias());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < vars_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, vars_.get(i));
        }
        if (aggregate_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.Aggregate.SUM.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, aggregate_);
        }
        if (alias_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getAlias());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc)) {
          return super.equals(obj);
        }
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc) obj;

        if (!getVarsList()
            .equals(other.getVarsList())) return false;
        if (aggregate_ != other.aggregate_) return false;
        if (hasAlias() != other.hasAlias()) return false;
        if (hasAlias()) {
          if (!getAlias()
              .equals(other.getAlias())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getVarsCount() > 0) {
          hash = (37 * hash) + VARS_FIELD_NUMBER;
          hash = (53 * hash) + getVarsList().hashCode();
        }
        hash = (37 * hash) + AGGREGATE_FIELD_NUMBER;
        hash = (53 * hash) + aggregate_;
        if (hasAlias()) {
          hash = (37 * hash) + ALIAS_FIELD_NUMBER;
          hash = (53 * hash) + getAlias().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * To define the function to be applied on each group after performing grouping. For example,
       * GROUPBY({a, b}, COUNT_DISTINCT(c, d) as e), one shall count distinct present of the pairs
       * (c, d), and alias the count as e.
       * </pre>
       *
       * Protobuf type {@code algebra.GroupBy.AggFunc}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:algebra.GroupBy.AggFunc)
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFuncOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_GroupBy_AggFunc_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_GroupBy_AggFunc_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.Builder.class);
        }

        // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          if (varsBuilder_ == null) {
            vars_ = java.util.Collections.emptyList();
          } else {
            vars_ = null;
            varsBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          aggregate_ = 0;
          alias_ = null;
          if (aliasBuilder_ != null) {
            aliasBuilder_.dispose();
            aliasBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_GroupBy_AggFunc_descriptor;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc getDefaultInstanceForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.getDefaultInstance();
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc build() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc buildPartial() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc result) {
          if (varsBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              vars_ = java.util.Collections.unmodifiableList(vars_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.vars_ = vars_;
          } else {
            result.vars_ = varsBuilder_.build();
          }
        }

        private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.aggregate_ = aggregate_;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.alias_ = aliasBuilder_ == null
                ? alias_
                : aliasBuilder_.build();
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc) {
            return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc other) {
          if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.getDefaultInstance()) return this;
          if (varsBuilder_ == null) {
            if (!other.vars_.isEmpty()) {
              if (vars_.isEmpty()) {
                vars_ = other.vars_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureVarsIsMutable();
                vars_.addAll(other.vars_);
              }
              onChanged();
            }
          } else {
            if (!other.vars_.isEmpty()) {
              if (varsBuilder_.isEmpty()) {
                varsBuilder_.dispose();
                varsBuilder_ = null;
                vars_ = other.vars_;
                bitField0_ = (bitField0_ & ~0x00000001);
                varsBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getVarsFieldBuilder() : null;
              } else {
                varsBuilder_.addAllMessages(other.vars_);
              }
            }
          }
          if (other.aggregate_ != 0) {
            setAggregateValue(other.getAggregateValue());
          }
          if (other.hasAlias()) {
            mergeAlias(other.getAlias());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable m =
                      input.readMessage(
                          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.parser(),
                          extensionRegistry);
                  if (varsBuilder_ == null) {
                    ensureVarsIsMutable();
                    vars_.add(m);
                  } else {
                    varsBuilder_.addMessage(m);
                  }
                  break;
                } // case 10
                case 16: {
                  aggregate_ = input.readEnum();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 26: {
                  input.readMessage(
                      getAliasFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000004;
                  break;
                } // case 26
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable> vars_ =
          java.util.Collections.emptyList();
        private void ensureVarsIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            vars_ = new java.util.ArrayList<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable>(vars_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> varsBuilder_;

        /**
         * <pre>
         * The variables to apply this aggregation
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>repeated .common.Variable vars = 1;</code>
         */
        public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable> getVarsList() {
          if (varsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(vars_);
          } else {
            return varsBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * The variables to apply this aggregation
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>repeated .common.Variable vars = 1;</code>
         */
        public int getVarsCount() {
          if (varsBuilder_ == null) {
            return vars_.size();
          } else {
            return varsBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * The variables to apply this aggregation
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>repeated .common.Variable vars = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable getVars(int index) {
          if (varsBuilder_ == null) {
            return vars_.get(index);
          } else {
            return varsBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * The variables to apply this aggregation
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>repeated .common.Variable vars = 1;</code>
         */
        public Builder setVars(
            int index, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable value) {
          if (varsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureVarsIsMutable();
            vars_.set(index, value);
            onChanged();
          } else {
            varsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * The variables to apply this aggregation
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>repeated .common.Variable vars = 1;</code>
         */
        public Builder setVars(
            int index, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder builderForValue) {
          if (varsBuilder_ == null) {
            ensureVarsIsMutable();
            vars_.set(index, builderForValue.build());
            onChanged();
          } else {
            varsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * The variables to apply this aggregation
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>repeated .common.Variable vars = 1;</code>
         */
        public Builder addVars(com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable value) {
          if (varsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureVarsIsMutable();
            vars_.add(value);
            onChanged();
          } else {
            varsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * The variables to apply this aggregation
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>repeated .common.Variable vars = 1;</code>
         */
        public Builder addVars(
            int index, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable value) {
          if (varsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureVarsIsMutable();
            vars_.add(index, value);
            onChanged();
          } else {
            varsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * The variables to apply this aggregation
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>repeated .common.Variable vars = 1;</code>
         */
        public Builder addVars(
            com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder builderForValue) {
          if (varsBuilder_ == null) {
            ensureVarsIsMutable();
            vars_.add(builderForValue.build());
            onChanged();
          } else {
            varsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * The variables to apply this aggregation
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>repeated .common.Variable vars = 1;</code>
         */
        public Builder addVars(
            int index, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder builderForValue) {
          if (varsBuilder_ == null) {
            ensureVarsIsMutable();
            vars_.add(index, builderForValue.build());
            onChanged();
          } else {
            varsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * The variables to apply this aggregation
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>repeated .common.Variable vars = 1;</code>
         */
        public Builder addAllVars(
            java.lang.Iterable<? extends com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable> values) {
          if (varsBuilder_ == null) {
            ensureVarsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, vars_);
            onChanged();
          } else {
            varsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * The variables to apply this aggregation
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>repeated .common.Variable vars = 1;</code>
         */
        public Builder clearVars() {
          if (varsBuilder_ == null) {
            vars_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            varsBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * The variables to apply this aggregation
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>repeated .common.Variable vars = 1;</code>
         */
        public Builder removeVars(int index) {
          if (varsBuilder_ == null) {
            ensureVarsIsMutable();
            vars_.remove(index);
            onChanged();
          } else {
            varsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * The variables to apply this aggregation
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>repeated .common.Variable vars = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder getVarsBuilder(
            int index) {
          return getVarsFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * The variables to apply this aggregation
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>repeated .common.Variable vars = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder getVarsOrBuilder(
            int index) {
          if (varsBuilder_ == null) {
            return vars_.get(index);  } else {
            return varsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * The variables to apply this aggregation
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>repeated .common.Variable vars = 1;</code>
         */
        public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> 
             getVarsOrBuilderList() {
          if (varsBuilder_ != null) {
            return varsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(vars_);
          }
        }
        /**
         * <pre>
         * The variables to apply this aggregation
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>repeated .common.Variable vars = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder addVarsBuilder() {
          return getVarsFieldBuilder().addBuilder(
              com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.getDefaultInstance());
        }
        /**
         * <pre>
         * The variables to apply this aggregation
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>repeated .common.Variable vars = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder addVarsBuilder(
            int index) {
          return getVarsFieldBuilder().addBuilder(
              index, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.getDefaultInstance());
        }
        /**
         * <pre>
         * The variables to apply this aggregation
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>repeated .common.Variable vars = 1;</code>
         */
        public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder> 
             getVarsBuilderList() {
          return getVarsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> 
            getVarsFieldBuilder() {
          if (varsBuilder_ == null) {
            varsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder>(
                    vars_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            vars_ = null;
          }
          return varsBuilder_;
        }

        private int aggregate_ = 0;
        /**
         * <pre>
         * The aggregate function
         * </pre>
         *
         * <code>.algebra.GroupBy.AggFunc.Aggregate aggregate = 2;</code>
         * @return The enum numeric value on the wire for aggregate.
         */
        @java.lang.Override public int getAggregateValue() {
          return aggregate_;
        }
        /**
         * <pre>
         * The aggregate function
         * </pre>
         *
         * <code>.algebra.GroupBy.AggFunc.Aggregate aggregate = 2;</code>
         * @param value The enum numeric value on the wire for aggregate to set.
         * @return This builder for chaining.
         */
        public Builder setAggregateValue(int value) {
          aggregate_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The aggregate function
         * </pre>
         *
         * <code>.algebra.GroupBy.AggFunc.Aggregate aggregate = 2;</code>
         * @return The aggregate.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.Aggregate getAggregate() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.Aggregate result = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.Aggregate.forNumber(aggregate_);
          return result == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.Aggregate.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * The aggregate function
         * </pre>
         *
         * <code>.algebra.GroupBy.AggFunc.Aggregate aggregate = 2;</code>
         * @param value The aggregate to set.
         * @return This builder for chaining.
         */
        public Builder setAggregate(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.Aggregate value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          aggregate_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The aggregate function
         * </pre>
         *
         * <code>.algebra.GroupBy.AggFunc.Aggregate aggregate = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearAggregate() {
          bitField0_ = (bitField0_ & ~0x00000002);
          aggregate_ = 0;
          onChanged();
          return this;
        }

        private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId alias_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> aliasBuilder_;
        /**
         * <pre>
         * The alias for the aggregated value
         * </pre>
         *
         * <code>.common.NameOrId alias = 3;</code>
         * @return Whether the alias field is set.
         */
        public boolean hasAlias() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * The alias for the aggregated value
         * </pre>
         *
         * <code>.common.NameOrId alias = 3;</code>
         * @return The alias.
         */
        public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias() {
          if (aliasBuilder_ == null) {
            return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
          } else {
            return aliasBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The alias for the aggregated value
         * </pre>
         *
         * <code>.common.NameOrId alias = 3;</code>
         */
        public Builder setAlias(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
          if (aliasBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            alias_ = value;
          } else {
            aliasBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The alias for the aggregated value
         * </pre>
         *
         * <code>.common.NameOrId alias = 3;</code>
         */
        public Builder setAlias(
            com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
          if (aliasBuilder_ == null) {
            alias_ = builderForValue.build();
          } else {
            aliasBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The alias for the aggregated value
         * </pre>
         *
         * <code>.common.NameOrId alias = 3;</code>
         */
        public Builder mergeAlias(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
          if (aliasBuilder_ == null) {
            if (((bitField0_ & 0x00000004) != 0) &&
              alias_ != null &&
              alias_ != com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance()) {
              getAliasBuilder().mergeFrom(value);
            } else {
              alias_ = value;
            }
          } else {
            aliasBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The alias for the aggregated value
         * </pre>
         *
         * <code>.common.NameOrId alias = 3;</code>
         */
        public Builder clearAlias() {
          bitField0_ = (bitField0_ & ~0x00000004);
          alias_ = null;
          if (aliasBuilder_ != null) {
            aliasBuilder_.dispose();
            aliasBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The alias for the aggregated value
         * </pre>
         *
         * <code>.common.NameOrId alias = 3;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder getAliasBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getAliasFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The alias for the aggregated value
         * </pre>
         *
         * <code>.common.NameOrId alias = 3;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder() {
          if (aliasBuilder_ != null) {
            return aliasBuilder_.getMessageOrBuilder();
          } else {
            return alias_ == null ?
                com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
          }
        }
        /**
         * <pre>
         * The alias for the aggregated value
         * </pre>
         *
         * <code>.common.NameOrId alias = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
            getAliasFieldBuilder() {
          if (aliasBuilder_ == null) {
            aliasBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder>(
                    getAlias(),
                    getParentForChildren(),
                    isClean());
            alias_ = null;
          }
          return aliasBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:algebra.GroupBy.AggFunc)
      }

      // @@protoc_insertion_point(class_scope:algebra.GroupBy.AggFunc)
      private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc();
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<AggFunc>
          PARSER = new com.google.protobuf.AbstractParser<AggFunc>() {
        @java.lang.Override
        public AggFunc parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<AggFunc> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AggFunc> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface KeyAliasOrBuilder extends
        // @@protoc_insertion_point(interface_extends:algebra.GroupBy.KeyAlias)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The key to perform grouping
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>.common.Variable key = 1;</code>
       * @return Whether the key field is set.
       */
      boolean hasKey();
      /**
       * <pre>
       * The key to perform grouping
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>.common.Variable key = 1;</code>
       * @return The key.
       */
      com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable getKey();
      /**
       * <pre>
       * The key to perform grouping
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>.common.Variable key = 1;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder getKeyOrBuilder();

      /**
       * <pre>
       * The alias for the key
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       * @return Whether the alias field is set.
       */
      boolean hasAlias();
      /**
       * <pre>
       * The alias for the key
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       * @return The alias.
       */
      com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias();
      /**
       * <pre>
       * The alias for the key
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder();
    }
    /**
     * Protobuf type {@code algebra.GroupBy.KeyAlias}
     */
    public static final class KeyAlias extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:algebra.GroupBy.KeyAlias)
        KeyAliasOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use KeyAlias.newBuilder() to construct.
      private KeyAlias(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private KeyAlias() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new KeyAlias();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_GroupBy_KeyAlias_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_GroupBy_KeyAlias_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias.Builder.class);
      }

      public static final int KEY_FIELD_NUMBER = 1;
      private com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable key_;
      /**
       * <pre>
       * The key to perform grouping
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>.common.Variable key = 1;</code>
       * @return Whether the key field is set.
       */
      @java.lang.Override
      public boolean hasKey() {
        return key_ != null;
      }
      /**
       * <pre>
       * The key to perform grouping
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>.common.Variable key = 1;</code>
       * @return The key.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable getKey() {
        return key_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.getDefaultInstance() : key_;
      }
      /**
       * <pre>
       * The key to perform grouping
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>.common.Variable key = 1;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder getKeyOrBuilder() {
        return key_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.getDefaultInstance() : key_;
      }

      public static final int ALIAS_FIELD_NUMBER = 2;
      private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId alias_;
      /**
       * <pre>
       * The alias for the key
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       * @return Whether the alias field is set.
       */
      @java.lang.Override
      public boolean hasAlias() {
        return alias_ != null;
      }
      /**
       * <pre>
       * The alias for the key
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       * @return The alias.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias() {
        return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
      }
      /**
       * <pre>
       * The alias for the key
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder() {
        return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (key_ != null) {
          output.writeMessage(1, getKey());
        }
        if (alias_ != null) {
          output.writeMessage(2, getAlias());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (key_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getKey());
        }
        if (alias_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getAlias());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias)) {
          return super.equals(obj);
        }
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias) obj;

        if (hasKey() != other.hasKey()) return false;
        if (hasKey()) {
          if (!getKey()
              .equals(other.getKey())) return false;
        }
        if (hasAlias() != other.hasAlias()) return false;
        if (hasAlias()) {
          if (!getAlias()
              .equals(other.getAlias())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasKey()) {
          hash = (37 * hash) + KEY_FIELD_NUMBER;
          hash = (53 * hash) + getKey().hashCode();
        }
        if (hasAlias()) {
          hash = (37 * hash) + ALIAS_FIELD_NUMBER;
          hash = (53 * hash) + getAlias().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code algebra.GroupBy.KeyAlias}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:algebra.GroupBy.KeyAlias)
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAliasOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_GroupBy_KeyAlias_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_GroupBy_KeyAlias_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias.Builder.class);
        }

        // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          key_ = null;
          if (keyBuilder_ != null) {
            keyBuilder_.dispose();
            keyBuilder_ = null;
          }
          alias_ = null;
          if (aliasBuilder_ != null) {
            aliasBuilder_.dispose();
            aliasBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_GroupBy_KeyAlias_descriptor;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias getDefaultInstanceForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias.getDefaultInstance();
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias build() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias buildPartial() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.key_ = keyBuilder_ == null
                ? key_
                : keyBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.alias_ = aliasBuilder_ == null
                ? alias_
                : aliasBuilder_.build();
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias) {
            return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias other) {
          if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias.getDefaultInstance()) return this;
          if (other.hasKey()) {
            mergeKey(other.getKey());
          }
          if (other.hasAlias()) {
            mergeAlias(other.getAlias());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getKeyFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 18: {
                  input.readMessage(
                      getAliasFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable key_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> keyBuilder_;
        /**
         * <pre>
         * The key to perform grouping
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>.common.Variable key = 1;</code>
         * @return Whether the key field is set.
         */
        public boolean hasKey() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * The key to perform grouping
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>.common.Variable key = 1;</code>
         * @return The key.
         */
        public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable getKey() {
          if (keyBuilder_ == null) {
            return key_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.getDefaultInstance() : key_;
          } else {
            return keyBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The key to perform grouping
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>.common.Variable key = 1;</code>
         */
        public Builder setKey(com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable value) {
          if (keyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            key_ = value;
          } else {
            keyBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The key to perform grouping
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>.common.Variable key = 1;</code>
         */
        public Builder setKey(
            com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder builderForValue) {
          if (keyBuilder_ == null) {
            key_ = builderForValue.build();
          } else {
            keyBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The key to perform grouping
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>.common.Variable key = 1;</code>
         */
        public Builder mergeKey(com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable value) {
          if (keyBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0) &&
              key_ != null &&
              key_ != com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.getDefaultInstance()) {
              getKeyBuilder().mergeFrom(value);
            } else {
              key_ = value;
            }
          } else {
            keyBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The key to perform grouping
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>.common.Variable key = 1;</code>
         */
        public Builder clearKey() {
          bitField0_ = (bitField0_ & ~0x00000001);
          key_ = null;
          if (keyBuilder_ != null) {
            keyBuilder_.dispose();
            keyBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The key to perform grouping
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>.common.Variable key = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder getKeyBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getKeyFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The key to perform grouping
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>.common.Variable key = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder getKeyOrBuilder() {
          if (keyBuilder_ != null) {
            return keyBuilder_.getMessageOrBuilder();
          } else {
            return key_ == null ?
                com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.getDefaultInstance() : key_;
          }
        }
        /**
         * <pre>
         * The key to perform grouping
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>.common.Variable key = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> 
            getKeyFieldBuilder() {
          if (keyBuilder_ == null) {
            keyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder>(
                    getKey(),
                    getParentForChildren(),
                    isClean());
            key_ = null;
          }
          return keyBuilder_;
        }

        private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId alias_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> aliasBuilder_;
        /**
         * <pre>
         * The alias for the key
         * </pre>
         *
         * <code>.common.NameOrId alias = 2;</code>
         * @return Whether the alias field is set.
         */
        public boolean hasAlias() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * The alias for the key
         * </pre>
         *
         * <code>.common.NameOrId alias = 2;</code>
         * @return The alias.
         */
        public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias() {
          if (aliasBuilder_ == null) {
            return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
          } else {
            return aliasBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The alias for the key
         * </pre>
         *
         * <code>.common.NameOrId alias = 2;</code>
         */
        public Builder setAlias(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
          if (aliasBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            alias_ = value;
          } else {
            aliasBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The alias for the key
         * </pre>
         *
         * <code>.common.NameOrId alias = 2;</code>
         */
        public Builder setAlias(
            com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
          if (aliasBuilder_ == null) {
            alias_ = builderForValue.build();
          } else {
            aliasBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The alias for the key
         * </pre>
         *
         * <code>.common.NameOrId alias = 2;</code>
         */
        public Builder mergeAlias(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
          if (aliasBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0) &&
              alias_ != null &&
              alias_ != com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance()) {
              getAliasBuilder().mergeFrom(value);
            } else {
              alias_ = value;
            }
          } else {
            aliasBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The alias for the key
         * </pre>
         *
         * <code>.common.NameOrId alias = 2;</code>
         */
        public Builder clearAlias() {
          bitField0_ = (bitField0_ & ~0x00000002);
          alias_ = null;
          if (aliasBuilder_ != null) {
            aliasBuilder_.dispose();
            aliasBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The alias for the key
         * </pre>
         *
         * <code>.common.NameOrId alias = 2;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder getAliasBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getAliasFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The alias for the key
         * </pre>
         *
         * <code>.common.NameOrId alias = 2;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder() {
          if (aliasBuilder_ != null) {
            return aliasBuilder_.getMessageOrBuilder();
          } else {
            return alias_ == null ?
                com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
          }
        }
        /**
         * <pre>
         * The alias for the key
         * </pre>
         *
         * <code>.common.NameOrId alias = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
            getAliasFieldBuilder() {
          if (aliasBuilder_ == null) {
            aliasBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder>(
                    getAlias(),
                    getParentForChildren(),
                    isClean());
            alias_ = null;
          }
          return aliasBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:algebra.GroupBy.KeyAlias)
      }

      // @@protoc_insertion_point(class_scope:algebra.GroupBy.KeyAlias)
      private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias();
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<KeyAlias>
          PARSER = new com.google.protobuf.AbstractParser<KeyAlias>() {
        @java.lang.Override
        public KeyAlias parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<KeyAlias> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<KeyAlias> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int MAPPINGS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias> mappings_;
    /**
     * <pre>
     * A collection of key-alias mappings
     * </pre>
     *
     * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias> getMappingsList() {
      return mappings_;
    }
    /**
     * <pre>
     * A collection of key-alias mappings
     * </pre>
     *
     * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAliasOrBuilder> 
        getMappingsOrBuilderList() {
      return mappings_;
    }
    /**
     * <pre>
     * A collection of key-alias mappings
     * </pre>
     *
     * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
     */
    @java.lang.Override
    public int getMappingsCount() {
      return mappings_.size();
    }
    /**
     * <pre>
     * A collection of key-alias mappings
     * </pre>
     *
     * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias getMappings(int index) {
      return mappings_.get(index);
    }
    /**
     * <pre>
     * A collection of key-alias mappings
     * </pre>
     *
     * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAliasOrBuilder getMappingsOrBuilder(
        int index) {
      return mappings_.get(index);
    }

    public static final int FUNCTIONS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc> functions_;
    /**
     * <pre>
     * The grouping functions
     * </pre>
     *
     * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc> getFunctionsList() {
      return functions_;
    }
    /**
     * <pre>
     * The grouping functions
     * </pre>
     *
     * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFuncOrBuilder> 
        getFunctionsOrBuilderList() {
      return functions_;
    }
    /**
     * <pre>
     * The grouping functions
     * </pre>
     *
     * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
     */
    @java.lang.Override
    public int getFunctionsCount() {
      return functions_.size();
    }
    /**
     * <pre>
     * The grouping functions
     * </pre>
     *
     * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc getFunctions(int index) {
      return functions_.get(index);
    }
    /**
     * <pre>
     * The grouping functions
     * </pre>
     *
     * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFuncOrBuilder getFunctionsOrBuilder(
        int index) {
      return functions_.get(index);
    }

    public static final int META_DATA_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData> metaData_;
    /**
     * <pre>
     * The datatype of output results
     * </pre>
     *
     * <code>repeated .algebra.MetaData meta_data = 3;</code>
     */
    @java.lang.Override
    public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData> getMetaDataList() {
      return metaData_;
    }
    /**
     * <pre>
     * The datatype of output results
     * </pre>
     *
     * <code>repeated .algebra.MetaData meta_data = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder> 
        getMetaDataOrBuilderList() {
      return metaData_;
    }
    /**
     * <pre>
     * The datatype of output results
     * </pre>
     *
     * <code>repeated .algebra.MetaData meta_data = 3;</code>
     */
    @java.lang.Override
    public int getMetaDataCount() {
      return metaData_.size();
    }
    /**
     * <pre>
     * The datatype of output results
     * </pre>
     *
     * <code>repeated .algebra.MetaData meta_data = 3;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData getMetaData(int index) {
      return metaData_.get(index);
    }
    /**
     * <pre>
     * The datatype of output results
     * </pre>
     *
     * <code>repeated .algebra.MetaData meta_data = 3;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder getMetaDataOrBuilder(
        int index) {
      return metaData_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < mappings_.size(); i++) {
        output.writeMessage(1, mappings_.get(i));
      }
      for (int i = 0; i < functions_.size(); i++) {
        output.writeMessage(2, functions_.get(i));
      }
      for (int i = 0; i < metaData_.size(); i++) {
        output.writeMessage(3, metaData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < mappings_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, mappings_.get(i));
      }
      for (int i = 0; i < functions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, functions_.get(i));
      }
      for (int i = 0; i < metaData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, metaData_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy) obj;

      if (!getMappingsList()
          .equals(other.getMappingsList())) return false;
      if (!getFunctionsList()
          .equals(other.getFunctionsList())) return false;
      if (!getMetaDataList()
          .equals(other.getMetaDataList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getMappingsCount() > 0) {
        hash = (37 * hash) + MAPPINGS_FIELD_NUMBER;
        hash = (53 * hash) + getMappingsList().hashCode();
      }
      if (getFunctionsCount() > 0) {
        hash = (37 * hash) + FUNCTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getFunctionsList().hashCode();
      }
      if (getMetaDataCount() > 0) {
        hash = (37 * hash) + META_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetaDataList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code algebra.GroupBy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.GroupBy)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupByOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_GroupBy_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_GroupBy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (mappingsBuilder_ == null) {
          mappings_ = java.util.Collections.emptyList();
        } else {
          mappings_ = null;
          mappingsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (functionsBuilder_ == null) {
          functions_ = java.util.Collections.emptyList();
        } else {
          functions_ = null;
          functionsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (metaDataBuilder_ == null) {
          metaData_ = java.util.Collections.emptyList();
        } else {
          metaData_ = null;
          metaDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_GroupBy_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy result) {
        if (mappingsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            mappings_ = java.util.Collections.unmodifiableList(mappings_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.mappings_ = mappings_;
        } else {
          result.mappings_ = mappingsBuilder_.build();
        }
        if (functionsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            functions_ = java.util.Collections.unmodifiableList(functions_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.functions_ = functions_;
        } else {
          result.functions_ = functionsBuilder_.build();
        }
        if (metaDataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            metaData_ = java.util.Collections.unmodifiableList(metaData_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.metaData_ = metaData_;
        } else {
          result.metaData_ = metaDataBuilder_.build();
        }
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.getDefaultInstance()) return this;
        if (mappingsBuilder_ == null) {
          if (!other.mappings_.isEmpty()) {
            if (mappings_.isEmpty()) {
              mappings_ = other.mappings_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMappingsIsMutable();
              mappings_.addAll(other.mappings_);
            }
            onChanged();
          }
        } else {
          if (!other.mappings_.isEmpty()) {
            if (mappingsBuilder_.isEmpty()) {
              mappingsBuilder_.dispose();
              mappingsBuilder_ = null;
              mappings_ = other.mappings_;
              bitField0_ = (bitField0_ & ~0x00000001);
              mappingsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMappingsFieldBuilder() : null;
            } else {
              mappingsBuilder_.addAllMessages(other.mappings_);
            }
          }
        }
        if (functionsBuilder_ == null) {
          if (!other.functions_.isEmpty()) {
            if (functions_.isEmpty()) {
              functions_ = other.functions_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFunctionsIsMutable();
              functions_.addAll(other.functions_);
            }
            onChanged();
          }
        } else {
          if (!other.functions_.isEmpty()) {
            if (functionsBuilder_.isEmpty()) {
              functionsBuilder_.dispose();
              functionsBuilder_ = null;
              functions_ = other.functions_;
              bitField0_ = (bitField0_ & ~0x00000002);
              functionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFunctionsFieldBuilder() : null;
            } else {
              functionsBuilder_.addAllMessages(other.functions_);
            }
          }
        }
        if (metaDataBuilder_ == null) {
          if (!other.metaData_.isEmpty()) {
            if (metaData_.isEmpty()) {
              metaData_ = other.metaData_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureMetaDataIsMutable();
              metaData_.addAll(other.metaData_);
            }
            onChanged();
          }
        } else {
          if (!other.metaData_.isEmpty()) {
            if (metaDataBuilder_.isEmpty()) {
              metaDataBuilder_.dispose();
              metaDataBuilder_ = null;
              metaData_ = other.metaData_;
              bitField0_ = (bitField0_ & ~0x00000004);
              metaDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMetaDataFieldBuilder() : null;
            } else {
              metaDataBuilder_.addAllMessages(other.metaData_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias m =
                    input.readMessage(
                        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias.parser(),
                        extensionRegistry);
                if (mappingsBuilder_ == null) {
                  ensureMappingsIsMutable();
                  mappings_.add(m);
                } else {
                  mappingsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc m =
                    input.readMessage(
                        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.parser(),
                        extensionRegistry);
                if (functionsBuilder_ == null) {
                  ensureFunctionsIsMutable();
                  functions_.add(m);
                } else {
                  functionsBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData m =
                    input.readMessage(
                        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.parser(),
                        extensionRegistry);
                if (metaDataBuilder_ == null) {
                  ensureMetaDataIsMutable();
                  metaData_.add(m);
                } else {
                  metaDataBuilder_.addMessage(m);
                }
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias> mappings_ =
        java.util.Collections.emptyList();
      private void ensureMappingsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          mappings_ = new java.util.ArrayList<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias>(mappings_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAliasOrBuilder> mappingsBuilder_;

      /**
       * <pre>
       * A collection of key-alias mappings
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias> getMappingsList() {
        if (mappingsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mappings_);
        } else {
          return mappingsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A collection of key-alias mappings
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
       */
      public int getMappingsCount() {
        if (mappingsBuilder_ == null) {
          return mappings_.size();
        } else {
          return mappingsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A collection of key-alias mappings
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias getMappings(int index) {
        if (mappingsBuilder_ == null) {
          return mappings_.get(index);
        } else {
          return mappingsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A collection of key-alias mappings
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
       */
      public Builder setMappings(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias value) {
        if (mappingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingsIsMutable();
          mappings_.set(index, value);
          onChanged();
        } else {
          mappingsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A collection of key-alias mappings
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
       */
      public Builder setMappings(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias.Builder builderForValue) {
        if (mappingsBuilder_ == null) {
          ensureMappingsIsMutable();
          mappings_.set(index, builderForValue.build());
          onChanged();
        } else {
          mappingsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A collection of key-alias mappings
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
       */
      public Builder addMappings(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias value) {
        if (mappingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingsIsMutable();
          mappings_.add(value);
          onChanged();
        } else {
          mappingsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A collection of key-alias mappings
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
       */
      public Builder addMappings(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias value) {
        if (mappingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingsIsMutable();
          mappings_.add(index, value);
          onChanged();
        } else {
          mappingsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A collection of key-alias mappings
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
       */
      public Builder addMappings(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias.Builder builderForValue) {
        if (mappingsBuilder_ == null) {
          ensureMappingsIsMutable();
          mappings_.add(builderForValue.build());
          onChanged();
        } else {
          mappingsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A collection of key-alias mappings
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
       */
      public Builder addMappings(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias.Builder builderForValue) {
        if (mappingsBuilder_ == null) {
          ensureMappingsIsMutable();
          mappings_.add(index, builderForValue.build());
          onChanged();
        } else {
          mappingsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A collection of key-alias mappings
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
       */
      public Builder addAllMappings(
          java.lang.Iterable<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias> values) {
        if (mappingsBuilder_ == null) {
          ensureMappingsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, mappings_);
          onChanged();
        } else {
          mappingsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A collection of key-alias mappings
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
       */
      public Builder clearMappings() {
        if (mappingsBuilder_ == null) {
          mappings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          mappingsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A collection of key-alias mappings
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
       */
      public Builder removeMappings(int index) {
        if (mappingsBuilder_ == null) {
          ensureMappingsIsMutable();
          mappings_.remove(index);
          onChanged();
        } else {
          mappingsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A collection of key-alias mappings
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias.Builder getMappingsBuilder(
          int index) {
        return getMappingsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A collection of key-alias mappings
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAliasOrBuilder getMappingsOrBuilder(
          int index) {
        if (mappingsBuilder_ == null) {
          return mappings_.get(index);  } else {
          return mappingsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A collection of key-alias mappings
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
       */
      public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAliasOrBuilder> 
           getMappingsOrBuilderList() {
        if (mappingsBuilder_ != null) {
          return mappingsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mappings_);
        }
      }
      /**
       * <pre>
       * A collection of key-alias mappings
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias.Builder addMappingsBuilder() {
        return getMappingsFieldBuilder().addBuilder(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias.getDefaultInstance());
      }
      /**
       * <pre>
       * A collection of key-alias mappings
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias.Builder addMappingsBuilder(
          int index) {
        return getMappingsFieldBuilder().addBuilder(
            index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias.getDefaultInstance());
      }
      /**
       * <pre>
       * A collection of key-alias mappings
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.KeyAlias mappings = 1;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias.Builder> 
           getMappingsBuilderList() {
        return getMappingsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAliasOrBuilder> 
          getMappingsFieldBuilder() {
        if (mappingsBuilder_ == null) {
          mappingsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAlias.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.KeyAliasOrBuilder>(
                  mappings_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          mappings_ = null;
        }
        return mappingsBuilder_;
      }

      private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc> functions_ =
        java.util.Collections.emptyList();
      private void ensureFunctionsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          functions_ = new java.util.ArrayList<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc>(functions_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFuncOrBuilder> functionsBuilder_;

      /**
       * <pre>
       * The grouping functions
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc> getFunctionsList() {
        if (functionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(functions_);
        } else {
          return functionsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The grouping functions
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
       */
      public int getFunctionsCount() {
        if (functionsBuilder_ == null) {
          return functions_.size();
        } else {
          return functionsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The grouping functions
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc getFunctions(int index) {
        if (functionsBuilder_ == null) {
          return functions_.get(index);
        } else {
          return functionsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The grouping functions
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
       */
      public Builder setFunctions(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc value) {
        if (functionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFunctionsIsMutable();
          functions_.set(index, value);
          onChanged();
        } else {
          functionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The grouping functions
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
       */
      public Builder setFunctions(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.Builder builderForValue) {
        if (functionsBuilder_ == null) {
          ensureFunctionsIsMutable();
          functions_.set(index, builderForValue.build());
          onChanged();
        } else {
          functionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The grouping functions
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
       */
      public Builder addFunctions(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc value) {
        if (functionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFunctionsIsMutable();
          functions_.add(value);
          onChanged();
        } else {
          functionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The grouping functions
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
       */
      public Builder addFunctions(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc value) {
        if (functionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFunctionsIsMutable();
          functions_.add(index, value);
          onChanged();
        } else {
          functionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The grouping functions
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
       */
      public Builder addFunctions(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.Builder builderForValue) {
        if (functionsBuilder_ == null) {
          ensureFunctionsIsMutable();
          functions_.add(builderForValue.build());
          onChanged();
        } else {
          functionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The grouping functions
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
       */
      public Builder addFunctions(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.Builder builderForValue) {
        if (functionsBuilder_ == null) {
          ensureFunctionsIsMutable();
          functions_.add(index, builderForValue.build());
          onChanged();
        } else {
          functionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The grouping functions
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
       */
      public Builder addAllFunctions(
          java.lang.Iterable<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc> values) {
        if (functionsBuilder_ == null) {
          ensureFunctionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, functions_);
          onChanged();
        } else {
          functionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The grouping functions
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
       */
      public Builder clearFunctions() {
        if (functionsBuilder_ == null) {
          functions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          functionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The grouping functions
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
       */
      public Builder removeFunctions(int index) {
        if (functionsBuilder_ == null) {
          ensureFunctionsIsMutable();
          functions_.remove(index);
          onChanged();
        } else {
          functionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The grouping functions
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.Builder getFunctionsBuilder(
          int index) {
        return getFunctionsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The grouping functions
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFuncOrBuilder getFunctionsOrBuilder(
          int index) {
        if (functionsBuilder_ == null) {
          return functions_.get(index);  } else {
          return functionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The grouping functions
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
       */
      public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFuncOrBuilder> 
           getFunctionsOrBuilderList() {
        if (functionsBuilder_ != null) {
          return functionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(functions_);
        }
      }
      /**
       * <pre>
       * The grouping functions
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.Builder addFunctionsBuilder() {
        return getFunctionsFieldBuilder().addBuilder(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.getDefaultInstance());
      }
      /**
       * <pre>
       * The grouping functions
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.Builder addFunctionsBuilder(
          int index) {
        return getFunctionsFieldBuilder().addBuilder(
            index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.getDefaultInstance());
      }
      /**
       * <pre>
       * The grouping functions
       * </pre>
       *
       * <code>repeated .algebra.GroupBy.AggFunc functions = 2;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.Builder> 
           getFunctionsBuilderList() {
        return getFunctionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFuncOrBuilder> 
          getFunctionsFieldBuilder() {
        if (functionsBuilder_ == null) {
          functionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFunc.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.AggFuncOrBuilder>(
                  functions_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          functions_ = null;
        }
        return functionsBuilder_;
      }

      private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData> metaData_ =
        java.util.Collections.emptyList();
      private void ensureMetaDataIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          metaData_ = new java.util.ArrayList<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData>(metaData_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder> metaDataBuilder_;

      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData> getMetaDataList() {
        if (metaDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaData_);
        } else {
          return metaDataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public int getMetaDataCount() {
        if (metaDataBuilder_ == null) {
          return metaData_.size();
        } else {
          return metaDataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData getMetaData(int index) {
        if (metaDataBuilder_ == null) {
          return metaData_.get(index);
        } else {
          return metaDataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public Builder setMetaData(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData value) {
        if (metaDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaDataIsMutable();
          metaData_.set(index, value);
          onChanged();
        } else {
          metaDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public Builder setMetaData(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder builderForValue) {
        if (metaDataBuilder_ == null) {
          ensureMetaDataIsMutable();
          metaData_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public Builder addMetaData(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData value) {
        if (metaDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaDataIsMutable();
          metaData_.add(value);
          onChanged();
        } else {
          metaDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public Builder addMetaData(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData value) {
        if (metaDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaDataIsMutable();
          metaData_.add(index, value);
          onChanged();
        } else {
          metaDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public Builder addMetaData(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder builderForValue) {
        if (metaDataBuilder_ == null) {
          ensureMetaDataIsMutable();
          metaData_.add(builderForValue.build());
          onChanged();
        } else {
          metaDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public Builder addMetaData(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder builderForValue) {
        if (metaDataBuilder_ == null) {
          ensureMetaDataIsMutable();
          metaData_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public Builder addAllMetaData(
          java.lang.Iterable<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData> values) {
        if (metaDataBuilder_ == null) {
          ensureMetaDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaData_);
          onChanged();
        } else {
          metaDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public Builder clearMetaData() {
        if (metaDataBuilder_ == null) {
          metaData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          metaDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public Builder removeMetaData(int index) {
        if (metaDataBuilder_ == null) {
          ensureMetaDataIsMutable();
          metaData_.remove(index);
          onChanged();
        } else {
          metaDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder getMetaDataBuilder(
          int index) {
        return getMetaDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder getMetaDataOrBuilder(
          int index) {
        if (metaDataBuilder_ == null) {
          return metaData_.get(index);  } else {
          return metaDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder> 
           getMetaDataOrBuilderList() {
        if (metaDataBuilder_ != null) {
          return metaDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaData_);
        }
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder addMetaDataBuilder() {
        return getMetaDataFieldBuilder().addBuilder(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance());
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder addMetaDataBuilder(
          int index) {
        return getMetaDataFieldBuilder().addBuilder(
            index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance());
      }
      /**
       * <pre>
       * The datatype of output results
       * </pre>
       *
       * <code>repeated .algebra.MetaData meta_data = 3;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder> 
           getMetaDataBuilderList() {
        return getMetaDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder> 
          getMetaDataFieldBuilder() {
        if (metaDataBuilder_ == null) {
          metaDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder>(
                  metaData_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          metaData_ = null;
        }
        return metaDataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.GroupBy)
    }

    // @@protoc_insertion_point(class_scope:algebra.GroupBy)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GroupBy>
        PARSER = new com.google.protobuf.AbstractParser<GroupBy>() {
      @java.lang.Override
      public GroupBy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GroupBy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GroupBy> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OrderByOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.OrderBy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
     */
    java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair> 
        getPairsList();
    /**
     * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair getPairs(int index);
    /**
     * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
     */
    int getPairsCount();
    /**
     * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
     */
    java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPairOrBuilder> 
        getPairsOrBuilderList();
    /**
     * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPairOrBuilder getPairsOrBuilder(
        int index);

    /**
     * <pre>
     * A size limit. `OrderBy.Limit` is equivalent to the `Topk` operation
     * </pre>
     *
     * <code>.algebra.Range limit = 3;</code>
     * @return Whether the limit field is set.
     */
    boolean hasLimit();
    /**
     * <pre>
     * A size limit. `OrderBy.Limit` is equivalent to the `Topk` operation
     * </pre>
     *
     * <code>.algebra.Range limit = 3;</code>
     * @return The limit.
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range getLimit();
    /**
     * <pre>
     * A size limit. `OrderBy.Limit` is equivalent to the `Topk` operation
     * </pre>
     *
     * <code>.algebra.Range limit = 3;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RangeOrBuilder getLimitOrBuilder();
  }
  /**
   * Protobuf type {@code algebra.OrderBy}
   */
  public static final class OrderBy extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.OrderBy)
      OrderByOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OrderBy.newBuilder() to construct.
    private OrderBy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OrderBy() {
      pairs_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new OrderBy();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_OrderBy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_OrderBy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.Builder.class);
    }

    public interface OrderingPairOrBuilder extends
        // @@protoc_insertion_point(interface_extends:algebra.OrderBy.OrderingPair)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>.common.Variable key = 1;</code>
       * @return Whether the key field is set.
       */
      boolean hasKey();
      /**
       * <pre>
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>.common.Variable key = 1;</code>
       * @return The key.
       */
      com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable getKey();
      /**
       * <pre>
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>.common.Variable key = 1;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder getKeyOrBuilder();

      /**
       * <code>.algebra.OrderBy.OrderingPair.Order order = 2;</code>
       * @return The enum numeric value on the wire for order.
       */
      int getOrderValue();
      /**
       * <code>.algebra.OrderBy.OrderingPair.Order order = 2;</code>
       * @return The order.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.Order getOrder();
    }
    /**
     * Protobuf type {@code algebra.OrderBy.OrderingPair}
     */
    public static final class OrderingPair extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:algebra.OrderBy.OrderingPair)
        OrderingPairOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use OrderingPair.newBuilder() to construct.
      private OrderingPair(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private OrderingPair() {
        order_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new OrderingPair();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_OrderBy_OrderingPair_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_OrderBy_OrderingPair_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.Builder.class);
      }

      /**
       * Protobuf enum {@code algebra.OrderBy.OrderingPair.Order}
       */
      public enum Order
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         * random
         * </pre>
         *
         * <code>SHUFFLE = 0;</code>
         */
        SHUFFLE(0),
        /**
         * <pre>
         * ascending
         * </pre>
         *
         * <code>ASC = 1;</code>
         */
        ASC(1),
        /**
         * <pre>
         * descending
         * </pre>
         *
         * <code>DESC = 2;</code>
         */
        DESC(2),
        UNRECOGNIZED(-1),
        ;

        /**
         * <pre>
         * random
         * </pre>
         *
         * <code>SHUFFLE = 0;</code>
         */
        public static final int SHUFFLE_VALUE = 0;
        /**
         * <pre>
         * ascending
         * </pre>
         *
         * <code>ASC = 1;</code>
         */
        public static final int ASC_VALUE = 1;
        /**
         * <pre>
         * descending
         * </pre>
         *
         * <code>DESC = 2;</code>
         */
        public static final int DESC_VALUE = 2;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static Order valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static Order forNumber(int value) {
          switch (value) {
            case 0: return SHUFFLE;
            case 1: return ASC;
            case 2: return DESC;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Order>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            Order> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Order>() {
                public Order findValueByNumber(int number) {
                  return Order.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                "Can't get the descriptor of an unrecognized enum value.");
          }
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.getDescriptor().getEnumTypes().get(0);
        }

        private static final Order[] VALUES = values();

        public static Order valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private Order(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:algebra.OrderBy.OrderingPair.Order)
      }

      public static final int KEY_FIELD_NUMBER = 1;
      private com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable key_;
      /**
       * <pre>
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>.common.Variable key = 1;</code>
       * @return Whether the key field is set.
       */
      @java.lang.Override
      public boolean hasKey() {
        return key_ != null;
      }
      /**
       * <pre>
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>.common.Variable key = 1;</code>
       * @return The key.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable getKey() {
        return key_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.getDefaultInstance() : key_;
      }
      /**
       * <pre>
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>.common.Variable key = 1;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder getKeyOrBuilder() {
        return key_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.getDefaultInstance() : key_;
      }

      public static final int ORDER_FIELD_NUMBER = 2;
      private int order_ = 0;
      /**
       * <code>.algebra.OrderBy.OrderingPair.Order order = 2;</code>
       * @return The enum numeric value on the wire for order.
       */
      @java.lang.Override public int getOrderValue() {
        return order_;
      }
      /**
       * <code>.algebra.OrderBy.OrderingPair.Order order = 2;</code>
       * @return The order.
       */
      @java.lang.Override public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.Order getOrder() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.Order result = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.Order.forNumber(order_);
        return result == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.Order.UNRECOGNIZED : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (key_ != null) {
          output.writeMessage(1, getKey());
        }
        if (order_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.Order.SHUFFLE.getNumber()) {
          output.writeEnum(2, order_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (key_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getKey());
        }
        if (order_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.Order.SHUFFLE.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, order_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair)) {
          return super.equals(obj);
        }
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair) obj;

        if (hasKey() != other.hasKey()) return false;
        if (hasKey()) {
          if (!getKey()
              .equals(other.getKey())) return false;
        }
        if (order_ != other.order_) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasKey()) {
          hash = (37 * hash) + KEY_FIELD_NUMBER;
          hash = (53 * hash) + getKey().hashCode();
        }
        hash = (37 * hash) + ORDER_FIELD_NUMBER;
        hash = (53 * hash) + order_;
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code algebra.OrderBy.OrderingPair}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:algebra.OrderBy.OrderingPair)
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPairOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_OrderBy_OrderingPair_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_OrderBy_OrderingPair_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.Builder.class);
        }

        // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          key_ = null;
          if (keyBuilder_ != null) {
            keyBuilder_.dispose();
            keyBuilder_ = null;
          }
          order_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_OrderBy_OrderingPair_descriptor;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair getDefaultInstanceForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.getDefaultInstance();
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair build() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair buildPartial() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.key_ = keyBuilder_ == null
                ? key_
                : keyBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.order_ = order_;
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair) {
            return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair other) {
          if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.getDefaultInstance()) return this;
          if (other.hasKey()) {
            mergeKey(other.getKey());
          }
          if (other.order_ != 0) {
            setOrderValue(other.getOrderValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getKeyFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 16: {
                  order_ = input.readEnum();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable key_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> keyBuilder_;
        /**
         * <pre>
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>.common.Variable key = 1;</code>
         * @return Whether the key field is set.
         */
        public boolean hasKey() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>.common.Variable key = 1;</code>
         * @return The key.
         */
        public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable getKey() {
          if (keyBuilder_ == null) {
            return key_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.getDefaultInstance() : key_;
          } else {
            return keyBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>.common.Variable key = 1;</code>
         */
        public Builder setKey(com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable value) {
          if (keyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            key_ = value;
          } else {
            keyBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>.common.Variable key = 1;</code>
         */
        public Builder setKey(
            com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder builderForValue) {
          if (keyBuilder_ == null) {
            key_ = builderForValue.build();
          } else {
            keyBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>.common.Variable key = 1;</code>
         */
        public Builder mergeKey(com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable value) {
          if (keyBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0) &&
              key_ != null &&
              key_ != com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.getDefaultInstance()) {
              getKeyBuilder().mergeFrom(value);
            } else {
              key_ = value;
            }
          } else {
            keyBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>.common.Variable key = 1;</code>
         */
        public Builder clearKey() {
          bitField0_ = (bitField0_ & ~0x00000001);
          key_ = null;
          if (keyBuilder_ != null) {
            keyBuilder_.dispose();
            keyBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>.common.Variable key = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder getKeyBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getKeyFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>.common.Variable key = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder getKeyOrBuilder() {
          if (keyBuilder_ != null) {
            return keyBuilder_.getMessageOrBuilder();
          } else {
            return key_ == null ?
                com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.getDefaultInstance() : key_;
          }
        }
        /**
         * <pre>
         * TODO(longbin) An expression here is a more general form
         * </pre>
         *
         * <code>.common.Variable key = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> 
            getKeyFieldBuilder() {
          if (keyBuilder_ == null) {
            keyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder>(
                    getKey(),
                    getParentForChildren(),
                    isClean());
            key_ = null;
          }
          return keyBuilder_;
        }

        private int order_ = 0;
        /**
         * <code>.algebra.OrderBy.OrderingPair.Order order = 2;</code>
         * @return The enum numeric value on the wire for order.
         */
        @java.lang.Override public int getOrderValue() {
          return order_;
        }
        /**
         * <code>.algebra.OrderBy.OrderingPair.Order order = 2;</code>
         * @param value The enum numeric value on the wire for order to set.
         * @return This builder for chaining.
         */
        public Builder setOrderValue(int value) {
          order_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>.algebra.OrderBy.OrderingPair.Order order = 2;</code>
         * @return The order.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.Order getOrder() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.Order result = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.Order.forNumber(order_);
          return result == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.Order.UNRECOGNIZED : result;
        }
        /**
         * <code>.algebra.OrderBy.OrderingPair.Order order = 2;</code>
         * @param value The order to set.
         * @return This builder for chaining.
         */
        public Builder setOrder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.Order value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          order_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.algebra.OrderBy.OrderingPair.Order order = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearOrder() {
          bitField0_ = (bitField0_ & ~0x00000002);
          order_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:algebra.OrderBy.OrderingPair)
      }

      // @@protoc_insertion_point(class_scope:algebra.OrderBy.OrderingPair)
      private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair();
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<OrderingPair>
          PARSER = new com.google.protobuf.AbstractParser<OrderingPair>() {
        @java.lang.Override
        public OrderingPair parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<OrderingPair> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<OrderingPair> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int PAIRS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair> pairs_;
    /**
     * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair> getPairsList() {
      return pairs_;
    }
    /**
     * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPairOrBuilder> 
        getPairsOrBuilderList() {
      return pairs_;
    }
    /**
     * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
     */
    @java.lang.Override
    public int getPairsCount() {
      return pairs_.size();
    }
    /**
     * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair getPairs(int index) {
      return pairs_.get(index);
    }
    /**
     * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPairOrBuilder getPairsOrBuilder(
        int index) {
      return pairs_.get(index);
    }

    public static final int LIMIT_FIELD_NUMBER = 3;
    private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range limit_;
    /**
     * <pre>
     * A size limit. `OrderBy.Limit` is equivalent to the `Topk` operation
     * </pre>
     *
     * <code>.algebra.Range limit = 3;</code>
     * @return Whether the limit field is set.
     */
    @java.lang.Override
    public boolean hasLimit() {
      return limit_ != null;
    }
    /**
     * <pre>
     * A size limit. `OrderBy.Limit` is equivalent to the `Topk` operation
     * </pre>
     *
     * <code>.algebra.Range limit = 3;</code>
     * @return The limit.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range getLimit() {
      return limit_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.getDefaultInstance() : limit_;
    }
    /**
     * <pre>
     * A size limit. `OrderBy.Limit` is equivalent to the `Topk` operation
     * </pre>
     *
     * <code>.algebra.Range limit = 3;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RangeOrBuilder getLimitOrBuilder() {
      return limit_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.getDefaultInstance() : limit_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < pairs_.size(); i++) {
        output.writeMessage(2, pairs_.get(i));
      }
      if (limit_ != null) {
        output.writeMessage(3, getLimit());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < pairs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, pairs_.get(i));
      }
      if (limit_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getLimit());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy) obj;

      if (!getPairsList()
          .equals(other.getPairsList())) return false;
      if (hasLimit() != other.hasLimit()) return false;
      if (hasLimit()) {
        if (!getLimit()
            .equals(other.getLimit())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPairsCount() > 0) {
        hash = (37 * hash) + PAIRS_FIELD_NUMBER;
        hash = (53 * hash) + getPairsList().hashCode();
      }
      if (hasLimit()) {
        hash = (37 * hash) + LIMIT_FIELD_NUMBER;
        hash = (53 * hash) + getLimit().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code algebra.OrderBy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.OrderBy)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderByOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_OrderBy_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_OrderBy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (pairsBuilder_ == null) {
          pairs_ = java.util.Collections.emptyList();
        } else {
          pairs_ = null;
          pairsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        limit_ = null;
        if (limitBuilder_ != null) {
          limitBuilder_.dispose();
          limitBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_OrderBy_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy result) {
        if (pairsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            pairs_ = java.util.Collections.unmodifiableList(pairs_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.pairs_ = pairs_;
        } else {
          result.pairs_ = pairsBuilder_.build();
        }
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.limit_ = limitBuilder_ == null
              ? limit_
              : limitBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.getDefaultInstance()) return this;
        if (pairsBuilder_ == null) {
          if (!other.pairs_.isEmpty()) {
            if (pairs_.isEmpty()) {
              pairs_ = other.pairs_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePairsIsMutable();
              pairs_.addAll(other.pairs_);
            }
            onChanged();
          }
        } else {
          if (!other.pairs_.isEmpty()) {
            if (pairsBuilder_.isEmpty()) {
              pairsBuilder_.dispose();
              pairsBuilder_ = null;
              pairs_ = other.pairs_;
              bitField0_ = (bitField0_ & ~0x00000001);
              pairsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPairsFieldBuilder() : null;
            } else {
              pairsBuilder_.addAllMessages(other.pairs_);
            }
          }
        }
        if (other.hasLimit()) {
          mergeLimit(other.getLimit());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 18: {
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair m =
                    input.readMessage(
                        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.parser(),
                        extensionRegistry);
                if (pairsBuilder_ == null) {
                  ensurePairsIsMutable();
                  pairs_.add(m);
                } else {
                  pairsBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getLimitFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair> pairs_ =
        java.util.Collections.emptyList();
      private void ensurePairsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          pairs_ = new java.util.ArrayList<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair>(pairs_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPairOrBuilder> pairsBuilder_;

      /**
       * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair> getPairsList() {
        if (pairsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pairs_);
        } else {
          return pairsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
       */
      public int getPairsCount() {
        if (pairsBuilder_ == null) {
          return pairs_.size();
        } else {
          return pairsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair getPairs(int index) {
        if (pairsBuilder_ == null) {
          return pairs_.get(index);
        } else {
          return pairsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
       */
      public Builder setPairs(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair value) {
        if (pairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePairsIsMutable();
          pairs_.set(index, value);
          onChanged();
        } else {
          pairsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
       */
      public Builder setPairs(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.Builder builderForValue) {
        if (pairsBuilder_ == null) {
          ensurePairsIsMutable();
          pairs_.set(index, builderForValue.build());
          onChanged();
        } else {
          pairsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
       */
      public Builder addPairs(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair value) {
        if (pairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePairsIsMutable();
          pairs_.add(value);
          onChanged();
        } else {
          pairsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
       */
      public Builder addPairs(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair value) {
        if (pairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePairsIsMutable();
          pairs_.add(index, value);
          onChanged();
        } else {
          pairsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
       */
      public Builder addPairs(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.Builder builderForValue) {
        if (pairsBuilder_ == null) {
          ensurePairsIsMutable();
          pairs_.add(builderForValue.build());
          onChanged();
        } else {
          pairsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
       */
      public Builder addPairs(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.Builder builderForValue) {
        if (pairsBuilder_ == null) {
          ensurePairsIsMutable();
          pairs_.add(index, builderForValue.build());
          onChanged();
        } else {
          pairsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
       */
      public Builder addAllPairs(
          java.lang.Iterable<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair> values) {
        if (pairsBuilder_ == null) {
          ensurePairsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, pairs_);
          onChanged();
        } else {
          pairsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
       */
      public Builder clearPairs() {
        if (pairsBuilder_ == null) {
          pairs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          pairsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
       */
      public Builder removePairs(int index) {
        if (pairsBuilder_ == null) {
          ensurePairsIsMutable();
          pairs_.remove(index);
          onChanged();
        } else {
          pairsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.Builder getPairsBuilder(
          int index) {
        return getPairsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPairOrBuilder getPairsOrBuilder(
          int index) {
        if (pairsBuilder_ == null) {
          return pairs_.get(index);  } else {
          return pairsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
       */
      public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPairOrBuilder> 
           getPairsOrBuilderList() {
        if (pairsBuilder_ != null) {
          return pairsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pairs_);
        }
      }
      /**
       * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.Builder addPairsBuilder() {
        return getPairsFieldBuilder().addBuilder(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.getDefaultInstance());
      }
      /**
       * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.Builder addPairsBuilder(
          int index) {
        return getPairsFieldBuilder().addBuilder(
            index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.getDefaultInstance());
      }
      /**
       * <code>repeated .algebra.OrderBy.OrderingPair pairs = 2;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.Builder> 
           getPairsBuilderList() {
        return getPairsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPairOrBuilder> 
          getPairsFieldBuilder() {
        if (pairsBuilder_ == null) {
          pairsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPair.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.OrderingPairOrBuilder>(
                  pairs_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          pairs_ = null;
        }
        return pairsBuilder_;
      }

      private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range limit_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RangeOrBuilder> limitBuilder_;
      /**
       * <pre>
       * A size limit. `OrderBy.Limit` is equivalent to the `Topk` operation
       * </pre>
       *
       * <code>.algebra.Range limit = 3;</code>
       * @return Whether the limit field is set.
       */
      public boolean hasLimit() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * A size limit. `OrderBy.Limit` is equivalent to the `Topk` operation
       * </pre>
       *
       * <code>.algebra.Range limit = 3;</code>
       * @return The limit.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range getLimit() {
        if (limitBuilder_ == null) {
          return limit_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.getDefaultInstance() : limit_;
        } else {
          return limitBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * A size limit. `OrderBy.Limit` is equivalent to the `Topk` operation
       * </pre>
       *
       * <code>.algebra.Range limit = 3;</code>
       */
      public Builder setLimit(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range value) {
        if (limitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          limit_ = value;
        } else {
          limitBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A size limit. `OrderBy.Limit` is equivalent to the `Topk` operation
       * </pre>
       *
       * <code>.algebra.Range limit = 3;</code>
       */
      public Builder setLimit(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.Builder builderForValue) {
        if (limitBuilder_ == null) {
          limit_ = builderForValue.build();
        } else {
          limitBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A size limit. `OrderBy.Limit` is equivalent to the `Topk` operation
       * </pre>
       *
       * <code>.algebra.Range limit = 3;</code>
       */
      public Builder mergeLimit(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range value) {
        if (limitBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            limit_ != null &&
            limit_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.getDefaultInstance()) {
            getLimitBuilder().mergeFrom(value);
          } else {
            limit_ = value;
          }
        } else {
          limitBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A size limit. `OrderBy.Limit` is equivalent to the `Topk` operation
       * </pre>
       *
       * <code>.algebra.Range limit = 3;</code>
       */
      public Builder clearLimit() {
        bitField0_ = (bitField0_ & ~0x00000002);
        limit_ = null;
        if (limitBuilder_ != null) {
          limitBuilder_.dispose();
          limitBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A size limit. `OrderBy.Limit` is equivalent to the `Topk` operation
       * </pre>
       *
       * <code>.algebra.Range limit = 3;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.Builder getLimitBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getLimitFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * A size limit. `OrderBy.Limit` is equivalent to the `Topk` operation
       * </pre>
       *
       * <code>.algebra.Range limit = 3;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RangeOrBuilder getLimitOrBuilder() {
        if (limitBuilder_ != null) {
          return limitBuilder_.getMessageOrBuilder();
        } else {
          return limit_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.getDefaultInstance() : limit_;
        }
      }
      /**
       * <pre>
       * A size limit. `OrderBy.Limit` is equivalent to the `Topk` operation
       * </pre>
       *
       * <code>.algebra.Range limit = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RangeOrBuilder> 
          getLimitFieldBuilder() {
        if (limitBuilder_ == null) {
          limitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RangeOrBuilder>(
                  getLimit(),
                  getParentForChildren(),
                  isClean());
          limit_ = null;
        }
        return limitBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.OrderBy)
    }

    // @@protoc_insertion_point(class_scope:algebra.OrderBy)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OrderBy>
        PARSER = new com.google.protobuf.AbstractParser<OrderBy>() {
      @java.lang.Override
      public OrderBy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<OrderBy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OrderBy> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DedupOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.Dedup)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * TODO(longbin) An expression here is a more general form
     * </pre>
     *
     * <code>repeated .common.Variable keys = 1;</code>
     */
    java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable> 
        getKeysList();
    /**
     * <pre>
     * TODO(longbin) An expression here is a more general form
     * </pre>
     *
     * <code>repeated .common.Variable keys = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable getKeys(int index);
    /**
     * <pre>
     * TODO(longbin) An expression here is a more general form
     * </pre>
     *
     * <code>repeated .common.Variable keys = 1;</code>
     */
    int getKeysCount();
    /**
     * <pre>
     * TODO(longbin) An expression here is a more general form
     * </pre>
     *
     * <code>repeated .common.Variable keys = 1;</code>
     */
    java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> 
        getKeysOrBuilderList();
    /**
     * <pre>
     * TODO(longbin) An expression here is a more general form
     * </pre>
     *
     * <code>repeated .common.Variable keys = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder getKeysOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code algebra.Dedup}
   */
  public static final class Dedup extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.Dedup)
      DedupOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Dedup.newBuilder() to construct.
    private Dedup(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Dedup() {
      keys_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Dedup();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Dedup_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Dedup_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup.Builder.class);
    }

    public static final int KEYS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable> keys_;
    /**
     * <pre>
     * TODO(longbin) An expression here is a more general form
     * </pre>
     *
     * <code>repeated .common.Variable keys = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable> getKeysList() {
      return keys_;
    }
    /**
     * <pre>
     * TODO(longbin) An expression here is a more general form
     * </pre>
     *
     * <code>repeated .common.Variable keys = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> 
        getKeysOrBuilderList() {
      return keys_;
    }
    /**
     * <pre>
     * TODO(longbin) An expression here is a more general form
     * </pre>
     *
     * <code>repeated .common.Variable keys = 1;</code>
     */
    @java.lang.Override
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <pre>
     * TODO(longbin) An expression here is a more general form
     * </pre>
     *
     * <code>repeated .common.Variable keys = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable getKeys(int index) {
      return keys_.get(index);
    }
    /**
     * <pre>
     * TODO(longbin) An expression here is a more general form
     * </pre>
     *
     * <code>repeated .common.Variable keys = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder getKeysOrBuilder(
        int index) {
      return keys_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < keys_.size(); i++) {
        output.writeMessage(1, keys_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < keys_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, keys_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup) obj;

      if (!getKeysList()
          .equals(other.getKeysList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getKeysCount() > 0) {
        hash = (37 * hash) + KEYS_FIELD_NUMBER;
        hash = (53 * hash) + getKeysList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code algebra.Dedup}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.Dedup)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.DedupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Dedup_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Dedup_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (keysBuilder_ == null) {
          keys_ = java.util.Collections.emptyList();
        } else {
          keys_ = null;
          keysBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Dedup_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup result) {
        if (keysBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            keys_ = java.util.Collections.unmodifiableList(keys_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.keys_ = keys_;
        } else {
          result.keys_ = keysBuilder_.build();
        }
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup.getDefaultInstance()) return this;
        if (keysBuilder_ == null) {
          if (!other.keys_.isEmpty()) {
            if (keys_.isEmpty()) {
              keys_ = other.keys_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureKeysIsMutable();
              keys_.addAll(other.keys_);
            }
            onChanged();
          }
        } else {
          if (!other.keys_.isEmpty()) {
            if (keysBuilder_.isEmpty()) {
              keysBuilder_.dispose();
              keysBuilder_ = null;
              keys_ = other.keys_;
              bitField0_ = (bitField0_ & ~0x00000001);
              keysBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getKeysFieldBuilder() : null;
            } else {
              keysBuilder_.addAllMessages(other.keys_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable m =
                    input.readMessage(
                        com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.parser(),
                        extensionRegistry);
                if (keysBuilder_ == null) {
                  ensureKeysIsMutable();
                  keys_.add(m);
                } else {
                  keysBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable> keys_ =
        java.util.Collections.emptyList();
      private void ensureKeysIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          keys_ = new java.util.ArrayList<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable>(keys_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> keysBuilder_;

      /**
       * <pre>
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable keys = 1;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable> getKeysList() {
        if (keysBuilder_ == null) {
          return java.util.Collections.unmodifiableList(keys_);
        } else {
          return keysBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable keys = 1;</code>
       */
      public int getKeysCount() {
        if (keysBuilder_ == null) {
          return keys_.size();
        } else {
          return keysBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable keys = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable getKeys(int index) {
        if (keysBuilder_ == null) {
          return keys_.get(index);
        } else {
          return keysBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable keys = 1;</code>
       */
      public Builder setKeys(
          int index, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable value) {
        if (keysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKeysIsMutable();
          keys_.set(index, value);
          onChanged();
        } else {
          keysBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable keys = 1;</code>
       */
      public Builder setKeys(
          int index, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder builderForValue) {
        if (keysBuilder_ == null) {
          ensureKeysIsMutable();
          keys_.set(index, builderForValue.build());
          onChanged();
        } else {
          keysBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable keys = 1;</code>
       */
      public Builder addKeys(com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable value) {
        if (keysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKeysIsMutable();
          keys_.add(value);
          onChanged();
        } else {
          keysBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable keys = 1;</code>
       */
      public Builder addKeys(
          int index, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable value) {
        if (keysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKeysIsMutable();
          keys_.add(index, value);
          onChanged();
        } else {
          keysBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable keys = 1;</code>
       */
      public Builder addKeys(
          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder builderForValue) {
        if (keysBuilder_ == null) {
          ensureKeysIsMutable();
          keys_.add(builderForValue.build());
          onChanged();
        } else {
          keysBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable keys = 1;</code>
       */
      public Builder addKeys(
          int index, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder builderForValue) {
        if (keysBuilder_ == null) {
          ensureKeysIsMutable();
          keys_.add(index, builderForValue.build());
          onChanged();
        } else {
          keysBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable keys = 1;</code>
       */
      public Builder addAllKeys(
          java.lang.Iterable<? extends com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable> values) {
        if (keysBuilder_ == null) {
          ensureKeysIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, keys_);
          onChanged();
        } else {
          keysBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable keys = 1;</code>
       */
      public Builder clearKeys() {
        if (keysBuilder_ == null) {
          keys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          keysBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable keys = 1;</code>
       */
      public Builder removeKeys(int index) {
        if (keysBuilder_ == null) {
          ensureKeysIsMutable();
          keys_.remove(index);
          onChanged();
        } else {
          keysBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable keys = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder getKeysBuilder(
          int index) {
        return getKeysFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable keys = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder getKeysOrBuilder(
          int index) {
        if (keysBuilder_ == null) {
          return keys_.get(index);  } else {
          return keysBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable keys = 1;</code>
       */
      public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> 
           getKeysOrBuilderList() {
        if (keysBuilder_ != null) {
          return keysBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(keys_);
        }
      }
      /**
       * <pre>
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable keys = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder addKeysBuilder() {
        return getKeysFieldBuilder().addBuilder(
            com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.getDefaultInstance());
      }
      /**
       * <pre>
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable keys = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder addKeysBuilder(
          int index) {
        return getKeysFieldBuilder().addBuilder(
            index, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.getDefaultInstance());
      }
      /**
       * <pre>
       * TODO(longbin) An expression here is a more general form
       * </pre>
       *
       * <code>repeated .common.Variable keys = 1;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder> 
           getKeysBuilderList() {
        return getKeysFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> 
          getKeysFieldBuilder() {
        if (keysBuilder_ == null) {
          keysBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder>(
                  keys_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          keys_ = null;
        }
        return keysBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.Dedup)
    }

    // @@protoc_insertion_point(class_scope:algebra.Dedup)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Dedup>
        PARSER = new com.google.protobuf.AbstractParser<Dedup>() {
      @java.lang.Override
      public Dedup parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Dedup> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Dedup> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UnfoldOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.Unfold)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The tag of a graph relation that **must** refer to a data of collection type
     * </pre>
     *
     * <code>.common.NameOrId tag = 1;</code>
     * @return Whether the tag field is set.
     */
    boolean hasTag();
    /**
     * <pre>
     * The tag of a graph relation that **must** refer to a data of collection type
     * </pre>
     *
     * <code>.common.NameOrId tag = 1;</code>
     * @return The tag.
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getTag();
    /**
     * <pre>
     * The tag of a graph relation that **must** refer to a data of collection type
     * </pre>
     *
     * <code>.common.NameOrId tag = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getTagOrBuilder();

    /**
     * <pre>
     * The alias tag for the elements that are unfolded from the collection
     * </pre>
     *
     * <code>.common.NameOrId alias = 2;</code>
     * @return Whether the alias field is set.
     */
    boolean hasAlias();
    /**
     * <pre>
     * The alias tag for the elements that are unfolded from the collection
     * </pre>
     *
     * <code>.common.NameOrId alias = 2;</code>
     * @return The alias.
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias();
    /**
     * <pre>
     * The alias tag for the elements that are unfolded from the collection
     * </pre>
     *
     * <code>.common.NameOrId alias = 2;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder();

    /**
     * <pre>
     * The type for the unfold value
     * </pre>
     *
     * <code>.algebra.MetaData meta_data = 3;</code>
     * @return Whether the metaData field is set.
     */
    boolean hasMetaData();
    /**
     * <pre>
     * The type for the unfold value
     * </pre>
     *
     * <code>.algebra.MetaData meta_data = 3;</code>
     * @return The metaData.
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData getMetaData();
    /**
     * <pre>
     * The type for the unfold value
     * </pre>
     *
     * <code>.algebra.MetaData meta_data = 3;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder getMetaDataOrBuilder();
  }
  /**
   * Protobuf type {@code algebra.Unfold}
   */
  public static final class Unfold extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.Unfold)
      UnfoldOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Unfold.newBuilder() to construct.
    private Unfold(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Unfold() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Unfold();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Unfold_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Unfold_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold.Builder.class);
    }

    public static final int TAG_FIELD_NUMBER = 1;
    private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId tag_;
    /**
     * <pre>
     * The tag of a graph relation that **must** refer to a data of collection type
     * </pre>
     *
     * <code>.common.NameOrId tag = 1;</code>
     * @return Whether the tag field is set.
     */
    @java.lang.Override
    public boolean hasTag() {
      return tag_ != null;
    }
    /**
     * <pre>
     * The tag of a graph relation that **must** refer to a data of collection type
     * </pre>
     *
     * <code>.common.NameOrId tag = 1;</code>
     * @return The tag.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getTag() {
      return tag_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : tag_;
    }
    /**
     * <pre>
     * The tag of a graph relation that **must** refer to a data of collection type
     * </pre>
     *
     * <code>.common.NameOrId tag = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getTagOrBuilder() {
      return tag_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : tag_;
    }

    public static final int ALIAS_FIELD_NUMBER = 2;
    private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId alias_;
    /**
     * <pre>
     * The alias tag for the elements that are unfolded from the collection
     * </pre>
     *
     * <code>.common.NameOrId alias = 2;</code>
     * @return Whether the alias field is set.
     */
    @java.lang.Override
    public boolean hasAlias() {
      return alias_ != null;
    }
    /**
     * <pre>
     * The alias tag for the elements that are unfolded from the collection
     * </pre>
     *
     * <code>.common.NameOrId alias = 2;</code>
     * @return The alias.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias() {
      return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
    }
    /**
     * <pre>
     * The alias tag for the elements that are unfolded from the collection
     * </pre>
     *
     * <code>.common.NameOrId alias = 2;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder() {
      return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
    }

    public static final int META_DATA_FIELD_NUMBER = 3;
    private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData metaData_;
    /**
     * <pre>
     * The type for the unfold value
     * </pre>
     *
     * <code>.algebra.MetaData meta_data = 3;</code>
     * @return Whether the metaData field is set.
     */
    @java.lang.Override
    public boolean hasMetaData() {
      return metaData_ != null;
    }
    /**
     * <pre>
     * The type for the unfold value
     * </pre>
     *
     * <code>.algebra.MetaData meta_data = 3;</code>
     * @return The metaData.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData getMetaData() {
      return metaData_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance() : metaData_;
    }
    /**
     * <pre>
     * The type for the unfold value
     * </pre>
     *
     * <code>.algebra.MetaData meta_data = 3;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder getMetaDataOrBuilder() {
      return metaData_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance() : metaData_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (tag_ != null) {
        output.writeMessage(1, getTag());
      }
      if (alias_ != null) {
        output.writeMessage(2, getAlias());
      }
      if (metaData_ != null) {
        output.writeMessage(3, getMetaData());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (tag_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTag());
      }
      if (alias_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAlias());
      }
      if (metaData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getMetaData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold) obj;

      if (hasTag() != other.hasTag()) return false;
      if (hasTag()) {
        if (!getTag()
            .equals(other.getTag())) return false;
      }
      if (hasAlias() != other.hasAlias()) return false;
      if (hasAlias()) {
        if (!getAlias()
            .equals(other.getAlias())) return false;
      }
      if (hasMetaData() != other.hasMetaData()) return false;
      if (hasMetaData()) {
        if (!getMetaData()
            .equals(other.getMetaData())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTag()) {
        hash = (37 * hash) + TAG_FIELD_NUMBER;
        hash = (53 * hash) + getTag().hashCode();
      }
      if (hasAlias()) {
        hash = (37 * hash) + ALIAS_FIELD_NUMBER;
        hash = (53 * hash) + getAlias().hashCode();
      }
      if (hasMetaData()) {
        hash = (37 * hash) + META_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetaData().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code algebra.Unfold}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.Unfold)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.UnfoldOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Unfold_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Unfold_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        tag_ = null;
        if (tagBuilder_ != null) {
          tagBuilder_.dispose();
          tagBuilder_ = null;
        }
        alias_ = null;
        if (aliasBuilder_ != null) {
          aliasBuilder_.dispose();
          aliasBuilder_ = null;
        }
        metaData_ = null;
        if (metaDataBuilder_ != null) {
          metaDataBuilder_.dispose();
          metaDataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Unfold_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.tag_ = tagBuilder_ == null
              ? tag_
              : tagBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.alias_ = aliasBuilder_ == null
              ? alias_
              : aliasBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.metaData_ = metaDataBuilder_ == null
              ? metaData_
              : metaDataBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold.getDefaultInstance()) return this;
        if (other.hasTag()) {
          mergeTag(other.getTag());
        }
        if (other.hasAlias()) {
          mergeAlias(other.getAlias());
        }
        if (other.hasMetaData()) {
          mergeMetaData(other.getMetaData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getTagFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getAliasFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getMetaDataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId tag_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> tagBuilder_;
      /**
       * <pre>
       * The tag of a graph relation that **must** refer to a data of collection type
       * </pre>
       *
       * <code>.common.NameOrId tag = 1;</code>
       * @return Whether the tag field is set.
       */
      public boolean hasTag() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The tag of a graph relation that **must** refer to a data of collection type
       * </pre>
       *
       * <code>.common.NameOrId tag = 1;</code>
       * @return The tag.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getTag() {
        if (tagBuilder_ == null) {
          return tag_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : tag_;
        } else {
          return tagBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The tag of a graph relation that **must** refer to a data of collection type
       * </pre>
       *
       * <code>.common.NameOrId tag = 1;</code>
       */
      public Builder setTag(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (tagBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tag_ = value;
        } else {
          tagBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The tag of a graph relation that **must** refer to a data of collection type
       * </pre>
       *
       * <code>.common.NameOrId tag = 1;</code>
       */
      public Builder setTag(
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
        if (tagBuilder_ == null) {
          tag_ = builderForValue.build();
        } else {
          tagBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The tag of a graph relation that **must** refer to a data of collection type
       * </pre>
       *
       * <code>.common.NameOrId tag = 1;</code>
       */
      public Builder mergeTag(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (tagBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            tag_ != null &&
            tag_ != com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance()) {
            getTagBuilder().mergeFrom(value);
          } else {
            tag_ = value;
          }
        } else {
          tagBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The tag of a graph relation that **must** refer to a data of collection type
       * </pre>
       *
       * <code>.common.NameOrId tag = 1;</code>
       */
      public Builder clearTag() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tag_ = null;
        if (tagBuilder_ != null) {
          tagBuilder_.dispose();
          tagBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The tag of a graph relation that **must** refer to a data of collection type
       * </pre>
       *
       * <code>.common.NameOrId tag = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder getTagBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTagFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The tag of a graph relation that **must** refer to a data of collection type
       * </pre>
       *
       * <code>.common.NameOrId tag = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getTagOrBuilder() {
        if (tagBuilder_ != null) {
          return tagBuilder_.getMessageOrBuilder();
        } else {
          return tag_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : tag_;
        }
      }
      /**
       * <pre>
       * The tag of a graph relation that **must** refer to a data of collection type
       * </pre>
       *
       * <code>.common.NameOrId tag = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
          getTagFieldBuilder() {
        if (tagBuilder_ == null) {
          tagBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder>(
                  getTag(),
                  getParentForChildren(),
                  isClean());
          tag_ = null;
        }
        return tagBuilder_;
      }

      private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId alias_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> aliasBuilder_;
      /**
       * <pre>
       * The alias tag for the elements that are unfolded from the collection
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       * @return Whether the alias field is set.
       */
      public boolean hasAlias() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The alias tag for the elements that are unfolded from the collection
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       * @return The alias.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias() {
        if (aliasBuilder_ == null) {
          return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
        } else {
          return aliasBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The alias tag for the elements that are unfolded from the collection
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       */
      public Builder setAlias(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (aliasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          alias_ = value;
        } else {
          aliasBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The alias tag for the elements that are unfolded from the collection
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       */
      public Builder setAlias(
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
        if (aliasBuilder_ == null) {
          alias_ = builderForValue.build();
        } else {
          aliasBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The alias tag for the elements that are unfolded from the collection
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       */
      public Builder mergeAlias(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (aliasBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            alias_ != null &&
            alias_ != com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance()) {
            getAliasBuilder().mergeFrom(value);
          } else {
            alias_ = value;
          }
        } else {
          aliasBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The alias tag for the elements that are unfolded from the collection
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       */
      public Builder clearAlias() {
        bitField0_ = (bitField0_ & ~0x00000002);
        alias_ = null;
        if (aliasBuilder_ != null) {
          aliasBuilder_.dispose();
          aliasBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The alias tag for the elements that are unfolded from the collection
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder getAliasBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getAliasFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The alias tag for the elements that are unfolded from the collection
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder() {
        if (aliasBuilder_ != null) {
          return aliasBuilder_.getMessageOrBuilder();
        } else {
          return alias_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
        }
      }
      /**
       * <pre>
       * The alias tag for the elements that are unfolded from the collection
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
          getAliasFieldBuilder() {
        if (aliasBuilder_ == null) {
          aliasBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder>(
                  getAlias(),
                  getParentForChildren(),
                  isClean());
          alias_ = null;
        }
        return aliasBuilder_;
      }

      private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData metaData_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder> metaDataBuilder_;
      /**
       * <pre>
       * The type for the unfold value
       * </pre>
       *
       * <code>.algebra.MetaData meta_data = 3;</code>
       * @return Whether the metaData field is set.
       */
      public boolean hasMetaData() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The type for the unfold value
       * </pre>
       *
       * <code>.algebra.MetaData meta_data = 3;</code>
       * @return The metaData.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData getMetaData() {
        if (metaDataBuilder_ == null) {
          return metaData_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance() : metaData_;
        } else {
          return metaDataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The type for the unfold value
       * </pre>
       *
       * <code>.algebra.MetaData meta_data = 3;</code>
       */
      public Builder setMetaData(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData value) {
        if (metaDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metaData_ = value;
        } else {
          metaDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type for the unfold value
       * </pre>
       *
       * <code>.algebra.MetaData meta_data = 3;</code>
       */
      public Builder setMetaData(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder builderForValue) {
        if (metaDataBuilder_ == null) {
          metaData_ = builderForValue.build();
        } else {
          metaDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type for the unfold value
       * </pre>
       *
       * <code>.algebra.MetaData meta_data = 3;</code>
       */
      public Builder mergeMetaData(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData value) {
        if (metaDataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            metaData_ != null &&
            metaData_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance()) {
            getMetaDataBuilder().mergeFrom(value);
          } else {
            metaData_ = value;
          }
        } else {
          metaDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type for the unfold value
       * </pre>
       *
       * <code>.algebra.MetaData meta_data = 3;</code>
       */
      public Builder clearMetaData() {
        bitField0_ = (bitField0_ & ~0x00000004);
        metaData_ = null;
        if (metaDataBuilder_ != null) {
          metaDataBuilder_.dispose();
          metaDataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type for the unfold value
       * </pre>
       *
       * <code>.algebra.MetaData meta_data = 3;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder getMetaDataBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getMetaDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The type for the unfold value
       * </pre>
       *
       * <code>.algebra.MetaData meta_data = 3;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder getMetaDataOrBuilder() {
        if (metaDataBuilder_ != null) {
          return metaDataBuilder_.getMessageOrBuilder();
        } else {
          return metaData_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance() : metaData_;
        }
      }
      /**
       * <pre>
       * The type for the unfold value
       * </pre>
       *
       * <code>.algebra.MetaData meta_data = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder> 
          getMetaDataFieldBuilder() {
        if (metaDataBuilder_ == null) {
          metaDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder>(
                  getMetaData(),
                  getParentForChildren(),
                  isClean());
          metaData_ = null;
        }
        return metaDataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.Unfold)
    }

    // @@protoc_insertion_point(class_scope:algebra.Unfold)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Unfold>
        PARSER = new com.google.protobuf.AbstractParser<Unfold>() {
      @java.lang.Override
      public Unfold parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Unfold> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Unfold> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RangeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.Range)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The lower bound of the range, included
     * </pre>
     *
     * <code>int32 lower = 1;</code>
     * @return The lower.
     */
    int getLower();

    /**
     * <pre>
     * The upper bound of the range, **excluded**
     * </pre>
     *
     * <code>int32 upper = 2;</code>
     * @return The upper.
     */
    int getUpper();
  }
  /**
   * Protobuf type {@code algebra.Range}
   */
  public static final class Range extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.Range)
      RangeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Range.newBuilder() to construct.
    private Range(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Range() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Range();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Range_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Range_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.Builder.class);
    }

    public static final int LOWER_FIELD_NUMBER = 1;
    private int lower_ = 0;
    /**
     * <pre>
     * The lower bound of the range, included
     * </pre>
     *
     * <code>int32 lower = 1;</code>
     * @return The lower.
     */
    @java.lang.Override
    public int getLower() {
      return lower_;
    }

    public static final int UPPER_FIELD_NUMBER = 2;
    private int upper_ = 0;
    /**
     * <pre>
     * The upper bound of the range, **excluded**
     * </pre>
     *
     * <code>int32 upper = 2;</code>
     * @return The upper.
     */
    @java.lang.Override
    public int getUpper() {
      return upper_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (lower_ != 0) {
        output.writeInt32(1, lower_);
      }
      if (upper_ != 0) {
        output.writeInt32(2, upper_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (lower_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, lower_);
      }
      if (upper_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, upper_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range) obj;

      if (getLower()
          != other.getLower()) return false;
      if (getUpper()
          != other.getUpper()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LOWER_FIELD_NUMBER;
      hash = (53 * hash) + getLower();
      hash = (37 * hash) + UPPER_FIELD_NUMBER;
      hash = (53 * hash) + getUpper();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code algebra.Range}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.Range)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Range_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Range_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        lower_ = 0;
        upper_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Range_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.lower_ = lower_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.upper_ = upper_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.getDefaultInstance()) return this;
        if (other.getLower() != 0) {
          setLower(other.getLower());
        }
        if (other.getUpper() != 0) {
          setUpper(other.getUpper());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                lower_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                upper_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int lower_ ;
      /**
       * <pre>
       * The lower bound of the range, included
       * </pre>
       *
       * <code>int32 lower = 1;</code>
       * @return The lower.
       */
      @java.lang.Override
      public int getLower() {
        return lower_;
      }
      /**
       * <pre>
       * The lower bound of the range, included
       * </pre>
       *
       * <code>int32 lower = 1;</code>
       * @param value The lower to set.
       * @return This builder for chaining.
       */
      public Builder setLower(int value) {

        lower_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The lower bound of the range, included
       * </pre>
       *
       * <code>int32 lower = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLower() {
        bitField0_ = (bitField0_ & ~0x00000001);
        lower_ = 0;
        onChanged();
        return this;
      }

      private int upper_ ;
      /**
       * <pre>
       * The upper bound of the range, **excluded**
       * </pre>
       *
       * <code>int32 upper = 2;</code>
       * @return The upper.
       */
      @java.lang.Override
      public int getUpper() {
        return upper_;
      }
      /**
       * <pre>
       * The upper bound of the range, **excluded**
       * </pre>
       *
       * <code>int32 upper = 2;</code>
       * @param value The upper to set.
       * @return This builder for chaining.
       */
      public Builder setUpper(int value) {

        upper_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The upper bound of the range, **excluded**
       * </pre>
       *
       * <code>int32 upper = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUpper() {
        bitField0_ = (bitField0_ & ~0x00000002);
        upper_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.Range)
    }

    // @@protoc_insertion_point(class_scope:algebra.Range)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Range>
        PARSER = new com.google.protobuf.AbstractParser<Range>() {
      @java.lang.Override
      public Range parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Range> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Range> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LimitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.Limit)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The limit range, e.g., limit(10) will be represented by Range {lower = 0, upper = 10}
     * </pre>
     *
     * <code>.algebra.Range range = 1;</code>
     * @return Whether the range field is set.
     */
    boolean hasRange();
    /**
     * <pre>
     * The limit range, e.g., limit(10) will be represented by Range {lower = 0, upper = 10}
     * </pre>
     *
     * <code>.algebra.Range range = 1;</code>
     * @return The range.
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range getRange();
    /**
     * <pre>
     * The limit range, e.g., limit(10) will be represented by Range {lower = 0, upper = 10}
     * </pre>
     *
     * <code>.algebra.Range range = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RangeOrBuilder getRangeOrBuilder();
  }
  /**
   * Protobuf type {@code algebra.Limit}
   */
  public static final class Limit extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.Limit)
      LimitOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Limit.newBuilder() to construct.
    private Limit(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Limit() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Limit();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Limit_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Limit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit.Builder.class);
    }

    public static final int RANGE_FIELD_NUMBER = 1;
    private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range range_;
    /**
     * <pre>
     * The limit range, e.g., limit(10) will be represented by Range {lower = 0, upper = 10}
     * </pre>
     *
     * <code>.algebra.Range range = 1;</code>
     * @return Whether the range field is set.
     */
    @java.lang.Override
    public boolean hasRange() {
      return range_ != null;
    }
    /**
     * <pre>
     * The limit range, e.g., limit(10) will be represented by Range {lower = 0, upper = 10}
     * </pre>
     *
     * <code>.algebra.Range range = 1;</code>
     * @return The range.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range getRange() {
      return range_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.getDefaultInstance() : range_;
    }
    /**
     * <pre>
     * The limit range, e.g., limit(10) will be represented by Range {lower = 0, upper = 10}
     * </pre>
     *
     * <code>.algebra.Range range = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RangeOrBuilder getRangeOrBuilder() {
      return range_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.getDefaultInstance() : range_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (range_ != null) {
        output.writeMessage(1, getRange());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (range_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getRange());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit) obj;

      if (hasRange() != other.hasRange()) return false;
      if (hasRange()) {
        if (!getRange()
            .equals(other.getRange())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRange()) {
        hash = (37 * hash) + RANGE_FIELD_NUMBER;
        hash = (53 * hash) + getRange().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code algebra.Limit}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.Limit)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LimitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Limit_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Limit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        range_ = null;
        if (rangeBuilder_ != null) {
          rangeBuilder_.dispose();
          rangeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Limit_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.range_ = rangeBuilder_ == null
              ? range_
              : rangeBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit.getDefaultInstance()) return this;
        if (other.hasRange()) {
          mergeRange(other.getRange());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getRangeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range range_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RangeOrBuilder> rangeBuilder_;
      /**
       * <pre>
       * The limit range, e.g., limit(10) will be represented by Range {lower = 0, upper = 10}
       * </pre>
       *
       * <code>.algebra.Range range = 1;</code>
       * @return Whether the range field is set.
       */
      public boolean hasRange() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The limit range, e.g., limit(10) will be represented by Range {lower = 0, upper = 10}
       * </pre>
       *
       * <code>.algebra.Range range = 1;</code>
       * @return The range.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range getRange() {
        if (rangeBuilder_ == null) {
          return range_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.getDefaultInstance() : range_;
        } else {
          return rangeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The limit range, e.g., limit(10) will be represented by Range {lower = 0, upper = 10}
       * </pre>
       *
       * <code>.algebra.Range range = 1;</code>
       */
      public Builder setRange(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range value) {
        if (rangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          range_ = value;
        } else {
          rangeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The limit range, e.g., limit(10) will be represented by Range {lower = 0, upper = 10}
       * </pre>
       *
       * <code>.algebra.Range range = 1;</code>
       */
      public Builder setRange(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.Builder builderForValue) {
        if (rangeBuilder_ == null) {
          range_ = builderForValue.build();
        } else {
          rangeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The limit range, e.g., limit(10) will be represented by Range {lower = 0, upper = 10}
       * </pre>
       *
       * <code>.algebra.Range range = 1;</code>
       */
      public Builder mergeRange(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range value) {
        if (rangeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            range_ != null &&
            range_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.getDefaultInstance()) {
            getRangeBuilder().mergeFrom(value);
          } else {
            range_ = value;
          }
        } else {
          rangeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The limit range, e.g., limit(10) will be represented by Range {lower = 0, upper = 10}
       * </pre>
       *
       * <code>.algebra.Range range = 1;</code>
       */
      public Builder clearRange() {
        bitField0_ = (bitField0_ & ~0x00000001);
        range_ = null;
        if (rangeBuilder_ != null) {
          rangeBuilder_.dispose();
          rangeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The limit range, e.g., limit(10) will be represented by Range {lower = 0, upper = 10}
       * </pre>
       *
       * <code>.algebra.Range range = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.Builder getRangeBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRangeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The limit range, e.g., limit(10) will be represented by Range {lower = 0, upper = 10}
       * </pre>
       *
       * <code>.algebra.Range range = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RangeOrBuilder getRangeOrBuilder() {
        if (rangeBuilder_ != null) {
          return rangeBuilder_.getMessageOrBuilder();
        } else {
          return range_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.getDefaultInstance() : range_;
        }
      }
      /**
       * <pre>
       * The limit range, e.g., limit(10) will be represented by Range {lower = 0, upper = 10}
       * </pre>
       *
       * <code>.algebra.Range range = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RangeOrBuilder> 
          getRangeFieldBuilder() {
        if (rangeBuilder_ == null) {
          rangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RangeOrBuilder>(
                  getRange(),
                  getParentForChildren(),
                  isClean());
          range_ = null;
        }
        return rangeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.Limit)
    }

    // @@protoc_insertion_point(class_scope:algebra.Limit)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Limit>
        PARSER = new com.google.protobuf.AbstractParser<Limit>() {
      @java.lang.Override
      public Limit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Limit> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Limit> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IndexPredicateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.IndexPredicate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
     * </pre>
     *
     * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
     */
    java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate> 
        getOrPredicatesList();
    /**
     * <pre>
     * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
     * </pre>
     *
     * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate getOrPredicates(int index);
    /**
     * <pre>
     * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
     * </pre>
     *
     * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
     */
    int getOrPredicatesCount();
    /**
     * <pre>
     * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
     * </pre>
     *
     * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
     */
    java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicateOrBuilder> 
        getOrPredicatesOrBuilderList();
    /**
     * <pre>
     * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
     * </pre>
     *
     * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicateOrBuilder getOrPredicatesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * To define a predicate of {{k1, cmp, v1} and {k2, cmp, v2}} or ...,
   * where the values referred by k1, k2, ... are indexed and hence the
   * predicate can be efficiently verified by leveraging the index.
   * </pre>
   *
   * Protobuf type {@code algebra.IndexPredicate}
   */
  public static final class IndexPredicate extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.IndexPredicate)
      IndexPredicateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IndexPredicate.newBuilder() to construct.
    private IndexPredicate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IndexPredicate() {
      orPredicates_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new IndexPredicate();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_IndexPredicate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_IndexPredicate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Builder.class);
    }

    public interface TripletOrBuilder extends
        // @@protoc_insertion_point(interface_extends:algebra.IndexPredicate.Triplet)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.common.Property key = 1;</code>
       * @return Whether the key field is set.
       */
      boolean hasKey();
      /**
       * <code>.common.Property key = 1;</code>
       * @return The key.
       */
      com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Property getKey();
      /**
       * <code>.common.Property key = 1;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.PropertyOrBuilder getKeyOrBuilder();

      /**
       * <code>.common.Value const = 2;</code>
       * @return Whether the const field is set.
       */
      boolean hasConst();
      /**
       * <code>.common.Value const = 2;</code>
       * @return The const.
       */
      com.alibaba.graphscope.ldbc.workload.proto.Common.Value getConst();
      /**
       * <code>.common.Value const = 2;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.Common.ValueOrBuilder getConstOrBuilder();

      /**
       * <code>.common.DynamicParam param = 3;</code>
       * @return Whether the param field is set.
       */
      boolean hasParam();
      /**
       * <code>.common.DynamicParam param = 3;</code>
       * @return The param.
       */
      com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam getParam();
      /**
       * <code>.common.DynamicParam param = 3;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParamOrBuilder getParamOrBuilder();

      /**
       * <pre>
       * TODO(longbin) More comparators (gt, ge, lt, le, ne) other than equivalence (eq) may be required
       * </pre>
       *
       * <code>.common.None cmp = 4;</code>
       * @return Whether the cmp field is set.
       */
      boolean hasCmp();
      /**
       * <pre>
       * TODO(longbin) More comparators (gt, ge, lt, le, ne) other than equivalence (eq) may be required
       * </pre>
       *
       * <code>.common.None cmp = 4;</code>
       * @return The cmp.
       */
      com.alibaba.graphscope.ldbc.workload.proto.Common.None getCmp();
      /**
       * <pre>
       * TODO(longbin) More comparators (gt, ge, lt, le, ne) other than equivalence (eq) may be required
       * </pre>
       *
       * <code>.common.None cmp = 4;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.Common.NoneOrBuilder getCmpOrBuilder();

      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet.ValueCase getValueCase();
    }
    /**
     * <pre>
     * A triplet defines that a key must be **equal** to a given value.
     * The value can be a constant value, or a dynamic parameter.
     * </pre>
     *
     * Protobuf type {@code algebra.IndexPredicate.Triplet}
     */
    public static final class Triplet extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:algebra.IndexPredicate.Triplet)
        TripletOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Triplet.newBuilder() to construct.
      private Triplet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Triplet() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Triplet();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_IndexPredicate_Triplet_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_IndexPredicate_Triplet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet.Builder.class);
      }

      private int valueCase_ = 0;
      @SuppressWarnings("serial")
      private java.lang.Object value_;
      public enum ValueCase
          implements com.google.protobuf.Internal.EnumLite,
              com.google.protobuf.AbstractMessage.InternalOneOfEnum {
        CONST(2),
        PARAM(3),
        VALUE_NOT_SET(0);
        private final int value;
        private ValueCase(int value) {
          this.value = value;
        }
        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static ValueCase valueOf(int value) {
          return forNumber(value);
        }

        public static ValueCase forNumber(int value) {
          switch (value) {
            case 2: return CONST;
            case 3: return PARAM;
            case 0: return VALUE_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public ValueCase
      getValueCase() {
        return ValueCase.forNumber(
            valueCase_);
      }

      public static final int KEY_FIELD_NUMBER = 1;
      private com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Property key_;
      /**
       * <code>.common.Property key = 1;</code>
       * @return Whether the key field is set.
       */
      @java.lang.Override
      public boolean hasKey() {
        return key_ != null;
      }
      /**
       * <code>.common.Property key = 1;</code>
       * @return The key.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Property getKey() {
        return key_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Property.getDefaultInstance() : key_;
      }
      /**
       * <code>.common.Property key = 1;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.PropertyOrBuilder getKeyOrBuilder() {
        return key_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Property.getDefaultInstance() : key_;
      }

      public static final int CONST_FIELD_NUMBER = 2;
      /**
       * <code>.common.Value const = 2;</code>
       * @return Whether the const field is set.
       */
      @java.lang.Override
      public boolean hasConst() {
        return valueCase_ == 2;
      }
      /**
       * <code>.common.Value const = 2;</code>
       * @return The const.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.Common.Value getConst() {
        if (valueCase_ == 2) {
           return (com.alibaba.graphscope.ldbc.workload.proto.Common.Value) value_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.Common.Value.getDefaultInstance();
      }
      /**
       * <code>.common.Value const = 2;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.Common.ValueOrBuilder getConstOrBuilder() {
        if (valueCase_ == 2) {
           return (com.alibaba.graphscope.ldbc.workload.proto.Common.Value) value_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.Common.Value.getDefaultInstance();
      }

      public static final int PARAM_FIELD_NUMBER = 3;
      /**
       * <code>.common.DynamicParam param = 3;</code>
       * @return Whether the param field is set.
       */
      @java.lang.Override
      public boolean hasParam() {
        return valueCase_ == 3;
      }
      /**
       * <code>.common.DynamicParam param = 3;</code>
       * @return The param.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam getParam() {
        if (valueCase_ == 3) {
           return (com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam) value_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam.getDefaultInstance();
      }
      /**
       * <code>.common.DynamicParam param = 3;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParamOrBuilder getParamOrBuilder() {
        if (valueCase_ == 3) {
           return (com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam) value_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam.getDefaultInstance();
      }

      public static final int CMP_FIELD_NUMBER = 4;
      private com.alibaba.graphscope.ldbc.workload.proto.Common.None cmp_;
      /**
       * <pre>
       * TODO(longbin) More comparators (gt, ge, lt, le, ne) other than equivalence (eq) may be required
       * </pre>
       *
       * <code>.common.None cmp = 4;</code>
       * @return Whether the cmp field is set.
       */
      @java.lang.Override
      public boolean hasCmp() {
        return cmp_ != null;
      }
      /**
       * <pre>
       * TODO(longbin) More comparators (gt, ge, lt, le, ne) other than equivalence (eq) may be required
       * </pre>
       *
       * <code>.common.None cmp = 4;</code>
       * @return The cmp.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.Common.None getCmp() {
        return cmp_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.None.getDefaultInstance() : cmp_;
      }
      /**
       * <pre>
       * TODO(longbin) More comparators (gt, ge, lt, le, ne) other than equivalence (eq) may be required
       * </pre>
       *
       * <code>.common.None cmp = 4;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NoneOrBuilder getCmpOrBuilder() {
        return cmp_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.None.getDefaultInstance() : cmp_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (key_ != null) {
          output.writeMessage(1, getKey());
        }
        if (valueCase_ == 2) {
          output.writeMessage(2, (com.alibaba.graphscope.ldbc.workload.proto.Common.Value) value_);
        }
        if (valueCase_ == 3) {
          output.writeMessage(3, (com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam) value_);
        }
        if (cmp_ != null) {
          output.writeMessage(4, getCmp());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (key_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getKey());
        }
        if (valueCase_ == 2) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, (com.alibaba.graphscope.ldbc.workload.proto.Common.Value) value_);
        }
        if (valueCase_ == 3) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, (com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam) value_);
        }
        if (cmp_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getCmp());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet)) {
          return super.equals(obj);
        }
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet) obj;

        if (hasKey() != other.hasKey()) return false;
        if (hasKey()) {
          if (!getKey()
              .equals(other.getKey())) return false;
        }
        if (hasCmp() != other.hasCmp()) return false;
        if (hasCmp()) {
          if (!getCmp()
              .equals(other.getCmp())) return false;
        }
        if (!getValueCase().equals(other.getValueCase())) return false;
        switch (valueCase_) {
          case 2:
            if (!getConst()
                .equals(other.getConst())) return false;
            break;
          case 3:
            if (!getParam()
                .equals(other.getParam())) return false;
            break;
          case 0:
          default:
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasKey()) {
          hash = (37 * hash) + KEY_FIELD_NUMBER;
          hash = (53 * hash) + getKey().hashCode();
        }
        if (hasCmp()) {
          hash = (37 * hash) + CMP_FIELD_NUMBER;
          hash = (53 * hash) + getCmp().hashCode();
        }
        switch (valueCase_) {
          case 2:
            hash = (37 * hash) + CONST_FIELD_NUMBER;
            hash = (53 * hash) + getConst().hashCode();
            break;
          case 3:
            hash = (37 * hash) + PARAM_FIELD_NUMBER;
            hash = (53 * hash) + getParam().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * A triplet defines that a key must be **equal** to a given value.
       * The value can be a constant value, or a dynamic parameter.
       * </pre>
       *
       * Protobuf type {@code algebra.IndexPredicate.Triplet}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:algebra.IndexPredicate.Triplet)
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.TripletOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_IndexPredicate_Triplet_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_IndexPredicate_Triplet_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet.Builder.class);
        }

        // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          key_ = null;
          if (keyBuilder_ != null) {
            keyBuilder_.dispose();
            keyBuilder_ = null;
          }
          if (constBuilder_ != null) {
            constBuilder_.clear();
          }
          if (paramBuilder_ != null) {
            paramBuilder_.clear();
          }
          cmp_ = null;
          if (cmpBuilder_ != null) {
            cmpBuilder_.dispose();
            cmpBuilder_ = null;
          }
          valueCase_ = 0;
          value_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_IndexPredicate_Triplet_descriptor;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet getDefaultInstanceForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet.getDefaultInstance();
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet build() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet buildPartial() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          buildPartialOneofs(result);
          onBuilt();
          return result;
        }

        private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.key_ = keyBuilder_ == null
                ? key_
                : keyBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.cmp_ = cmpBuilder_ == null
                ? cmp_
                : cmpBuilder_.build();
          }
        }

        private void buildPartialOneofs(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet result) {
          result.valueCase_ = valueCase_;
          result.value_ = this.value_;
          if (valueCase_ == 2 &&
              constBuilder_ != null) {
            result.value_ = constBuilder_.build();
          }
          if (valueCase_ == 3 &&
              paramBuilder_ != null) {
            result.value_ = paramBuilder_.build();
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet) {
            return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet other) {
          if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet.getDefaultInstance()) return this;
          if (other.hasKey()) {
            mergeKey(other.getKey());
          }
          if (other.hasCmp()) {
            mergeCmp(other.getCmp());
          }
          switch (other.getValueCase()) {
            case CONST: {
              mergeConst(other.getConst());
              break;
            }
            case PARAM: {
              mergeParam(other.getParam());
              break;
            }
            case VALUE_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getKeyFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 18: {
                  input.readMessage(
                      getConstFieldBuilder().getBuilder(),
                      extensionRegistry);
                  valueCase_ = 2;
                  break;
                } // case 18
                case 26: {
                  input.readMessage(
                      getParamFieldBuilder().getBuilder(),
                      extensionRegistry);
                  valueCase_ = 3;
                  break;
                } // case 26
                case 34: {
                  input.readMessage(
                      getCmpFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000008;
                  break;
                } // case 34
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int valueCase_ = 0;
        private java.lang.Object value_;
        public ValueCase
            getValueCase() {
          return ValueCase.forNumber(
              valueCase_);
        }

        public Builder clearValue() {
          valueCase_ = 0;
          value_ = null;
          onChanged();
          return this;
        }

        private int bitField0_;

        private com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Property key_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Property, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Property.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.PropertyOrBuilder> keyBuilder_;
        /**
         * <code>.common.Property key = 1;</code>
         * @return Whether the key field is set.
         */
        public boolean hasKey() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>.common.Property key = 1;</code>
         * @return The key.
         */
        public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Property getKey() {
          if (keyBuilder_ == null) {
            return key_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Property.getDefaultInstance() : key_;
          } else {
            return keyBuilder_.getMessage();
          }
        }
        /**
         * <code>.common.Property key = 1;</code>
         */
        public Builder setKey(com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Property value) {
          if (keyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            key_ = value;
          } else {
            keyBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>.common.Property key = 1;</code>
         */
        public Builder setKey(
            com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Property.Builder builderForValue) {
          if (keyBuilder_ == null) {
            key_ = builderForValue.build();
          } else {
            keyBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>.common.Property key = 1;</code>
         */
        public Builder mergeKey(com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Property value) {
          if (keyBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0) &&
              key_ != null &&
              key_ != com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Property.getDefaultInstance()) {
              getKeyBuilder().mergeFrom(value);
            } else {
              key_ = value;
            }
          } else {
            keyBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>.common.Property key = 1;</code>
         */
        public Builder clearKey() {
          bitField0_ = (bitField0_ & ~0x00000001);
          key_ = null;
          if (keyBuilder_ != null) {
            keyBuilder_.dispose();
            keyBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <code>.common.Property key = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Property.Builder getKeyBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getKeyFieldBuilder().getBuilder();
        }
        /**
         * <code>.common.Property key = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.PropertyOrBuilder getKeyOrBuilder() {
          if (keyBuilder_ != null) {
            return keyBuilder_.getMessageOrBuilder();
          } else {
            return key_ == null ?
                com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Property.getDefaultInstance() : key_;
          }
        }
        /**
         * <code>.common.Property key = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Property, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Property.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.PropertyOrBuilder> 
            getKeyFieldBuilder() {
          if (keyBuilder_ == null) {
            keyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Property, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Property.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.PropertyOrBuilder>(
                    getKey(),
                    getParentForChildren(),
                    isClean());
            key_ = null;
          }
          return keyBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.Common.Value, com.alibaba.graphscope.ldbc.workload.proto.Common.Value.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.ValueOrBuilder> constBuilder_;
        /**
         * <code>.common.Value const = 2;</code>
         * @return Whether the const field is set.
         */
        @java.lang.Override
        public boolean hasConst() {
          return valueCase_ == 2;
        }
        /**
         * <code>.common.Value const = 2;</code>
         * @return The const.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.Common.Value getConst() {
          if (constBuilder_ == null) {
            if (valueCase_ == 2) {
              return (com.alibaba.graphscope.ldbc.workload.proto.Common.Value) value_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.Common.Value.getDefaultInstance();
          } else {
            if (valueCase_ == 2) {
              return constBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.Common.Value.getDefaultInstance();
          }
        }
        /**
         * <code>.common.Value const = 2;</code>
         */
        public Builder setConst(com.alibaba.graphscope.ldbc.workload.proto.Common.Value value) {
          if (constBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value_ = value;
            onChanged();
          } else {
            constBuilder_.setMessage(value);
          }
          valueCase_ = 2;
          return this;
        }
        /**
         * <code>.common.Value const = 2;</code>
         */
        public Builder setConst(
            com.alibaba.graphscope.ldbc.workload.proto.Common.Value.Builder builderForValue) {
          if (constBuilder_ == null) {
            value_ = builderForValue.build();
            onChanged();
          } else {
            constBuilder_.setMessage(builderForValue.build());
          }
          valueCase_ = 2;
          return this;
        }
        /**
         * <code>.common.Value const = 2;</code>
         */
        public Builder mergeConst(com.alibaba.graphscope.ldbc.workload.proto.Common.Value value) {
          if (constBuilder_ == null) {
            if (valueCase_ == 2 &&
                value_ != com.alibaba.graphscope.ldbc.workload.proto.Common.Value.getDefaultInstance()) {
              value_ = com.alibaba.graphscope.ldbc.workload.proto.Common.Value.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.Common.Value) value_)
                  .mergeFrom(value).buildPartial();
            } else {
              value_ = value;
            }
            onChanged();
          } else {
            if (valueCase_ == 2) {
              constBuilder_.mergeFrom(value);
            } else {
              constBuilder_.setMessage(value);
            }
          }
          valueCase_ = 2;
          return this;
        }
        /**
         * <code>.common.Value const = 2;</code>
         */
        public Builder clearConst() {
          if (constBuilder_ == null) {
            if (valueCase_ == 2) {
              valueCase_ = 0;
              value_ = null;
              onChanged();
            }
          } else {
            if (valueCase_ == 2) {
              valueCase_ = 0;
              value_ = null;
            }
            constBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.common.Value const = 2;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.Common.Value.Builder getConstBuilder() {
          return getConstFieldBuilder().getBuilder();
        }
        /**
         * <code>.common.Value const = 2;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.Common.ValueOrBuilder getConstOrBuilder() {
          if ((valueCase_ == 2) && (constBuilder_ != null)) {
            return constBuilder_.getMessageOrBuilder();
          } else {
            if (valueCase_ == 2) {
              return (com.alibaba.graphscope.ldbc.workload.proto.Common.Value) value_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.Common.Value.getDefaultInstance();
          }
        }
        /**
         * <code>.common.Value const = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.Common.Value, com.alibaba.graphscope.ldbc.workload.proto.Common.Value.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.ValueOrBuilder> 
            getConstFieldBuilder() {
          if (constBuilder_ == null) {
            if (!(valueCase_ == 2)) {
              value_ = com.alibaba.graphscope.ldbc.workload.proto.Common.Value.getDefaultInstance();
            }
            constBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.Common.Value, com.alibaba.graphscope.ldbc.workload.proto.Common.Value.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.ValueOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.Common.Value) value_,
                    getParentForChildren(),
                    isClean());
            value_ = null;
          }
          valueCase_ = 2;
          onChanged();
          return constBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParamOrBuilder> paramBuilder_;
        /**
         * <code>.common.DynamicParam param = 3;</code>
         * @return Whether the param field is set.
         */
        @java.lang.Override
        public boolean hasParam() {
          return valueCase_ == 3;
        }
        /**
         * <code>.common.DynamicParam param = 3;</code>
         * @return The param.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam getParam() {
          if (paramBuilder_ == null) {
            if (valueCase_ == 3) {
              return (com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam) value_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam.getDefaultInstance();
          } else {
            if (valueCase_ == 3) {
              return paramBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam.getDefaultInstance();
          }
        }
        /**
         * <code>.common.DynamicParam param = 3;</code>
         */
        public Builder setParam(com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam value) {
          if (paramBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value_ = value;
            onChanged();
          } else {
            paramBuilder_.setMessage(value);
          }
          valueCase_ = 3;
          return this;
        }
        /**
         * <code>.common.DynamicParam param = 3;</code>
         */
        public Builder setParam(
            com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam.Builder builderForValue) {
          if (paramBuilder_ == null) {
            value_ = builderForValue.build();
            onChanged();
          } else {
            paramBuilder_.setMessage(builderForValue.build());
          }
          valueCase_ = 3;
          return this;
        }
        /**
         * <code>.common.DynamicParam param = 3;</code>
         */
        public Builder mergeParam(com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam value) {
          if (paramBuilder_ == null) {
            if (valueCase_ == 3 &&
                value_ != com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam.getDefaultInstance()) {
              value_ = com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam) value_)
                  .mergeFrom(value).buildPartial();
            } else {
              value_ = value;
            }
            onChanged();
          } else {
            if (valueCase_ == 3) {
              paramBuilder_.mergeFrom(value);
            } else {
              paramBuilder_.setMessage(value);
            }
          }
          valueCase_ = 3;
          return this;
        }
        /**
         * <code>.common.DynamicParam param = 3;</code>
         */
        public Builder clearParam() {
          if (paramBuilder_ == null) {
            if (valueCase_ == 3) {
              valueCase_ = 0;
              value_ = null;
              onChanged();
            }
          } else {
            if (valueCase_ == 3) {
              valueCase_ = 0;
              value_ = null;
            }
            paramBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.common.DynamicParam param = 3;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam.Builder getParamBuilder() {
          return getParamFieldBuilder().getBuilder();
        }
        /**
         * <code>.common.DynamicParam param = 3;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParamOrBuilder getParamOrBuilder() {
          if ((valueCase_ == 3) && (paramBuilder_ != null)) {
            return paramBuilder_.getMessageOrBuilder();
          } else {
            if (valueCase_ == 3) {
              return (com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam) value_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam.getDefaultInstance();
          }
        }
        /**
         * <code>.common.DynamicParam param = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParamOrBuilder> 
            getParamFieldBuilder() {
          if (paramBuilder_ == null) {
            if (!(valueCase_ == 3)) {
              value_ = com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam.getDefaultInstance();
            }
            paramBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParamOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.DynamicParam) value_,
                    getParentForChildren(),
                    isClean());
            value_ = null;
          }
          valueCase_ = 3;
          onChanged();
          return paramBuilder_;
        }

        private com.alibaba.graphscope.ldbc.workload.proto.Common.None cmp_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.Common.None, com.alibaba.graphscope.ldbc.workload.proto.Common.None.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NoneOrBuilder> cmpBuilder_;
        /**
         * <pre>
         * TODO(longbin) More comparators (gt, ge, lt, le, ne) other than equivalence (eq) may be required
         * </pre>
         *
         * <code>.common.None cmp = 4;</code>
         * @return Whether the cmp field is set.
         */
        public boolean hasCmp() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * TODO(longbin) More comparators (gt, ge, lt, le, ne) other than equivalence (eq) may be required
         * </pre>
         *
         * <code>.common.None cmp = 4;</code>
         * @return The cmp.
         */
        public com.alibaba.graphscope.ldbc.workload.proto.Common.None getCmp() {
          if (cmpBuilder_ == null) {
            return cmp_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.None.getDefaultInstance() : cmp_;
          } else {
            return cmpBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * TODO(longbin) More comparators (gt, ge, lt, le, ne) other than equivalence (eq) may be required
         * </pre>
         *
         * <code>.common.None cmp = 4;</code>
         */
        public Builder setCmp(com.alibaba.graphscope.ldbc.workload.proto.Common.None value) {
          if (cmpBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            cmp_ = value;
          } else {
            cmpBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * TODO(longbin) More comparators (gt, ge, lt, le, ne) other than equivalence (eq) may be required
         * </pre>
         *
         * <code>.common.None cmp = 4;</code>
         */
        public Builder setCmp(
            com.alibaba.graphscope.ldbc.workload.proto.Common.None.Builder builderForValue) {
          if (cmpBuilder_ == null) {
            cmp_ = builderForValue.build();
          } else {
            cmpBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * TODO(longbin) More comparators (gt, ge, lt, le, ne) other than equivalence (eq) may be required
         * </pre>
         *
         * <code>.common.None cmp = 4;</code>
         */
        public Builder mergeCmp(com.alibaba.graphscope.ldbc.workload.proto.Common.None value) {
          if (cmpBuilder_ == null) {
            if (((bitField0_ & 0x00000008) != 0) &&
              cmp_ != null &&
              cmp_ != com.alibaba.graphscope.ldbc.workload.proto.Common.None.getDefaultInstance()) {
              getCmpBuilder().mergeFrom(value);
            } else {
              cmp_ = value;
            }
          } else {
            cmpBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * TODO(longbin) More comparators (gt, ge, lt, le, ne) other than equivalence (eq) may be required
         * </pre>
         *
         * <code>.common.None cmp = 4;</code>
         */
        public Builder clearCmp() {
          bitField0_ = (bitField0_ & ~0x00000008);
          cmp_ = null;
          if (cmpBuilder_ != null) {
            cmpBuilder_.dispose();
            cmpBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * TODO(longbin) More comparators (gt, ge, lt, le, ne) other than equivalence (eq) may be required
         * </pre>
         *
         * <code>.common.None cmp = 4;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.Common.None.Builder getCmpBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getCmpFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * TODO(longbin) More comparators (gt, ge, lt, le, ne) other than equivalence (eq) may be required
         * </pre>
         *
         * <code>.common.None cmp = 4;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.Common.NoneOrBuilder getCmpOrBuilder() {
          if (cmpBuilder_ != null) {
            return cmpBuilder_.getMessageOrBuilder();
          } else {
            return cmp_ == null ?
                com.alibaba.graphscope.ldbc.workload.proto.Common.None.getDefaultInstance() : cmp_;
          }
        }
        /**
         * <pre>
         * TODO(longbin) More comparators (gt, ge, lt, le, ne) other than equivalence (eq) may be required
         * </pre>
         *
         * <code>.common.None cmp = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.Common.None, com.alibaba.graphscope.ldbc.workload.proto.Common.None.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NoneOrBuilder> 
            getCmpFieldBuilder() {
          if (cmpBuilder_ == null) {
            cmpBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.Common.None, com.alibaba.graphscope.ldbc.workload.proto.Common.None.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NoneOrBuilder>(
                    getCmp(),
                    getParentForChildren(),
                    isClean());
            cmp_ = null;
          }
          return cmpBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:algebra.IndexPredicate.Triplet)
      }

      // @@protoc_insertion_point(class_scope:algebra.IndexPredicate.Triplet)
      private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet();
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Triplet>
          PARSER = new com.google.protobuf.AbstractParser<Triplet>() {
        @java.lang.Override
        public Triplet parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Triplet> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Triplet> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface AndPredicateOrBuilder extends
        // @@protoc_insertion_point(interface_extends:algebra.IndexPredicate.AndPredicate)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
       */
      java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet> 
          getPredicatesList();
      /**
       * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet getPredicates(int index);
      /**
       * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
       */
      int getPredicatesCount();
      /**
       * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
       */
      java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.TripletOrBuilder> 
          getPredicatesOrBuilderList();
      /**
       * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.TripletOrBuilder getPredicatesOrBuilder(
          int index);
    }
    /**
     * <pre>
     * A collection of `Triplet` that forms a logical **AND** of all `Predicate`s.
     * </pre>
     *
     * Protobuf type {@code algebra.IndexPredicate.AndPredicate}
     */
    public static final class AndPredicate extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:algebra.IndexPredicate.AndPredicate)
        AndPredicateOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use AndPredicate.newBuilder() to construct.
      private AndPredicate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private AndPredicate() {
        predicates_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new AndPredicate();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_IndexPredicate_AndPredicate_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_IndexPredicate_AndPredicate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate.Builder.class);
      }

      public static final int PREDICATES_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet> predicates_;
      /**
       * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
       */
      @java.lang.Override
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet> getPredicatesList() {
        return predicates_;
      }
      /**
       * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
       */
      @java.lang.Override
      public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.TripletOrBuilder> 
          getPredicatesOrBuilderList() {
        return predicates_;
      }
      /**
       * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
       */
      @java.lang.Override
      public int getPredicatesCount() {
        return predicates_.size();
      }
      /**
       * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet getPredicates(int index) {
        return predicates_.get(index);
      }
      /**
       * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.TripletOrBuilder getPredicatesOrBuilder(
          int index) {
        return predicates_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < predicates_.size(); i++) {
          output.writeMessage(1, predicates_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < predicates_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, predicates_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate)) {
          return super.equals(obj);
        }
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate) obj;

        if (!getPredicatesList()
            .equals(other.getPredicatesList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getPredicatesCount() > 0) {
          hash = (37 * hash) + PREDICATES_FIELD_NUMBER;
          hash = (53 * hash) + getPredicatesList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * A collection of `Triplet` that forms a logical **AND** of all `Predicate`s.
       * </pre>
       *
       * Protobuf type {@code algebra.IndexPredicate.AndPredicate}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:algebra.IndexPredicate.AndPredicate)
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicateOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_IndexPredicate_AndPredicate_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_IndexPredicate_AndPredicate_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate.Builder.class);
        }

        // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          if (predicatesBuilder_ == null) {
            predicates_ = java.util.Collections.emptyList();
          } else {
            predicates_ = null;
            predicatesBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_IndexPredicate_AndPredicate_descriptor;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate getDefaultInstanceForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate.getDefaultInstance();
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate build() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate buildPartial() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate result) {
          if (predicatesBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              predicates_ = java.util.Collections.unmodifiableList(predicates_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.predicates_ = predicates_;
          } else {
            result.predicates_ = predicatesBuilder_.build();
          }
        }

        private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate result) {
          int from_bitField0_ = bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate) {
            return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate other) {
          if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate.getDefaultInstance()) return this;
          if (predicatesBuilder_ == null) {
            if (!other.predicates_.isEmpty()) {
              if (predicates_.isEmpty()) {
                predicates_ = other.predicates_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensurePredicatesIsMutable();
                predicates_.addAll(other.predicates_);
              }
              onChanged();
            }
          } else {
            if (!other.predicates_.isEmpty()) {
              if (predicatesBuilder_.isEmpty()) {
                predicatesBuilder_.dispose();
                predicatesBuilder_ = null;
                predicates_ = other.predicates_;
                bitField0_ = (bitField0_ & ~0x00000001);
                predicatesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getPredicatesFieldBuilder() : null;
              } else {
                predicatesBuilder_.addAllMessages(other.predicates_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet m =
                      input.readMessage(
                          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet.parser(),
                          extensionRegistry);
                  if (predicatesBuilder_ == null) {
                    ensurePredicatesIsMutable();
                    predicates_.add(m);
                  } else {
                    predicatesBuilder_.addMessage(m);
                  }
                  break;
                } // case 10
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet> predicates_ =
          java.util.Collections.emptyList();
        private void ensurePredicatesIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            predicates_ = new java.util.ArrayList<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet>(predicates_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.TripletOrBuilder> predicatesBuilder_;

        /**
         * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
         */
        public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet> getPredicatesList() {
          if (predicatesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(predicates_);
          } else {
            return predicatesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
         */
        public int getPredicatesCount() {
          if (predicatesBuilder_ == null) {
            return predicates_.size();
          } else {
            return predicatesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet getPredicates(int index) {
          if (predicatesBuilder_ == null) {
            return predicates_.get(index);
          } else {
            return predicatesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
         */
        public Builder setPredicates(
            int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet value) {
          if (predicatesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePredicatesIsMutable();
            predicates_.set(index, value);
            onChanged();
          } else {
            predicatesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
         */
        public Builder setPredicates(
            int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet.Builder builderForValue) {
          if (predicatesBuilder_ == null) {
            ensurePredicatesIsMutable();
            predicates_.set(index, builderForValue.build());
            onChanged();
          } else {
            predicatesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
         */
        public Builder addPredicates(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet value) {
          if (predicatesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePredicatesIsMutable();
            predicates_.add(value);
            onChanged();
          } else {
            predicatesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
         */
        public Builder addPredicates(
            int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet value) {
          if (predicatesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePredicatesIsMutable();
            predicates_.add(index, value);
            onChanged();
          } else {
            predicatesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
         */
        public Builder addPredicates(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet.Builder builderForValue) {
          if (predicatesBuilder_ == null) {
            ensurePredicatesIsMutable();
            predicates_.add(builderForValue.build());
            onChanged();
          } else {
            predicatesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
         */
        public Builder addPredicates(
            int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet.Builder builderForValue) {
          if (predicatesBuilder_ == null) {
            ensurePredicatesIsMutable();
            predicates_.add(index, builderForValue.build());
            onChanged();
          } else {
            predicatesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
         */
        public Builder addAllPredicates(
            java.lang.Iterable<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet> values) {
          if (predicatesBuilder_ == null) {
            ensurePredicatesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, predicates_);
            onChanged();
          } else {
            predicatesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
         */
        public Builder clearPredicates() {
          if (predicatesBuilder_ == null) {
            predicates_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            predicatesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
         */
        public Builder removePredicates(int index) {
          if (predicatesBuilder_ == null) {
            ensurePredicatesIsMutable();
            predicates_.remove(index);
            onChanged();
          } else {
            predicatesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet.Builder getPredicatesBuilder(
            int index) {
          return getPredicatesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.TripletOrBuilder getPredicatesOrBuilder(
            int index) {
          if (predicatesBuilder_ == null) {
            return predicates_.get(index);  } else {
            return predicatesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
         */
        public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.TripletOrBuilder> 
             getPredicatesOrBuilderList() {
          if (predicatesBuilder_ != null) {
            return predicatesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(predicates_);
          }
        }
        /**
         * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet.Builder addPredicatesBuilder() {
          return getPredicatesFieldBuilder().addBuilder(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet.getDefaultInstance());
        }
        /**
         * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet.Builder addPredicatesBuilder(
            int index) {
          return getPredicatesFieldBuilder().addBuilder(
              index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet.getDefaultInstance());
        }
        /**
         * <code>repeated .algebra.IndexPredicate.Triplet predicates = 1;</code>
         */
        public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet.Builder> 
             getPredicatesBuilderList() {
          return getPredicatesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.TripletOrBuilder> 
            getPredicatesFieldBuilder() {
          if (predicatesBuilder_ == null) {
            predicatesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Triplet.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.TripletOrBuilder>(
                    predicates_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            predicates_ = null;
          }
          return predicatesBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:algebra.IndexPredicate.AndPredicate)
      }

      // @@protoc_insertion_point(class_scope:algebra.IndexPredicate.AndPredicate)
      private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate();
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<AndPredicate>
          PARSER = new com.google.protobuf.AbstractParser<AndPredicate>() {
        @java.lang.Override
        public AndPredicate parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<AndPredicate> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AndPredicate> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int OR_PREDICATES_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate> orPredicates_;
    /**
     * <pre>
     * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
     * </pre>
     *
     * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate> getOrPredicatesList() {
      return orPredicates_;
    }
    /**
     * <pre>
     * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
     * </pre>
     *
     * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicateOrBuilder> 
        getOrPredicatesOrBuilderList() {
      return orPredicates_;
    }
    /**
     * <pre>
     * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
     * </pre>
     *
     * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
     */
    @java.lang.Override
    public int getOrPredicatesCount() {
      return orPredicates_.size();
    }
    /**
     * <pre>
     * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
     * </pre>
     *
     * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate getOrPredicates(int index) {
      return orPredicates_.get(index);
    }
    /**
     * <pre>
     * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
     * </pre>
     *
     * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicateOrBuilder getOrPredicatesOrBuilder(
        int index) {
      return orPredicates_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < orPredicates_.size(); i++) {
        output.writeMessage(1, orPredicates_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < orPredicates_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, orPredicates_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate) obj;

      if (!getOrPredicatesList()
          .equals(other.getOrPredicatesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getOrPredicatesCount() > 0) {
        hash = (37 * hash) + OR_PREDICATES_FIELD_NUMBER;
        hash = (53 * hash) + getOrPredicatesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * To define a predicate of {{k1, cmp, v1} and {k2, cmp, v2}} or ...,
     * where the values referred by k1, k2, ... are indexed and hence the
     * predicate can be efficiently verified by leveraging the index.
     * </pre>
     *
     * Protobuf type {@code algebra.IndexPredicate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.IndexPredicate)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_IndexPredicate_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_IndexPredicate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (orPredicatesBuilder_ == null) {
          orPredicates_ = java.util.Collections.emptyList();
        } else {
          orPredicates_ = null;
          orPredicatesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_IndexPredicate_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate result) {
        if (orPredicatesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            orPredicates_ = java.util.Collections.unmodifiableList(orPredicates_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.orPredicates_ = orPredicates_;
        } else {
          result.orPredicates_ = orPredicatesBuilder_.build();
        }
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.getDefaultInstance()) return this;
        if (orPredicatesBuilder_ == null) {
          if (!other.orPredicates_.isEmpty()) {
            if (orPredicates_.isEmpty()) {
              orPredicates_ = other.orPredicates_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureOrPredicatesIsMutable();
              orPredicates_.addAll(other.orPredicates_);
            }
            onChanged();
          }
        } else {
          if (!other.orPredicates_.isEmpty()) {
            if (orPredicatesBuilder_.isEmpty()) {
              orPredicatesBuilder_.dispose();
              orPredicatesBuilder_ = null;
              orPredicates_ = other.orPredicates_;
              bitField0_ = (bitField0_ & ~0x00000001);
              orPredicatesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOrPredicatesFieldBuilder() : null;
            } else {
              orPredicatesBuilder_.addAllMessages(other.orPredicates_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate m =
                    input.readMessage(
                        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate.parser(),
                        extensionRegistry);
                if (orPredicatesBuilder_ == null) {
                  ensureOrPredicatesIsMutable();
                  orPredicates_.add(m);
                } else {
                  orPredicatesBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate> orPredicates_ =
        java.util.Collections.emptyList();
      private void ensureOrPredicatesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          orPredicates_ = new java.util.ArrayList<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate>(orPredicates_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicateOrBuilder> orPredicatesBuilder_;

      /**
       * <pre>
       * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
       * </pre>
       *
       * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate> getOrPredicatesList() {
        if (orPredicatesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(orPredicates_);
        } else {
          return orPredicatesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
       * </pre>
       *
       * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
       */
      public int getOrPredicatesCount() {
        if (orPredicatesBuilder_ == null) {
          return orPredicates_.size();
        } else {
          return orPredicatesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
       * </pre>
       *
       * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate getOrPredicates(int index) {
        if (orPredicatesBuilder_ == null) {
          return orPredicates_.get(index);
        } else {
          return orPredicatesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
       * </pre>
       *
       * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
       */
      public Builder setOrPredicates(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate value) {
        if (orPredicatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOrPredicatesIsMutable();
          orPredicates_.set(index, value);
          onChanged();
        } else {
          orPredicatesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
       * </pre>
       *
       * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
       */
      public Builder setOrPredicates(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate.Builder builderForValue) {
        if (orPredicatesBuilder_ == null) {
          ensureOrPredicatesIsMutable();
          orPredicates_.set(index, builderForValue.build());
          onChanged();
        } else {
          orPredicatesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
       * </pre>
       *
       * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
       */
      public Builder addOrPredicates(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate value) {
        if (orPredicatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOrPredicatesIsMutable();
          orPredicates_.add(value);
          onChanged();
        } else {
          orPredicatesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
       * </pre>
       *
       * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
       */
      public Builder addOrPredicates(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate value) {
        if (orPredicatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOrPredicatesIsMutable();
          orPredicates_.add(index, value);
          onChanged();
        } else {
          orPredicatesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
       * </pre>
       *
       * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
       */
      public Builder addOrPredicates(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate.Builder builderForValue) {
        if (orPredicatesBuilder_ == null) {
          ensureOrPredicatesIsMutable();
          orPredicates_.add(builderForValue.build());
          onChanged();
        } else {
          orPredicatesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
       * </pre>
       *
       * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
       */
      public Builder addOrPredicates(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate.Builder builderForValue) {
        if (orPredicatesBuilder_ == null) {
          ensureOrPredicatesIsMutable();
          orPredicates_.add(index, builderForValue.build());
          onChanged();
        } else {
          orPredicatesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
       * </pre>
       *
       * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
       */
      public Builder addAllOrPredicates(
          java.lang.Iterable<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate> values) {
        if (orPredicatesBuilder_ == null) {
          ensureOrPredicatesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, orPredicates_);
          onChanged();
        } else {
          orPredicatesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
       * </pre>
       *
       * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
       */
      public Builder clearOrPredicates() {
        if (orPredicatesBuilder_ == null) {
          orPredicates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          orPredicatesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
       * </pre>
       *
       * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
       */
      public Builder removeOrPredicates(int index) {
        if (orPredicatesBuilder_ == null) {
          ensureOrPredicatesIsMutable();
          orPredicates_.remove(index);
          onChanged();
        } else {
          orPredicatesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
       * </pre>
       *
       * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate.Builder getOrPredicatesBuilder(
          int index) {
        return getOrPredicatesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
       * </pre>
       *
       * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicateOrBuilder getOrPredicatesOrBuilder(
          int index) {
        if (orPredicatesBuilder_ == null) {
          return orPredicates_.get(index);  } else {
          return orPredicatesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
       * </pre>
       *
       * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
       */
      public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicateOrBuilder> 
           getOrPredicatesOrBuilderList() {
        if (orPredicatesBuilder_ != null) {
          return orPredicatesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(orPredicates_);
        }
      }
      /**
       * <pre>
       * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
       * </pre>
       *
       * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate.Builder addOrPredicatesBuilder() {
        return getOrPredicatesFieldBuilder().addBuilder(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate.getDefaultInstance());
      }
      /**
       * <pre>
       * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
       * </pre>
       *
       * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate.Builder addOrPredicatesBuilder(
          int index) {
        return getOrPredicatesFieldBuilder().addBuilder(
            index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate.getDefaultInstance());
      }
      /**
       * <pre>
       * A collection of `AndPredicate` that forms a logical **OR** of all `AndPredicate`s
       * </pre>
       *
       * <code>repeated .algebra.IndexPredicate.AndPredicate or_predicates = 1;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate.Builder> 
           getOrPredicatesBuilderList() {
        return getOrPredicatesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicateOrBuilder> 
          getOrPredicatesFieldBuilder() {
        if (orPredicatesBuilder_ == null) {
          orPredicatesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicate.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.AndPredicateOrBuilder>(
                  orPredicates_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          orPredicates_ = null;
        }
        return orPredicatesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.IndexPredicate)
    }

    // @@protoc_insertion_point(class_scope:algebra.IndexPredicate)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IndexPredicate>
        PARSER = new com.google.protobuf.AbstractParser<IndexPredicate>() {
      @java.lang.Override
      public IndexPredicate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IndexPredicate> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IndexPredicate> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface QueryParamsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.QueryParams)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
     * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
     * </pre>
     *
     * <code>repeated .common.NameOrId tables = 1;</code>
     */
    java.util.List<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId> 
        getTablesList();
    /**
     * <pre>
     * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
     * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
     * </pre>
     *
     * <code>repeated .common.NameOrId tables = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getTables(int index);
    /**
     * <pre>
     * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
     * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
     * </pre>
     *
     * <code>repeated .common.NameOrId tables = 1;</code>
     */
    int getTablesCount();
    /**
     * <pre>
     * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
     * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
     * </pre>
     *
     * <code>repeated .common.NameOrId tables = 1;</code>
     */
    java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
        getTablesOrBuilderList();
    /**
     * <pre>
     * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
     * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
     * </pre>
     *
     * <code>repeated .common.NameOrId tables = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getTablesOrBuilder(
        int index);

    /**
     * <pre>
     * The required columns of the table.
     * </pre>
     *
     * <code>repeated .common.NameOrId columns = 2;</code>
     */
    java.util.List<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId> 
        getColumnsList();
    /**
     * <pre>
     * The required columns of the table.
     * </pre>
     *
     * <code>repeated .common.NameOrId columns = 2;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getColumns(int index);
    /**
     * <pre>
     * The required columns of the table.
     * </pre>
     *
     * <code>repeated .common.NameOrId columns = 2;</code>
     */
    int getColumnsCount();
    /**
     * <pre>
     * The required columns of the table.
     * </pre>
     *
     * <code>repeated .common.NameOrId columns = 2;</code>
     */
    java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
        getColumnsOrBuilderList();
    /**
     * <pre>
     * The required columns of the table.
     * </pre>
     *
     * <code>repeated .common.NameOrId columns = 2;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getColumnsOrBuilder(
        int index);

    /**
     * <pre>
     * Can specify to get all columns of the table
     * </pre>
     *
     * <code>bool is_all_columns = 3;</code>
     * @return The isAllColumns.
     */
    boolean getIsAllColumns();

    /**
     * <pre>
     * The size limit
     * </pre>
     *
     * <code>.algebra.Range limit = 4;</code>
     * @return Whether the limit field is set.
     */
    boolean hasLimit();
    /**
     * <pre>
     * The size limit
     * </pre>
     *
     * <code>.algebra.Range limit = 4;</code>
     * @return The limit.
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range getLimit();
    /**
     * <pre>
     * The size limit
     * </pre>
     *
     * <code>.algebra.Range limit = 4;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RangeOrBuilder getLimitOrBuilder();

    /**
     * <pre>
     * The optional predicate for the data tuple, which may be pushed down to the storage service
     * </pre>
     *
     * <code>.common.Expression predicate = 5;</code>
     * @return Whether the predicate field is set.
     */
    boolean hasPredicate();
    /**
     * <pre>
     * The optional predicate for the data tuple, which may be pushed down to the storage service
     * </pre>
     *
     * <code>.common.Expression predicate = 5;</code>
     * @return The predicate.
     */
    com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression getPredicate();
    /**
     * <pre>
     * The optional predicate for the data tuple, which may be pushed down to the storage service
     * </pre>
     *
     * <code>.common.Expression predicate = 5;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.ExpressionOrBuilder getPredicateOrBuilder();

    /**
     * <pre>
     * Define the sampling ratio, while querying vertex/edge.
     * 1.0 by default for deterministic case.
     * </pre>
     *
     * <code>double sample_ratio = 6;</code>
     * @return The sampleRatio.
     */
    double getSampleRatio();

    /**
     * <pre>
     * Extra parameters for general-purpose usage
     * </pre>
     *
     * <code>map&lt;string, string&gt; extra = 7;</code>
     */
    int getExtraCount();
    /**
     * <pre>
     * Extra parameters for general-purpose usage
     * </pre>
     *
     * <code>map&lt;string, string&gt; extra = 7;</code>
     */
    boolean containsExtra(
        java.lang.String key);
    /**
     * Use {@link #getExtraMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getExtra();
    /**
     * <pre>
     * Extra parameters for general-purpose usage
     * </pre>
     *
     * <code>map&lt;string, string&gt; extra = 7;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getExtraMap();
    /**
     * <pre>
     * Extra parameters for general-purpose usage
     * </pre>
     *
     * <code>map&lt;string, string&gt; extra = 7;</code>
     */
    /* nullable */
java.lang.String getExtraOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue);
    /**
     * <pre>
     * Extra parameters for general-purpose usage
     * </pre>
     *
     * <code>map&lt;string, string&gt; extra = 7;</code>
     */
    java.lang.String getExtraOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code algebra.QueryParams}
   */
  public static final class QueryParams extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.QueryParams)
      QueryParamsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use QueryParams.newBuilder() to construct.
    private QueryParams(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private QueryParams() {
      tables_ = java.util.Collections.emptyList();
      columns_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new QueryParams();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_QueryParams_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 7:
          return internalGetExtra();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_QueryParams_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.Builder.class);
    }

    public static final int TABLES_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId> tables_;
    /**
     * <pre>
     * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
     * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
     * </pre>
     *
     * <code>repeated .common.NameOrId tables = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId> getTablesList() {
      return tables_;
    }
    /**
     * <pre>
     * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
     * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
     * </pre>
     *
     * <code>repeated .common.NameOrId tables = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
        getTablesOrBuilderList() {
      return tables_;
    }
    /**
     * <pre>
     * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
     * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
     * </pre>
     *
     * <code>repeated .common.NameOrId tables = 1;</code>
     */
    @java.lang.Override
    public int getTablesCount() {
      return tables_.size();
    }
    /**
     * <pre>
     * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
     * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
     * </pre>
     *
     * <code>repeated .common.NameOrId tables = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getTables(int index) {
      return tables_.get(index);
    }
    /**
     * <pre>
     * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
     * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
     * </pre>
     *
     * <code>repeated .common.NameOrId tables = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getTablesOrBuilder(
        int index) {
      return tables_.get(index);
    }

    public static final int COLUMNS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId> columns_;
    /**
     * <pre>
     * The required columns of the table.
     * </pre>
     *
     * <code>repeated .common.NameOrId columns = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId> getColumnsList() {
      return columns_;
    }
    /**
     * <pre>
     * The required columns of the table.
     * </pre>
     *
     * <code>repeated .common.NameOrId columns = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
        getColumnsOrBuilderList() {
      return columns_;
    }
    /**
     * <pre>
     * The required columns of the table.
     * </pre>
     *
     * <code>repeated .common.NameOrId columns = 2;</code>
     */
    @java.lang.Override
    public int getColumnsCount() {
      return columns_.size();
    }
    /**
     * <pre>
     * The required columns of the table.
     * </pre>
     *
     * <code>repeated .common.NameOrId columns = 2;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getColumns(int index) {
      return columns_.get(index);
    }
    /**
     * <pre>
     * The required columns of the table.
     * </pre>
     *
     * <code>repeated .common.NameOrId columns = 2;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getColumnsOrBuilder(
        int index) {
      return columns_.get(index);
    }

    public static final int IS_ALL_COLUMNS_FIELD_NUMBER = 3;
    private boolean isAllColumns_ = false;
    /**
     * <pre>
     * Can specify to get all columns of the table
     * </pre>
     *
     * <code>bool is_all_columns = 3;</code>
     * @return The isAllColumns.
     */
    @java.lang.Override
    public boolean getIsAllColumns() {
      return isAllColumns_;
    }

    public static final int LIMIT_FIELD_NUMBER = 4;
    private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range limit_;
    /**
     * <pre>
     * The size limit
     * </pre>
     *
     * <code>.algebra.Range limit = 4;</code>
     * @return Whether the limit field is set.
     */
    @java.lang.Override
    public boolean hasLimit() {
      return limit_ != null;
    }
    /**
     * <pre>
     * The size limit
     * </pre>
     *
     * <code>.algebra.Range limit = 4;</code>
     * @return The limit.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range getLimit() {
      return limit_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.getDefaultInstance() : limit_;
    }
    /**
     * <pre>
     * The size limit
     * </pre>
     *
     * <code>.algebra.Range limit = 4;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RangeOrBuilder getLimitOrBuilder() {
      return limit_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.getDefaultInstance() : limit_;
    }

    public static final int PREDICATE_FIELD_NUMBER = 5;
    private com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression predicate_;
    /**
     * <pre>
     * The optional predicate for the data tuple, which may be pushed down to the storage service
     * </pre>
     *
     * <code>.common.Expression predicate = 5;</code>
     * @return Whether the predicate field is set.
     */
    @java.lang.Override
    public boolean hasPredicate() {
      return predicate_ != null;
    }
    /**
     * <pre>
     * The optional predicate for the data tuple, which may be pushed down to the storage service
     * </pre>
     *
     * <code>.common.Expression predicate = 5;</code>
     * @return The predicate.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression getPredicate() {
      return predicate_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.getDefaultInstance() : predicate_;
    }
    /**
     * <pre>
     * The optional predicate for the data tuple, which may be pushed down to the storage service
     * </pre>
     *
     * <code>.common.Expression predicate = 5;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.ExpressionOrBuilder getPredicateOrBuilder() {
      return predicate_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.getDefaultInstance() : predicate_;
    }

    public static final int SAMPLE_RATIO_FIELD_NUMBER = 6;
    private double sampleRatio_ = 0D;
    /**
     * <pre>
     * Define the sampling ratio, while querying vertex/edge.
     * 1.0 by default for deterministic case.
     * </pre>
     *
     * <code>double sample_ratio = 6;</code>
     * @return The sampleRatio.
     */
    @java.lang.Override
    public double getSampleRatio() {
      return sampleRatio_;
    }

    public static final int EXTRA_FIELD_NUMBER = 7;
    private static final class ExtraDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_QueryParams_ExtraEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> extra_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetExtra() {
      if (extra_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ExtraDefaultEntryHolder.defaultEntry);
      }
      return extra_;
    }
    public int getExtraCount() {
      return internalGetExtra().getMap().size();
    }
    /**
     * <pre>
     * Extra parameters for general-purpose usage
     * </pre>
     *
     * <code>map&lt;string, string&gt; extra = 7;</code>
     */
    @java.lang.Override
    public boolean containsExtra(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetExtra().getMap().containsKey(key);
    }
    /**
     * Use {@link #getExtraMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getExtra() {
      return getExtraMap();
    }
    /**
     * <pre>
     * Extra parameters for general-purpose usage
     * </pre>
     *
     * <code>map&lt;string, string&gt; extra = 7;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getExtraMap() {
      return internalGetExtra().getMap();
    }
    /**
     * <pre>
     * Extra parameters for general-purpose usage
     * </pre>
     *
     * <code>map&lt;string, string&gt; extra = 7;</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getExtraOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetExtra().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Extra parameters for general-purpose usage
     * </pre>
     *
     * <code>map&lt;string, string&gt; extra = 7;</code>
     */
    @java.lang.Override
    public java.lang.String getExtraOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetExtra().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < tables_.size(); i++) {
        output.writeMessage(1, tables_.get(i));
      }
      for (int i = 0; i < columns_.size(); i++) {
        output.writeMessage(2, columns_.get(i));
      }
      if (isAllColumns_ != false) {
        output.writeBool(3, isAllColumns_);
      }
      if (limit_ != null) {
        output.writeMessage(4, getLimit());
      }
      if (predicate_ != null) {
        output.writeMessage(5, getPredicate());
      }
      if (java.lang.Double.doubleToRawLongBits(sampleRatio_) != 0) {
        output.writeDouble(6, sampleRatio_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetExtra(),
          ExtraDefaultEntryHolder.defaultEntry,
          7);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < tables_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, tables_.get(i));
      }
      for (int i = 0; i < columns_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, columns_.get(i));
      }
      if (isAllColumns_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isAllColumns_);
      }
      if (limit_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getLimit());
      }
      if (predicate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getPredicate());
      }
      if (java.lang.Double.doubleToRawLongBits(sampleRatio_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, sampleRatio_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetExtra().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        extra__ = ExtraDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, extra__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams) obj;

      if (!getTablesList()
          .equals(other.getTablesList())) return false;
      if (!getColumnsList()
          .equals(other.getColumnsList())) return false;
      if (getIsAllColumns()
          != other.getIsAllColumns()) return false;
      if (hasLimit() != other.hasLimit()) return false;
      if (hasLimit()) {
        if (!getLimit()
            .equals(other.getLimit())) return false;
      }
      if (hasPredicate() != other.hasPredicate()) return false;
      if (hasPredicate()) {
        if (!getPredicate()
            .equals(other.getPredicate())) return false;
      }
      if (java.lang.Double.doubleToLongBits(getSampleRatio())
          != java.lang.Double.doubleToLongBits(
              other.getSampleRatio())) return false;
      if (!internalGetExtra().equals(
          other.internalGetExtra())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTablesCount() > 0) {
        hash = (37 * hash) + TABLES_FIELD_NUMBER;
        hash = (53 * hash) + getTablesList().hashCode();
      }
      if (getColumnsCount() > 0) {
        hash = (37 * hash) + COLUMNS_FIELD_NUMBER;
        hash = (53 * hash) + getColumnsList().hashCode();
      }
      hash = (37 * hash) + IS_ALL_COLUMNS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsAllColumns());
      if (hasLimit()) {
        hash = (37 * hash) + LIMIT_FIELD_NUMBER;
        hash = (53 * hash) + getLimit().hashCode();
      }
      if (hasPredicate()) {
        hash = (37 * hash) + PREDICATE_FIELD_NUMBER;
        hash = (53 * hash) + getPredicate().hashCode();
      }
      hash = (37 * hash) + SAMPLE_RATIO_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSampleRatio()));
      if (!internalGetExtra().getMap().isEmpty()) {
        hash = (37 * hash) + EXTRA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetExtra().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code algebra.QueryParams}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.QueryParams)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParamsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_QueryParams_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 7:
            return internalGetExtra();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 7:
            return internalGetMutableExtra();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_QueryParams_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (tablesBuilder_ == null) {
          tables_ = java.util.Collections.emptyList();
        } else {
          tables_ = null;
          tablesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (columnsBuilder_ == null) {
          columns_ = java.util.Collections.emptyList();
        } else {
          columns_ = null;
          columnsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        isAllColumns_ = false;
        limit_ = null;
        if (limitBuilder_ != null) {
          limitBuilder_.dispose();
          limitBuilder_ = null;
        }
        predicate_ = null;
        if (predicateBuilder_ != null) {
          predicateBuilder_.dispose();
          predicateBuilder_ = null;
        }
        sampleRatio_ = 0D;
        internalGetMutableExtra().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_QueryParams_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams result) {
        if (tablesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            tables_ = java.util.Collections.unmodifiableList(tables_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.tables_ = tables_;
        } else {
          result.tables_ = tablesBuilder_.build();
        }
        if (columnsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            columns_ = java.util.Collections.unmodifiableList(columns_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.columns_ = columns_;
        } else {
          result.columns_ = columnsBuilder_.build();
        }
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.isAllColumns_ = isAllColumns_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.limit_ = limitBuilder_ == null
              ? limit_
              : limitBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.predicate_ = predicateBuilder_ == null
              ? predicate_
              : predicateBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.sampleRatio_ = sampleRatio_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.extra_ = internalGetExtra();
          result.extra_.makeImmutable();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.getDefaultInstance()) return this;
        if (tablesBuilder_ == null) {
          if (!other.tables_.isEmpty()) {
            if (tables_.isEmpty()) {
              tables_ = other.tables_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTablesIsMutable();
              tables_.addAll(other.tables_);
            }
            onChanged();
          }
        } else {
          if (!other.tables_.isEmpty()) {
            if (tablesBuilder_.isEmpty()) {
              tablesBuilder_.dispose();
              tablesBuilder_ = null;
              tables_ = other.tables_;
              bitField0_ = (bitField0_ & ~0x00000001);
              tablesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTablesFieldBuilder() : null;
            } else {
              tablesBuilder_.addAllMessages(other.tables_);
            }
          }
        }
        if (columnsBuilder_ == null) {
          if (!other.columns_.isEmpty()) {
            if (columns_.isEmpty()) {
              columns_ = other.columns_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureColumnsIsMutable();
              columns_.addAll(other.columns_);
            }
            onChanged();
          }
        } else {
          if (!other.columns_.isEmpty()) {
            if (columnsBuilder_.isEmpty()) {
              columnsBuilder_.dispose();
              columnsBuilder_ = null;
              columns_ = other.columns_;
              bitField0_ = (bitField0_ & ~0x00000002);
              columnsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getColumnsFieldBuilder() : null;
            } else {
              columnsBuilder_.addAllMessages(other.columns_);
            }
          }
        }
        if (other.getIsAllColumns() != false) {
          setIsAllColumns(other.getIsAllColumns());
        }
        if (other.hasLimit()) {
          mergeLimit(other.getLimit());
        }
        if (other.hasPredicate()) {
          mergePredicate(other.getPredicate());
        }
        if (other.getSampleRatio() != 0D) {
          setSampleRatio(other.getSampleRatio());
        }
        internalGetMutableExtra().mergeFrom(
            other.internalGetExtra());
        bitField0_ |= 0x00000040;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId m =
                    input.readMessage(
                        com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.parser(),
                        extensionRegistry);
                if (tablesBuilder_ == null) {
                  ensureTablesIsMutable();
                  tables_.add(m);
                } else {
                  tablesBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId m =
                    input.readMessage(
                        com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.parser(),
                        extensionRegistry);
                if (columnsBuilder_ == null) {
                  ensureColumnsIsMutable();
                  columns_.add(m);
                } else {
                  columnsBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 24: {
                isAllColumns_ = input.readBool();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 34: {
                input.readMessage(
                    getLimitFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getPredicateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 49: {
                sampleRatio_ = input.readDouble();
                bitField0_ |= 0x00000020;
                break;
              } // case 49
              case 58: {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                extra__ = input.readMessage(
                    ExtraDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableExtra().getMutableMap().put(
                    extra__.getKey(), extra__.getValue());
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId> tables_ =
        java.util.Collections.emptyList();
      private void ensureTablesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tables_ = new java.util.ArrayList<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId>(tables_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> tablesBuilder_;

      /**
       * <pre>
       * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
       * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
       * </pre>
       *
       * <code>repeated .common.NameOrId tables = 1;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId> getTablesList() {
        if (tablesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tables_);
        } else {
          return tablesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
       * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
       * </pre>
       *
       * <code>repeated .common.NameOrId tables = 1;</code>
       */
      public int getTablesCount() {
        if (tablesBuilder_ == null) {
          return tables_.size();
        } else {
          return tablesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
       * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
       * </pre>
       *
       * <code>repeated .common.NameOrId tables = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getTables(int index) {
        if (tablesBuilder_ == null) {
          return tables_.get(index);
        } else {
          return tablesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
       * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
       * </pre>
       *
       * <code>repeated .common.NameOrId tables = 1;</code>
       */
      public Builder setTables(
          int index, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.set(index, value);
          onChanged();
        } else {
          tablesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
       * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
       * </pre>
       *
       * <code>repeated .common.NameOrId tables = 1;</code>
       */
      public Builder setTables(
          int index, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.set(index, builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
       * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
       * </pre>
       *
       * <code>repeated .common.NameOrId tables = 1;</code>
       */
      public Builder addTables(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.add(value);
          onChanged();
        } else {
          tablesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
       * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
       * </pre>
       *
       * <code>repeated .common.NameOrId tables = 1;</code>
       */
      public Builder addTables(
          int index, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.add(index, value);
          onChanged();
        } else {
          tablesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
       * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
       * </pre>
       *
       * <code>repeated .common.NameOrId tables = 1;</code>
       */
      public Builder addTables(
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.add(builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
       * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
       * </pre>
       *
       * <code>repeated .common.NameOrId tables = 1;</code>
       */
      public Builder addTables(
          int index, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.add(index, builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
       * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
       * </pre>
       *
       * <code>repeated .common.NameOrId tables = 1;</code>
       */
      public Builder addAllTables(
          java.lang.Iterable<? extends com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId> values) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tables_);
          onChanged();
        } else {
          tablesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
       * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
       * </pre>
       *
       * <code>repeated .common.NameOrId tables = 1;</code>
       */
      public Builder clearTables() {
        if (tablesBuilder_ == null) {
          tables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          tablesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
       * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
       * </pre>
       *
       * <code>repeated .common.NameOrId tables = 1;</code>
       */
      public Builder removeTables(int index) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.remove(index);
          onChanged();
        } else {
          tablesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
       * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
       * </pre>
       *
       * <code>repeated .common.NameOrId tables = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder getTablesBuilder(
          int index) {
        return getTablesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
       * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
       * </pre>
       *
       * <code>repeated .common.NameOrId tables = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getTablesOrBuilder(
          int index) {
        if (tablesBuilder_ == null) {
          return tables_.get(index);  } else {
          return tablesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
       * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
       * </pre>
       *
       * <code>repeated .common.NameOrId tables = 1;</code>
       */
      public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
           getTablesOrBuilderList() {
        if (tablesBuilder_ != null) {
          return tablesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tables_);
        }
      }
      /**
       * <pre>
       * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
       * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
       * </pre>
       *
       * <code>repeated .common.NameOrId tables = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder addTablesBuilder() {
        return getTablesFieldBuilder().addBuilder(
            com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance());
      }
      /**
       * <pre>
       * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
       * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
       * </pre>
       *
       * <code>repeated .common.NameOrId tables = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder addTablesBuilder(
          int index) {
        return getTablesFieldBuilder().addBuilder(
            index, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance());
      }
      /**
       * <pre>
       * The tables to fetch data from. While this may sound arbitrary, but in graph db, we often use
       * label instead of table to refer to an entity (vertex/edge). They are semantically the same.
       * </pre>
       *
       * <code>repeated .common.NameOrId tables = 1;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder> 
           getTablesBuilderList() {
        return getTablesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
          getTablesFieldBuilder() {
        if (tablesBuilder_ == null) {
          tablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder>(
                  tables_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          tables_ = null;
        }
        return tablesBuilder_;
      }

      private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId> columns_ =
        java.util.Collections.emptyList();
      private void ensureColumnsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          columns_ = new java.util.ArrayList<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId>(columns_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> columnsBuilder_;

      /**
       * <pre>
       * The required columns of the table.
       * </pre>
       *
       * <code>repeated .common.NameOrId columns = 2;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId> getColumnsList() {
        if (columnsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(columns_);
        } else {
          return columnsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The required columns of the table.
       * </pre>
       *
       * <code>repeated .common.NameOrId columns = 2;</code>
       */
      public int getColumnsCount() {
        if (columnsBuilder_ == null) {
          return columns_.size();
        } else {
          return columnsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The required columns of the table.
       * </pre>
       *
       * <code>repeated .common.NameOrId columns = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getColumns(int index) {
        if (columnsBuilder_ == null) {
          return columns_.get(index);
        } else {
          return columnsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The required columns of the table.
       * </pre>
       *
       * <code>repeated .common.NameOrId columns = 2;</code>
       */
      public Builder setColumns(
          int index, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (columnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureColumnsIsMutable();
          columns_.set(index, value);
          onChanged();
        } else {
          columnsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The required columns of the table.
       * </pre>
       *
       * <code>repeated .common.NameOrId columns = 2;</code>
       */
      public Builder setColumns(
          int index, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
        if (columnsBuilder_ == null) {
          ensureColumnsIsMutable();
          columns_.set(index, builderForValue.build());
          onChanged();
        } else {
          columnsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The required columns of the table.
       * </pre>
       *
       * <code>repeated .common.NameOrId columns = 2;</code>
       */
      public Builder addColumns(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (columnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureColumnsIsMutable();
          columns_.add(value);
          onChanged();
        } else {
          columnsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The required columns of the table.
       * </pre>
       *
       * <code>repeated .common.NameOrId columns = 2;</code>
       */
      public Builder addColumns(
          int index, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (columnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureColumnsIsMutable();
          columns_.add(index, value);
          onChanged();
        } else {
          columnsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The required columns of the table.
       * </pre>
       *
       * <code>repeated .common.NameOrId columns = 2;</code>
       */
      public Builder addColumns(
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
        if (columnsBuilder_ == null) {
          ensureColumnsIsMutable();
          columns_.add(builderForValue.build());
          onChanged();
        } else {
          columnsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The required columns of the table.
       * </pre>
       *
       * <code>repeated .common.NameOrId columns = 2;</code>
       */
      public Builder addColumns(
          int index, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
        if (columnsBuilder_ == null) {
          ensureColumnsIsMutable();
          columns_.add(index, builderForValue.build());
          onChanged();
        } else {
          columnsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The required columns of the table.
       * </pre>
       *
       * <code>repeated .common.NameOrId columns = 2;</code>
       */
      public Builder addAllColumns(
          java.lang.Iterable<? extends com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId> values) {
        if (columnsBuilder_ == null) {
          ensureColumnsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, columns_);
          onChanged();
        } else {
          columnsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The required columns of the table.
       * </pre>
       *
       * <code>repeated .common.NameOrId columns = 2;</code>
       */
      public Builder clearColumns() {
        if (columnsBuilder_ == null) {
          columns_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          columnsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The required columns of the table.
       * </pre>
       *
       * <code>repeated .common.NameOrId columns = 2;</code>
       */
      public Builder removeColumns(int index) {
        if (columnsBuilder_ == null) {
          ensureColumnsIsMutable();
          columns_.remove(index);
          onChanged();
        } else {
          columnsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The required columns of the table.
       * </pre>
       *
       * <code>repeated .common.NameOrId columns = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder getColumnsBuilder(
          int index) {
        return getColumnsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The required columns of the table.
       * </pre>
       *
       * <code>repeated .common.NameOrId columns = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getColumnsOrBuilder(
          int index) {
        if (columnsBuilder_ == null) {
          return columns_.get(index);  } else {
          return columnsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The required columns of the table.
       * </pre>
       *
       * <code>repeated .common.NameOrId columns = 2;</code>
       */
      public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
           getColumnsOrBuilderList() {
        if (columnsBuilder_ != null) {
          return columnsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(columns_);
        }
      }
      /**
       * <pre>
       * The required columns of the table.
       * </pre>
       *
       * <code>repeated .common.NameOrId columns = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder addColumnsBuilder() {
        return getColumnsFieldBuilder().addBuilder(
            com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance());
      }
      /**
       * <pre>
       * The required columns of the table.
       * </pre>
       *
       * <code>repeated .common.NameOrId columns = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder addColumnsBuilder(
          int index) {
        return getColumnsFieldBuilder().addBuilder(
            index, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance());
      }
      /**
       * <pre>
       * The required columns of the table.
       * </pre>
       *
       * <code>repeated .common.NameOrId columns = 2;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder> 
           getColumnsBuilderList() {
        return getColumnsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
          getColumnsFieldBuilder() {
        if (columnsBuilder_ == null) {
          columnsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder>(
                  columns_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          columns_ = null;
        }
        return columnsBuilder_;
      }

      private boolean isAllColumns_ ;
      /**
       * <pre>
       * Can specify to get all columns of the table
       * </pre>
       *
       * <code>bool is_all_columns = 3;</code>
       * @return The isAllColumns.
       */
      @java.lang.Override
      public boolean getIsAllColumns() {
        return isAllColumns_;
      }
      /**
       * <pre>
       * Can specify to get all columns of the table
       * </pre>
       *
       * <code>bool is_all_columns = 3;</code>
       * @param value The isAllColumns to set.
       * @return This builder for chaining.
       */
      public Builder setIsAllColumns(boolean value) {

        isAllColumns_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Can specify to get all columns of the table
       * </pre>
       *
       * <code>bool is_all_columns = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsAllColumns() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isAllColumns_ = false;
        onChanged();
        return this;
      }

      private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range limit_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RangeOrBuilder> limitBuilder_;
      /**
       * <pre>
       * The size limit
       * </pre>
       *
       * <code>.algebra.Range limit = 4;</code>
       * @return Whether the limit field is set.
       */
      public boolean hasLimit() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The size limit
       * </pre>
       *
       * <code>.algebra.Range limit = 4;</code>
       * @return The limit.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range getLimit() {
        if (limitBuilder_ == null) {
          return limit_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.getDefaultInstance() : limit_;
        } else {
          return limitBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The size limit
       * </pre>
       *
       * <code>.algebra.Range limit = 4;</code>
       */
      public Builder setLimit(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range value) {
        if (limitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          limit_ = value;
        } else {
          limitBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The size limit
       * </pre>
       *
       * <code>.algebra.Range limit = 4;</code>
       */
      public Builder setLimit(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.Builder builderForValue) {
        if (limitBuilder_ == null) {
          limit_ = builderForValue.build();
        } else {
          limitBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The size limit
       * </pre>
       *
       * <code>.algebra.Range limit = 4;</code>
       */
      public Builder mergeLimit(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range value) {
        if (limitBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            limit_ != null &&
            limit_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.getDefaultInstance()) {
            getLimitBuilder().mergeFrom(value);
          } else {
            limit_ = value;
          }
        } else {
          limitBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The size limit
       * </pre>
       *
       * <code>.algebra.Range limit = 4;</code>
       */
      public Builder clearLimit() {
        bitField0_ = (bitField0_ & ~0x00000008);
        limit_ = null;
        if (limitBuilder_ != null) {
          limitBuilder_.dispose();
          limitBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The size limit
       * </pre>
       *
       * <code>.algebra.Range limit = 4;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.Builder getLimitBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getLimitFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The size limit
       * </pre>
       *
       * <code>.algebra.Range limit = 4;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RangeOrBuilder getLimitOrBuilder() {
        if (limitBuilder_ != null) {
          return limitBuilder_.getMessageOrBuilder();
        } else {
          return limit_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.getDefaultInstance() : limit_;
        }
      }
      /**
       * <pre>
       * The size limit
       * </pre>
       *
       * <code>.algebra.Range limit = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RangeOrBuilder> 
          getLimitFieldBuilder() {
        if (limitBuilder_ == null) {
          limitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RangeOrBuilder>(
                  getLimit(),
                  getParentForChildren(),
                  isClean());
          limit_ = null;
        }
        return limitBuilder_;
      }

      private com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression predicate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.ExpressionOrBuilder> predicateBuilder_;
      /**
       * <pre>
       * The optional predicate for the data tuple, which may be pushed down to the storage service
       * </pre>
       *
       * <code>.common.Expression predicate = 5;</code>
       * @return Whether the predicate field is set.
       */
      public boolean hasPredicate() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * The optional predicate for the data tuple, which may be pushed down to the storage service
       * </pre>
       *
       * <code>.common.Expression predicate = 5;</code>
       * @return The predicate.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression getPredicate() {
        if (predicateBuilder_ == null) {
          return predicate_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.getDefaultInstance() : predicate_;
        } else {
          return predicateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The optional predicate for the data tuple, which may be pushed down to the storage service
       * </pre>
       *
       * <code>.common.Expression predicate = 5;</code>
       */
      public Builder setPredicate(com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression value) {
        if (predicateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          predicate_ = value;
        } else {
          predicateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The optional predicate for the data tuple, which may be pushed down to the storage service
       * </pre>
       *
       * <code>.common.Expression predicate = 5;</code>
       */
      public Builder setPredicate(
          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.Builder builderForValue) {
        if (predicateBuilder_ == null) {
          predicate_ = builderForValue.build();
        } else {
          predicateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The optional predicate for the data tuple, which may be pushed down to the storage service
       * </pre>
       *
       * <code>.common.Expression predicate = 5;</code>
       */
      public Builder mergePredicate(com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression value) {
        if (predicateBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            predicate_ != null &&
            predicate_ != com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.getDefaultInstance()) {
            getPredicateBuilder().mergeFrom(value);
          } else {
            predicate_ = value;
          }
        } else {
          predicateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The optional predicate for the data tuple, which may be pushed down to the storage service
       * </pre>
       *
       * <code>.common.Expression predicate = 5;</code>
       */
      public Builder clearPredicate() {
        bitField0_ = (bitField0_ & ~0x00000010);
        predicate_ = null;
        if (predicateBuilder_ != null) {
          predicateBuilder_.dispose();
          predicateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The optional predicate for the data tuple, which may be pushed down to the storage service
       * </pre>
       *
       * <code>.common.Expression predicate = 5;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.Builder getPredicateBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getPredicateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The optional predicate for the data tuple, which may be pushed down to the storage service
       * </pre>
       *
       * <code>.common.Expression predicate = 5;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.ExpressionOrBuilder getPredicateOrBuilder() {
        if (predicateBuilder_ != null) {
          return predicateBuilder_.getMessageOrBuilder();
        } else {
          return predicate_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.getDefaultInstance() : predicate_;
        }
      }
      /**
       * <pre>
       * The optional predicate for the data tuple, which may be pushed down to the storage service
       * </pre>
       *
       * <code>.common.Expression predicate = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.ExpressionOrBuilder> 
          getPredicateFieldBuilder() {
        if (predicateBuilder_ == null) {
          predicateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.ExpressionOrBuilder>(
                  getPredicate(),
                  getParentForChildren(),
                  isClean());
          predicate_ = null;
        }
        return predicateBuilder_;
      }

      private double sampleRatio_ ;
      /**
       * <pre>
       * Define the sampling ratio, while querying vertex/edge.
       * 1.0 by default for deterministic case.
       * </pre>
       *
       * <code>double sample_ratio = 6;</code>
       * @return The sampleRatio.
       */
      @java.lang.Override
      public double getSampleRatio() {
        return sampleRatio_;
      }
      /**
       * <pre>
       * Define the sampling ratio, while querying vertex/edge.
       * 1.0 by default for deterministic case.
       * </pre>
       *
       * <code>double sample_ratio = 6;</code>
       * @param value The sampleRatio to set.
       * @return This builder for chaining.
       */
      public Builder setSampleRatio(double value) {

        sampleRatio_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Define the sampling ratio, while querying vertex/edge.
       * 1.0 by default for deterministic case.
       * </pre>
       *
       * <code>double sample_ratio = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearSampleRatio() {
        bitField0_ = (bitField0_ & ~0x00000020);
        sampleRatio_ = 0D;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> extra_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetExtra() {
        if (extra_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ExtraDefaultEntryHolder.defaultEntry);
        }
        return extra_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableExtra() {
        if (extra_ == null) {
          extra_ = com.google.protobuf.MapField.newMapField(
              ExtraDefaultEntryHolder.defaultEntry);
        }
        if (!extra_.isMutable()) {
          extra_ = extra_.copy();
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return extra_;
      }
      public int getExtraCount() {
        return internalGetExtra().getMap().size();
      }
      /**
       * <pre>
       * Extra parameters for general-purpose usage
       * </pre>
       *
       * <code>map&lt;string, string&gt; extra = 7;</code>
       */
      @java.lang.Override
      public boolean containsExtra(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetExtra().getMap().containsKey(key);
      }
      /**
       * Use {@link #getExtraMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getExtra() {
        return getExtraMap();
      }
      /**
       * <pre>
       * Extra parameters for general-purpose usage
       * </pre>
       *
       * <code>map&lt;string, string&gt; extra = 7;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, java.lang.String> getExtraMap() {
        return internalGetExtra().getMap();
      }
      /**
       * <pre>
       * Extra parameters for general-purpose usage
       * </pre>
       *
       * <code>map&lt;string, string&gt; extra = 7;</code>
       */
      @java.lang.Override
      public /* nullable */
java.lang.String getExtraOrDefault(
          java.lang.String key,
          /* nullable */
java.lang.String defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetExtra().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Extra parameters for general-purpose usage
       * </pre>
       *
       * <code>map&lt;string, string&gt; extra = 7;</code>
       */
      @java.lang.Override
      public java.lang.String getExtraOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetExtra().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearExtra() {
        bitField0_ = (bitField0_ & ~0x00000040);
        internalGetMutableExtra().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Extra parameters for general-purpose usage
       * </pre>
       *
       * <code>map&lt;string, string&gt; extra = 7;</code>
       */
      public Builder removeExtra(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableExtra().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
          getMutableExtra() {
        bitField0_ |= 0x00000040;
        return internalGetMutableExtra().getMutableMap();
      }
      /**
       * <pre>
       * Extra parameters for general-purpose usage
       * </pre>
       *
       * <code>map&lt;string, string&gt; extra = 7;</code>
       */
      public Builder putExtra(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableExtra().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <pre>
       * Extra parameters for general-purpose usage
       * </pre>
       *
       * <code>map&lt;string, string&gt; extra = 7;</code>
       */
      public Builder putAllExtra(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableExtra().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000040;
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.QueryParams)
    }

    // @@protoc_insertion_point(class_scope:algebra.QueryParams)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<QueryParams>
        PARSER = new com.google.protobuf.AbstractParser<QueryParams>() {
      @java.lang.Override
      public QueryParams parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<QueryParams> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<QueryParams> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ScanOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.Scan)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.algebra.Scan.ScanOpt scan_opt = 1;</code>
     * @return The enum numeric value on the wire for scanOpt.
     */
    int getScanOptValue();
    /**
     * <code>.algebra.Scan.ScanOpt scan_opt = 1;</code>
     * @return The scanOpt.
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.ScanOpt getScanOpt();

    /**
     * <pre>
     * The alias of the item if it is a vertex or edge
     * </pre>
     *
     * <code>.common.NameOrId alias = 2;</code>
     * @return Whether the alias field is set.
     */
    boolean hasAlias();
    /**
     * <pre>
     * The alias of the item if it is a vertex or edge
     * </pre>
     *
     * <code>.common.NameOrId alias = 2;</code>
     * @return The alias.
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias();
    /**
     * <pre>
     * The alias of the item if it is a vertex or edge
     * </pre>
     *
     * <code>.common.NameOrId alias = 2;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder();

    /**
     * <pre>
     * The required parameters for the scan
     * </pre>
     *
     * <code>.algebra.QueryParams params = 3;</code>
     * @return Whether the params field is set.
     */
    boolean hasParams();
    /**
     * <pre>
     * The required parameters for the scan
     * </pre>
     *
     * <code>.algebra.QueryParams params = 3;</code>
     * @return The params.
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams getParams();
    /**
     * <pre>
     * The required parameters for the scan
     * </pre>
     *
     * <code>.algebra.QueryParams params = 3;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParamsOrBuilder getParamsOrBuilder();

    /**
     * <pre>
     * The optional filtering predicate for the field that have been indexed
     * </pre>
     *
     * <code>.algebra.IndexPredicate idx_predicate = 4;</code>
     * @return Whether the idxPredicate field is set.
     */
    boolean hasIdxPredicate();
    /**
     * <pre>
     * The optional filtering predicate for the field that have been indexed
     * </pre>
     *
     * <code>.algebra.IndexPredicate idx_predicate = 4;</code>
     * @return The idxPredicate.
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate getIdxPredicate();
    /**
     * <pre>
     * The optional filtering predicate for the field that have been indexed
     * </pre>
     *
     * <code>.algebra.IndexPredicate idx_predicate = 4;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicateOrBuilder getIdxPredicateOrBuilder();

    /**
     * <pre>
     * The flag that indicates SCAN + COUNT
     * </pre>
     *
     * <code>bool is_count_only = 5;</code>
     * @return The isCountOnly.
     */
    boolean getIsCountOnly();

    /**
     * <code>.algebra.MetaData meta_data = 6;</code>
     * @return Whether the metaData field is set.
     */
    boolean hasMetaData();
    /**
     * <code>.algebra.MetaData meta_data = 6;</code>
     * @return The metaData.
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData getMetaData();
    /**
     * <code>.algebra.MetaData meta_data = 6;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder getMetaDataOrBuilder();
  }
  /**
   * <pre>
   * Scan is an operator that transforms the source data format (defined by the database)
   * into internal data format (defined/used by runtime)
   * </pre>
   *
   * Protobuf type {@code algebra.Scan}
   */
  public static final class Scan extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.Scan)
      ScanOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Scan.newBuilder() to construct.
    private Scan(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Scan() {
      scanOpt_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Scan();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Scan_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Scan_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.Builder.class);
    }

    /**
     * Protobuf enum {@code algebra.Scan.ScanOpt}
     */
    public enum ScanOpt
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Scanning the vertices
       * </pre>
       *
       * <code>VERTEX = 0;</code>
       */
      VERTEX(0),
      /**
       * <pre>
       * Scanning the edges
       * </pre>
       *
       * <code>EDGE = 1;</code>
       */
      EDGE(1),
      /**
       * <pre>
       * Scanning a relational table
       * </pre>
       *
       * <code>TABLE = 2;</code>
       */
      TABLE(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Scanning the vertices
       * </pre>
       *
       * <code>VERTEX = 0;</code>
       */
      public static final int VERTEX_VALUE = 0;
      /**
       * <pre>
       * Scanning the edges
       * </pre>
       *
       * <code>EDGE = 1;</code>
       */
      public static final int EDGE_VALUE = 1;
      /**
       * <pre>
       * Scanning a relational table
       * </pre>
       *
       * <code>TABLE = 2;</code>
       */
      public static final int TABLE_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ScanOpt valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static ScanOpt forNumber(int value) {
        switch (value) {
          case 0: return VERTEX;
          case 1: return EDGE;
          case 2: return TABLE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ScanOpt>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ScanOpt> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ScanOpt>() {
              public ScanOpt findValueByNumber(int number) {
                return ScanOpt.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.getDescriptor().getEnumTypes().get(0);
      }

      private static final ScanOpt[] VALUES = values();

      public static ScanOpt valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ScanOpt(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:algebra.Scan.ScanOpt)
    }

    public static final int SCAN_OPT_FIELD_NUMBER = 1;
    private int scanOpt_ = 0;
    /**
     * <code>.algebra.Scan.ScanOpt scan_opt = 1;</code>
     * @return The enum numeric value on the wire for scanOpt.
     */
    @java.lang.Override public int getScanOptValue() {
      return scanOpt_;
    }
    /**
     * <code>.algebra.Scan.ScanOpt scan_opt = 1;</code>
     * @return The scanOpt.
     */
    @java.lang.Override public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.ScanOpt getScanOpt() {
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.ScanOpt result = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.ScanOpt.forNumber(scanOpt_);
      return result == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.ScanOpt.UNRECOGNIZED : result;
    }

    public static final int ALIAS_FIELD_NUMBER = 2;
    private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId alias_;
    /**
     * <pre>
     * The alias of the item if it is a vertex or edge
     * </pre>
     *
     * <code>.common.NameOrId alias = 2;</code>
     * @return Whether the alias field is set.
     */
    @java.lang.Override
    public boolean hasAlias() {
      return alias_ != null;
    }
    /**
     * <pre>
     * The alias of the item if it is a vertex or edge
     * </pre>
     *
     * <code>.common.NameOrId alias = 2;</code>
     * @return The alias.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias() {
      return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
    }
    /**
     * <pre>
     * The alias of the item if it is a vertex or edge
     * </pre>
     *
     * <code>.common.NameOrId alias = 2;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder() {
      return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
    }

    public static final int PARAMS_FIELD_NUMBER = 3;
    private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams params_;
    /**
     * <pre>
     * The required parameters for the scan
     * </pre>
     *
     * <code>.algebra.QueryParams params = 3;</code>
     * @return Whether the params field is set.
     */
    @java.lang.Override
    public boolean hasParams() {
      return params_ != null;
    }
    /**
     * <pre>
     * The required parameters for the scan
     * </pre>
     *
     * <code>.algebra.QueryParams params = 3;</code>
     * @return The params.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams getParams() {
      return params_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.getDefaultInstance() : params_;
    }
    /**
     * <pre>
     * The required parameters for the scan
     * </pre>
     *
     * <code>.algebra.QueryParams params = 3;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParamsOrBuilder getParamsOrBuilder() {
      return params_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.getDefaultInstance() : params_;
    }

    public static final int IDX_PREDICATE_FIELD_NUMBER = 4;
    private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate idxPredicate_;
    /**
     * <pre>
     * The optional filtering predicate for the field that have been indexed
     * </pre>
     *
     * <code>.algebra.IndexPredicate idx_predicate = 4;</code>
     * @return Whether the idxPredicate field is set.
     */
    @java.lang.Override
    public boolean hasIdxPredicate() {
      return idxPredicate_ != null;
    }
    /**
     * <pre>
     * The optional filtering predicate for the field that have been indexed
     * </pre>
     *
     * <code>.algebra.IndexPredicate idx_predicate = 4;</code>
     * @return The idxPredicate.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate getIdxPredicate() {
      return idxPredicate_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.getDefaultInstance() : idxPredicate_;
    }
    /**
     * <pre>
     * The optional filtering predicate for the field that have been indexed
     * </pre>
     *
     * <code>.algebra.IndexPredicate idx_predicate = 4;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicateOrBuilder getIdxPredicateOrBuilder() {
      return idxPredicate_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.getDefaultInstance() : idxPredicate_;
    }

    public static final int IS_COUNT_ONLY_FIELD_NUMBER = 5;
    private boolean isCountOnly_ = false;
    /**
     * <pre>
     * The flag that indicates SCAN + COUNT
     * </pre>
     *
     * <code>bool is_count_only = 5;</code>
     * @return The isCountOnly.
     */
    @java.lang.Override
    public boolean getIsCountOnly() {
      return isCountOnly_;
    }

    public static final int META_DATA_FIELD_NUMBER = 6;
    private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData metaData_;
    /**
     * <code>.algebra.MetaData meta_data = 6;</code>
     * @return Whether the metaData field is set.
     */
    @java.lang.Override
    public boolean hasMetaData() {
      return metaData_ != null;
    }
    /**
     * <code>.algebra.MetaData meta_data = 6;</code>
     * @return The metaData.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData getMetaData() {
      return metaData_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance() : metaData_;
    }
    /**
     * <code>.algebra.MetaData meta_data = 6;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder getMetaDataOrBuilder() {
      return metaData_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance() : metaData_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (scanOpt_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.ScanOpt.VERTEX.getNumber()) {
        output.writeEnum(1, scanOpt_);
      }
      if (alias_ != null) {
        output.writeMessage(2, getAlias());
      }
      if (params_ != null) {
        output.writeMessage(3, getParams());
      }
      if (idxPredicate_ != null) {
        output.writeMessage(4, getIdxPredicate());
      }
      if (isCountOnly_ != false) {
        output.writeBool(5, isCountOnly_);
      }
      if (metaData_ != null) {
        output.writeMessage(6, getMetaData());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (scanOpt_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.ScanOpt.VERTEX.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, scanOpt_);
      }
      if (alias_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAlias());
      }
      if (params_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getParams());
      }
      if (idxPredicate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getIdxPredicate());
      }
      if (isCountOnly_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, isCountOnly_);
      }
      if (metaData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getMetaData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan) obj;

      if (scanOpt_ != other.scanOpt_) return false;
      if (hasAlias() != other.hasAlias()) return false;
      if (hasAlias()) {
        if (!getAlias()
            .equals(other.getAlias())) return false;
      }
      if (hasParams() != other.hasParams()) return false;
      if (hasParams()) {
        if (!getParams()
            .equals(other.getParams())) return false;
      }
      if (hasIdxPredicate() != other.hasIdxPredicate()) return false;
      if (hasIdxPredicate()) {
        if (!getIdxPredicate()
            .equals(other.getIdxPredicate())) return false;
      }
      if (getIsCountOnly()
          != other.getIsCountOnly()) return false;
      if (hasMetaData() != other.hasMetaData()) return false;
      if (hasMetaData()) {
        if (!getMetaData()
            .equals(other.getMetaData())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SCAN_OPT_FIELD_NUMBER;
      hash = (53 * hash) + scanOpt_;
      if (hasAlias()) {
        hash = (37 * hash) + ALIAS_FIELD_NUMBER;
        hash = (53 * hash) + getAlias().hashCode();
      }
      if (hasParams()) {
        hash = (37 * hash) + PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getParams().hashCode();
      }
      if (hasIdxPredicate()) {
        hash = (37 * hash) + IDX_PREDICATE_FIELD_NUMBER;
        hash = (53 * hash) + getIdxPredicate().hashCode();
      }
      hash = (37 * hash) + IS_COUNT_ONLY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsCountOnly());
      if (hasMetaData()) {
        hash = (37 * hash) + META_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetaData().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Scan is an operator that transforms the source data format (defined by the database)
     * into internal data format (defined/used by runtime)
     * </pre>
     *
     * Protobuf type {@code algebra.Scan}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.Scan)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ScanOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Scan_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Scan_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        scanOpt_ = 0;
        alias_ = null;
        if (aliasBuilder_ != null) {
          aliasBuilder_.dispose();
          aliasBuilder_ = null;
        }
        params_ = null;
        if (paramsBuilder_ != null) {
          paramsBuilder_.dispose();
          paramsBuilder_ = null;
        }
        idxPredicate_ = null;
        if (idxPredicateBuilder_ != null) {
          idxPredicateBuilder_.dispose();
          idxPredicateBuilder_ = null;
        }
        isCountOnly_ = false;
        metaData_ = null;
        if (metaDataBuilder_ != null) {
          metaDataBuilder_.dispose();
          metaDataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Scan_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.scanOpt_ = scanOpt_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.alias_ = aliasBuilder_ == null
              ? alias_
              : aliasBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.params_ = paramsBuilder_ == null
              ? params_
              : paramsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.idxPredicate_ = idxPredicateBuilder_ == null
              ? idxPredicate_
              : idxPredicateBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.isCountOnly_ = isCountOnly_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.metaData_ = metaDataBuilder_ == null
              ? metaData_
              : metaDataBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.getDefaultInstance()) return this;
        if (other.scanOpt_ != 0) {
          setScanOptValue(other.getScanOptValue());
        }
        if (other.hasAlias()) {
          mergeAlias(other.getAlias());
        }
        if (other.hasParams()) {
          mergeParams(other.getParams());
        }
        if (other.hasIdxPredicate()) {
          mergeIdxPredicate(other.getIdxPredicate());
        }
        if (other.getIsCountOnly() != false) {
          setIsCountOnly(other.getIsCountOnly());
        }
        if (other.hasMetaData()) {
          mergeMetaData(other.getMetaData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                scanOpt_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getAliasFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getParamsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getIdxPredicateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 40: {
                isCountOnly_ = input.readBool();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 50: {
                input.readMessage(
                    getMetaDataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int scanOpt_ = 0;
      /**
       * <code>.algebra.Scan.ScanOpt scan_opt = 1;</code>
       * @return The enum numeric value on the wire for scanOpt.
       */
      @java.lang.Override public int getScanOptValue() {
        return scanOpt_;
      }
      /**
       * <code>.algebra.Scan.ScanOpt scan_opt = 1;</code>
       * @param value The enum numeric value on the wire for scanOpt to set.
       * @return This builder for chaining.
       */
      public Builder setScanOptValue(int value) {
        scanOpt_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.algebra.Scan.ScanOpt scan_opt = 1;</code>
       * @return The scanOpt.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.ScanOpt getScanOpt() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.ScanOpt result = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.ScanOpt.forNumber(scanOpt_);
        return result == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.ScanOpt.UNRECOGNIZED : result;
      }
      /**
       * <code>.algebra.Scan.ScanOpt scan_opt = 1;</code>
       * @param value The scanOpt to set.
       * @return This builder for chaining.
       */
      public Builder setScanOpt(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.ScanOpt value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        scanOpt_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.algebra.Scan.ScanOpt scan_opt = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearScanOpt() {
        bitField0_ = (bitField0_ & ~0x00000001);
        scanOpt_ = 0;
        onChanged();
        return this;
      }

      private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId alias_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> aliasBuilder_;
      /**
       * <pre>
       * The alias of the item if it is a vertex or edge
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       * @return Whether the alias field is set.
       */
      public boolean hasAlias() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The alias of the item if it is a vertex or edge
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       * @return The alias.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias() {
        if (aliasBuilder_ == null) {
          return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
        } else {
          return aliasBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The alias of the item if it is a vertex or edge
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       */
      public Builder setAlias(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (aliasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          alias_ = value;
        } else {
          aliasBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The alias of the item if it is a vertex or edge
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       */
      public Builder setAlias(
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
        if (aliasBuilder_ == null) {
          alias_ = builderForValue.build();
        } else {
          aliasBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The alias of the item if it is a vertex or edge
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       */
      public Builder mergeAlias(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (aliasBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            alias_ != null &&
            alias_ != com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance()) {
            getAliasBuilder().mergeFrom(value);
          } else {
            alias_ = value;
          }
        } else {
          aliasBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The alias of the item if it is a vertex or edge
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       */
      public Builder clearAlias() {
        bitField0_ = (bitField0_ & ~0x00000002);
        alias_ = null;
        if (aliasBuilder_ != null) {
          aliasBuilder_.dispose();
          aliasBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The alias of the item if it is a vertex or edge
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder getAliasBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getAliasFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The alias of the item if it is a vertex or edge
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder() {
        if (aliasBuilder_ != null) {
          return aliasBuilder_.getMessageOrBuilder();
        } else {
          return alias_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
        }
      }
      /**
       * <pre>
       * The alias of the item if it is a vertex or edge
       * </pre>
       *
       * <code>.common.NameOrId alias = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
          getAliasFieldBuilder() {
        if (aliasBuilder_ == null) {
          aliasBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder>(
                  getAlias(),
                  getParentForChildren(),
                  isClean());
          alias_ = null;
        }
        return aliasBuilder_;
      }

      private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams params_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParamsOrBuilder> paramsBuilder_;
      /**
       * <pre>
       * The required parameters for the scan
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       * @return Whether the params field is set.
       */
      public boolean hasParams() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The required parameters for the scan
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       * @return The params.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams getParams() {
        if (paramsBuilder_ == null) {
          return params_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.getDefaultInstance() : params_;
        } else {
          return paramsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The required parameters for the scan
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       */
      public Builder setParams(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams value) {
        if (paramsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          params_ = value;
        } else {
          paramsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The required parameters for the scan
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       */
      public Builder setParams(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.Builder builderForValue) {
        if (paramsBuilder_ == null) {
          params_ = builderForValue.build();
        } else {
          paramsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The required parameters for the scan
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       */
      public Builder mergeParams(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams value) {
        if (paramsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            params_ != null &&
            params_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.getDefaultInstance()) {
            getParamsBuilder().mergeFrom(value);
          } else {
            params_ = value;
          }
        } else {
          paramsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The required parameters for the scan
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       */
      public Builder clearParams() {
        bitField0_ = (bitField0_ & ~0x00000004);
        params_ = null;
        if (paramsBuilder_ != null) {
          paramsBuilder_.dispose();
          paramsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The required parameters for the scan
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.Builder getParamsBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getParamsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The required parameters for the scan
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParamsOrBuilder getParamsOrBuilder() {
        if (paramsBuilder_ != null) {
          return paramsBuilder_.getMessageOrBuilder();
        } else {
          return params_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.getDefaultInstance() : params_;
        }
      }
      /**
       * <pre>
       * The required parameters for the scan
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParamsOrBuilder> 
          getParamsFieldBuilder() {
        if (paramsBuilder_ == null) {
          paramsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParamsOrBuilder>(
                  getParams(),
                  getParentForChildren(),
                  isClean());
          params_ = null;
        }
        return paramsBuilder_;
      }

      private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate idxPredicate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicateOrBuilder> idxPredicateBuilder_;
      /**
       * <pre>
       * The optional filtering predicate for the field that have been indexed
       * </pre>
       *
       * <code>.algebra.IndexPredicate idx_predicate = 4;</code>
       * @return Whether the idxPredicate field is set.
       */
      public boolean hasIdxPredicate() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The optional filtering predicate for the field that have been indexed
       * </pre>
       *
       * <code>.algebra.IndexPredicate idx_predicate = 4;</code>
       * @return The idxPredicate.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate getIdxPredicate() {
        if (idxPredicateBuilder_ == null) {
          return idxPredicate_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.getDefaultInstance() : idxPredicate_;
        } else {
          return idxPredicateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The optional filtering predicate for the field that have been indexed
       * </pre>
       *
       * <code>.algebra.IndexPredicate idx_predicate = 4;</code>
       */
      public Builder setIdxPredicate(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate value) {
        if (idxPredicateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          idxPredicate_ = value;
        } else {
          idxPredicateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The optional filtering predicate for the field that have been indexed
       * </pre>
       *
       * <code>.algebra.IndexPredicate idx_predicate = 4;</code>
       */
      public Builder setIdxPredicate(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Builder builderForValue) {
        if (idxPredicateBuilder_ == null) {
          idxPredicate_ = builderForValue.build();
        } else {
          idxPredicateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The optional filtering predicate for the field that have been indexed
       * </pre>
       *
       * <code>.algebra.IndexPredicate idx_predicate = 4;</code>
       */
      public Builder mergeIdxPredicate(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate value) {
        if (idxPredicateBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            idxPredicate_ != null &&
            idxPredicate_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.getDefaultInstance()) {
            getIdxPredicateBuilder().mergeFrom(value);
          } else {
            idxPredicate_ = value;
          }
        } else {
          idxPredicateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The optional filtering predicate for the field that have been indexed
       * </pre>
       *
       * <code>.algebra.IndexPredicate idx_predicate = 4;</code>
       */
      public Builder clearIdxPredicate() {
        bitField0_ = (bitField0_ & ~0x00000008);
        idxPredicate_ = null;
        if (idxPredicateBuilder_ != null) {
          idxPredicateBuilder_.dispose();
          idxPredicateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The optional filtering predicate for the field that have been indexed
       * </pre>
       *
       * <code>.algebra.IndexPredicate idx_predicate = 4;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Builder getIdxPredicateBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getIdxPredicateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The optional filtering predicate for the field that have been indexed
       * </pre>
       *
       * <code>.algebra.IndexPredicate idx_predicate = 4;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicateOrBuilder getIdxPredicateOrBuilder() {
        if (idxPredicateBuilder_ != null) {
          return idxPredicateBuilder_.getMessageOrBuilder();
        } else {
          return idxPredicate_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.getDefaultInstance() : idxPredicate_;
        }
      }
      /**
       * <pre>
       * The optional filtering predicate for the field that have been indexed
       * </pre>
       *
       * <code>.algebra.IndexPredicate idx_predicate = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicateOrBuilder> 
          getIdxPredicateFieldBuilder() {
        if (idxPredicateBuilder_ == null) {
          idxPredicateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicate.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IndexPredicateOrBuilder>(
                  getIdxPredicate(),
                  getParentForChildren(),
                  isClean());
          idxPredicate_ = null;
        }
        return idxPredicateBuilder_;
      }

      private boolean isCountOnly_ ;
      /**
       * <pre>
       * The flag that indicates SCAN + COUNT
       * </pre>
       *
       * <code>bool is_count_only = 5;</code>
       * @return The isCountOnly.
       */
      @java.lang.Override
      public boolean getIsCountOnly() {
        return isCountOnly_;
      }
      /**
       * <pre>
       * The flag that indicates SCAN + COUNT
       * </pre>
       *
       * <code>bool is_count_only = 5;</code>
       * @param value The isCountOnly to set.
       * @return This builder for chaining.
       */
      public Builder setIsCountOnly(boolean value) {

        isCountOnly_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The flag that indicates SCAN + COUNT
       * </pre>
       *
       * <code>bool is_count_only = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsCountOnly() {
        bitField0_ = (bitField0_ & ~0x00000010);
        isCountOnly_ = false;
        onChanged();
        return this;
      }

      private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData metaData_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder> metaDataBuilder_;
      /**
       * <code>.algebra.MetaData meta_data = 6;</code>
       * @return Whether the metaData field is set.
       */
      public boolean hasMetaData() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>.algebra.MetaData meta_data = 6;</code>
       * @return The metaData.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData getMetaData() {
        if (metaDataBuilder_ == null) {
          return metaData_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance() : metaData_;
        } else {
          return metaDataBuilder_.getMessage();
        }
      }
      /**
       * <code>.algebra.MetaData meta_data = 6;</code>
       */
      public Builder setMetaData(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData value) {
        if (metaDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metaData_ = value;
        } else {
          metaDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>.algebra.MetaData meta_data = 6;</code>
       */
      public Builder setMetaData(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder builderForValue) {
        if (metaDataBuilder_ == null) {
          metaData_ = builderForValue.build();
        } else {
          metaDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>.algebra.MetaData meta_data = 6;</code>
       */
      public Builder mergeMetaData(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData value) {
        if (metaDataBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
            metaData_ != null &&
            metaData_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance()) {
            getMetaDataBuilder().mergeFrom(value);
          } else {
            metaData_ = value;
          }
        } else {
          metaDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>.algebra.MetaData meta_data = 6;</code>
       */
      public Builder clearMetaData() {
        bitField0_ = (bitField0_ & ~0x00000020);
        metaData_ = null;
        if (metaDataBuilder_ != null) {
          metaDataBuilder_.dispose();
          metaDataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.algebra.MetaData meta_data = 6;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder getMetaDataBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getMetaDataFieldBuilder().getBuilder();
      }
      /**
       * <code>.algebra.MetaData meta_data = 6;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder getMetaDataOrBuilder() {
        if (metaDataBuilder_ != null) {
          return metaDataBuilder_.getMessageOrBuilder();
        } else {
          return metaData_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance() : metaData_;
        }
      }
      /**
       * <code>.algebra.MetaData meta_data = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder> 
          getMetaDataFieldBuilder() {
        if (metaDataBuilder_ == null) {
          metaDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder>(
                  getMetaData(),
                  getParentForChildren(),
                  isClean());
          metaData_ = null;
        }
        return metaDataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.Scan)
    }

    // @@protoc_insertion_point(class_scope:algebra.Scan)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Scan>
        PARSER = new com.google.protobuf.AbstractParser<Scan>() {
      @java.lang.Override
      public Scan parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Scan> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Scan> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetVOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.GetV)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The tag that refers to the edge/path where the end vertex will be retrieved
     * </pre>
     *
     * <code>.common.NameOrId tag = 1;</code>
     * @return Whether the tag field is set.
     */
    boolean hasTag();
    /**
     * <pre>
     * The tag that refers to the edge/path where the end vertex will be retrieved
     * </pre>
     *
     * <code>.common.NameOrId tag = 1;</code>
     * @return The tag.
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getTag();
    /**
     * <pre>
     * The tag that refers to the edge/path where the end vertex will be retrieved
     * </pre>
     *
     * <code>.common.NameOrId tag = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getTagOrBuilder();

    /**
     * <pre>
     * Determine what vertex to get from the tagged object
     * </pre>
     *
     * <code>.algebra.GetV.VOpt opt = 2;</code>
     * @return The enum numeric value on the wire for opt.
     */
    int getOptValue();
    /**
     * <pre>
     * Determine what vertex to get from the tagged object
     * </pre>
     *
     * <code>.algebra.GetV.VOpt opt = 2;</code>
     * @return The opt.
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.VOpt getOpt();

    /**
     * <pre>
     * The query parameters of getting vertices
     * </pre>
     *
     * <code>.algebra.QueryParams params = 3;</code>
     * @return Whether the params field is set.
     */
    boolean hasParams();
    /**
     * <pre>
     * The query parameters of getting vertices
     * </pre>
     *
     * <code>.algebra.QueryParams params = 3;</code>
     * @return The params.
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams getParams();
    /**
     * <pre>
     * The query parameters of getting vertices
     * </pre>
     *
     * <code>.algebra.QueryParams params = 3;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParamsOrBuilder getParamsOrBuilder();

    /**
     * <pre>
     * The alias of this vertex
     * </pre>
     *
     * <code>.common.NameOrId alias = 4;</code>
     * @return Whether the alias field is set.
     */
    boolean hasAlias();
    /**
     * <pre>
     * The alias of this vertex
     * </pre>
     *
     * <code>.common.NameOrId alias = 4;</code>
     * @return The alias.
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias();
    /**
     * <pre>
     * The alias of this vertex
     * </pre>
     *
     * <code>.common.NameOrId alias = 4;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder();

    /**
     * <code>.algebra.MetaData meta_data = 5;</code>
     * @return Whether the metaData field is set.
     */
    boolean hasMetaData();
    /**
     * <code>.algebra.MetaData meta_data = 5;</code>
     * @return The metaData.
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData getMetaData();
    /**
     * <code>.algebra.MetaData meta_data = 5;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder getMetaDataOrBuilder();
  }
  /**
   * <pre>
   * It is typical to use the operator together with EdgeExpand or PathExpand, with the functionality of
   * obtaining some properties of the end vertex after the expansion.
   * </pre>
   *
   * Protobuf type {@code algebra.GetV}
   */
  public static final class GetV extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.GetV)
      GetVOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetV.newBuilder() to construct.
    private GetV(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetV() {
      opt_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetV();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_GetV_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_GetV_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.Builder.class);
    }

    /**
     * Protobuf enum {@code algebra.GetV.VOpt}
     */
    public enum VOpt
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Getting the start vertex of the edge/path
       * </pre>
       *
       * <code>START = 0;</code>
       */
      START(0),
      /**
       * <pre>
       * Getting the end vertex of the edge/path
       * </pre>
       *
       * <code>END = 1;</code>
       */
      END(1),
      /**
       * <pre>
       * Getting the other vertex of the edge/path. We are calibrating to Gremlin's bothE.otherV semantics
       * </pre>
       *
       * <code>OTHER = 2;</code>
       */
      OTHER(2),
      /**
       * <pre>
       * Getting both vertices of the edge/path
       * </pre>
       *
       * <code>BOTH = 3;</code>
       */
      BOTH(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Getting the start vertex of the edge/path
       * </pre>
       *
       * <code>START = 0;</code>
       */
      public static final int START_VALUE = 0;
      /**
       * <pre>
       * Getting the end vertex of the edge/path
       * </pre>
       *
       * <code>END = 1;</code>
       */
      public static final int END_VALUE = 1;
      /**
       * <pre>
       * Getting the other vertex of the edge/path. We are calibrating to Gremlin's bothE.otherV semantics
       * </pre>
       *
       * <code>OTHER = 2;</code>
       */
      public static final int OTHER_VALUE = 2;
      /**
       * <pre>
       * Getting both vertices of the edge/path
       * </pre>
       *
       * <code>BOTH = 3;</code>
       */
      public static final int BOTH_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static VOpt valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static VOpt forNumber(int value) {
        switch (value) {
          case 0: return START;
          case 1: return END;
          case 2: return OTHER;
          case 3: return BOTH;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<VOpt>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          VOpt> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<VOpt>() {
              public VOpt findValueByNumber(int number) {
                return VOpt.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.getDescriptor().getEnumTypes().get(0);
      }

      private static final VOpt[] VALUES = values();

      public static VOpt valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private VOpt(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:algebra.GetV.VOpt)
    }

    public static final int TAG_FIELD_NUMBER = 1;
    private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId tag_;
    /**
     * <pre>
     * The tag that refers to the edge/path where the end vertex will be retrieved
     * </pre>
     *
     * <code>.common.NameOrId tag = 1;</code>
     * @return Whether the tag field is set.
     */
    @java.lang.Override
    public boolean hasTag() {
      return tag_ != null;
    }
    /**
     * <pre>
     * The tag that refers to the edge/path where the end vertex will be retrieved
     * </pre>
     *
     * <code>.common.NameOrId tag = 1;</code>
     * @return The tag.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getTag() {
      return tag_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : tag_;
    }
    /**
     * <pre>
     * The tag that refers to the edge/path where the end vertex will be retrieved
     * </pre>
     *
     * <code>.common.NameOrId tag = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getTagOrBuilder() {
      return tag_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : tag_;
    }

    public static final int OPT_FIELD_NUMBER = 2;
    private int opt_ = 0;
    /**
     * <pre>
     * Determine what vertex to get from the tagged object
     * </pre>
     *
     * <code>.algebra.GetV.VOpt opt = 2;</code>
     * @return The enum numeric value on the wire for opt.
     */
    @java.lang.Override public int getOptValue() {
      return opt_;
    }
    /**
     * <pre>
     * Determine what vertex to get from the tagged object
     * </pre>
     *
     * <code>.algebra.GetV.VOpt opt = 2;</code>
     * @return The opt.
     */
    @java.lang.Override public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.VOpt getOpt() {
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.VOpt result = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.VOpt.forNumber(opt_);
      return result == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.VOpt.UNRECOGNIZED : result;
    }

    public static final int PARAMS_FIELD_NUMBER = 3;
    private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams params_;
    /**
     * <pre>
     * The query parameters of getting vertices
     * </pre>
     *
     * <code>.algebra.QueryParams params = 3;</code>
     * @return Whether the params field is set.
     */
    @java.lang.Override
    public boolean hasParams() {
      return params_ != null;
    }
    /**
     * <pre>
     * The query parameters of getting vertices
     * </pre>
     *
     * <code>.algebra.QueryParams params = 3;</code>
     * @return The params.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams getParams() {
      return params_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.getDefaultInstance() : params_;
    }
    /**
     * <pre>
     * The query parameters of getting vertices
     * </pre>
     *
     * <code>.algebra.QueryParams params = 3;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParamsOrBuilder getParamsOrBuilder() {
      return params_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.getDefaultInstance() : params_;
    }

    public static final int ALIAS_FIELD_NUMBER = 4;
    private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId alias_;
    /**
     * <pre>
     * The alias of this vertex
     * </pre>
     *
     * <code>.common.NameOrId alias = 4;</code>
     * @return Whether the alias field is set.
     */
    @java.lang.Override
    public boolean hasAlias() {
      return alias_ != null;
    }
    /**
     * <pre>
     * The alias of this vertex
     * </pre>
     *
     * <code>.common.NameOrId alias = 4;</code>
     * @return The alias.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias() {
      return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
    }
    /**
     * <pre>
     * The alias of this vertex
     * </pre>
     *
     * <code>.common.NameOrId alias = 4;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder() {
      return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
    }

    public static final int META_DATA_FIELD_NUMBER = 5;
    private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData metaData_;
    /**
     * <code>.algebra.MetaData meta_data = 5;</code>
     * @return Whether the metaData field is set.
     */
    @java.lang.Override
    public boolean hasMetaData() {
      return metaData_ != null;
    }
    /**
     * <code>.algebra.MetaData meta_data = 5;</code>
     * @return The metaData.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData getMetaData() {
      return metaData_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance() : metaData_;
    }
    /**
     * <code>.algebra.MetaData meta_data = 5;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder getMetaDataOrBuilder() {
      return metaData_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance() : metaData_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (tag_ != null) {
        output.writeMessage(1, getTag());
      }
      if (opt_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.VOpt.START.getNumber()) {
        output.writeEnum(2, opt_);
      }
      if (params_ != null) {
        output.writeMessage(3, getParams());
      }
      if (alias_ != null) {
        output.writeMessage(4, getAlias());
      }
      if (metaData_ != null) {
        output.writeMessage(5, getMetaData());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (tag_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTag());
      }
      if (opt_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.VOpt.START.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, opt_);
      }
      if (params_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getParams());
      }
      if (alias_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getAlias());
      }
      if (metaData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getMetaData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV) obj;

      if (hasTag() != other.hasTag()) return false;
      if (hasTag()) {
        if (!getTag()
            .equals(other.getTag())) return false;
      }
      if (opt_ != other.opt_) return false;
      if (hasParams() != other.hasParams()) return false;
      if (hasParams()) {
        if (!getParams()
            .equals(other.getParams())) return false;
      }
      if (hasAlias() != other.hasAlias()) return false;
      if (hasAlias()) {
        if (!getAlias()
            .equals(other.getAlias())) return false;
      }
      if (hasMetaData() != other.hasMetaData()) return false;
      if (hasMetaData()) {
        if (!getMetaData()
            .equals(other.getMetaData())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTag()) {
        hash = (37 * hash) + TAG_FIELD_NUMBER;
        hash = (53 * hash) + getTag().hashCode();
      }
      hash = (37 * hash) + OPT_FIELD_NUMBER;
      hash = (53 * hash) + opt_;
      if (hasParams()) {
        hash = (37 * hash) + PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getParams().hashCode();
      }
      if (hasAlias()) {
        hash = (37 * hash) + ALIAS_FIELD_NUMBER;
        hash = (53 * hash) + getAlias().hashCode();
      }
      if (hasMetaData()) {
        hash = (37 * hash) + META_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetaData().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * It is typical to use the operator together with EdgeExpand or PathExpand, with the functionality of
     * obtaining some properties of the end vertex after the expansion.
     * </pre>
     *
     * Protobuf type {@code algebra.GetV}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.GetV)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetVOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_GetV_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_GetV_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        tag_ = null;
        if (tagBuilder_ != null) {
          tagBuilder_.dispose();
          tagBuilder_ = null;
        }
        opt_ = 0;
        params_ = null;
        if (paramsBuilder_ != null) {
          paramsBuilder_.dispose();
          paramsBuilder_ = null;
        }
        alias_ = null;
        if (aliasBuilder_ != null) {
          aliasBuilder_.dispose();
          aliasBuilder_ = null;
        }
        metaData_ = null;
        if (metaDataBuilder_ != null) {
          metaDataBuilder_.dispose();
          metaDataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_GetV_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.tag_ = tagBuilder_ == null
              ? tag_
              : tagBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.opt_ = opt_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.params_ = paramsBuilder_ == null
              ? params_
              : paramsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.alias_ = aliasBuilder_ == null
              ? alias_
              : aliasBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.metaData_ = metaDataBuilder_ == null
              ? metaData_
              : metaDataBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.getDefaultInstance()) return this;
        if (other.hasTag()) {
          mergeTag(other.getTag());
        }
        if (other.opt_ != 0) {
          setOptValue(other.getOptValue());
        }
        if (other.hasParams()) {
          mergeParams(other.getParams());
        }
        if (other.hasAlias()) {
          mergeAlias(other.getAlias());
        }
        if (other.hasMetaData()) {
          mergeMetaData(other.getMetaData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getTagFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                opt_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                input.readMessage(
                    getParamsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getAliasFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getMetaDataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId tag_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> tagBuilder_;
      /**
       * <pre>
       * The tag that refers to the edge/path where the end vertex will be retrieved
       * </pre>
       *
       * <code>.common.NameOrId tag = 1;</code>
       * @return Whether the tag field is set.
       */
      public boolean hasTag() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The tag that refers to the edge/path where the end vertex will be retrieved
       * </pre>
       *
       * <code>.common.NameOrId tag = 1;</code>
       * @return The tag.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getTag() {
        if (tagBuilder_ == null) {
          return tag_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : tag_;
        } else {
          return tagBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The tag that refers to the edge/path where the end vertex will be retrieved
       * </pre>
       *
       * <code>.common.NameOrId tag = 1;</code>
       */
      public Builder setTag(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (tagBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tag_ = value;
        } else {
          tagBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The tag that refers to the edge/path where the end vertex will be retrieved
       * </pre>
       *
       * <code>.common.NameOrId tag = 1;</code>
       */
      public Builder setTag(
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
        if (tagBuilder_ == null) {
          tag_ = builderForValue.build();
        } else {
          tagBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The tag that refers to the edge/path where the end vertex will be retrieved
       * </pre>
       *
       * <code>.common.NameOrId tag = 1;</code>
       */
      public Builder mergeTag(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (tagBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            tag_ != null &&
            tag_ != com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance()) {
            getTagBuilder().mergeFrom(value);
          } else {
            tag_ = value;
          }
        } else {
          tagBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The tag that refers to the edge/path where the end vertex will be retrieved
       * </pre>
       *
       * <code>.common.NameOrId tag = 1;</code>
       */
      public Builder clearTag() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tag_ = null;
        if (tagBuilder_ != null) {
          tagBuilder_.dispose();
          tagBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The tag that refers to the edge/path where the end vertex will be retrieved
       * </pre>
       *
       * <code>.common.NameOrId tag = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder getTagBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTagFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The tag that refers to the edge/path where the end vertex will be retrieved
       * </pre>
       *
       * <code>.common.NameOrId tag = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getTagOrBuilder() {
        if (tagBuilder_ != null) {
          return tagBuilder_.getMessageOrBuilder();
        } else {
          return tag_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : tag_;
        }
      }
      /**
       * <pre>
       * The tag that refers to the edge/path where the end vertex will be retrieved
       * </pre>
       *
       * <code>.common.NameOrId tag = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
          getTagFieldBuilder() {
        if (tagBuilder_ == null) {
          tagBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder>(
                  getTag(),
                  getParentForChildren(),
                  isClean());
          tag_ = null;
        }
        return tagBuilder_;
      }

      private int opt_ = 0;
      /**
       * <pre>
       * Determine what vertex to get from the tagged object
       * </pre>
       *
       * <code>.algebra.GetV.VOpt opt = 2;</code>
       * @return The enum numeric value on the wire for opt.
       */
      @java.lang.Override public int getOptValue() {
        return opt_;
      }
      /**
       * <pre>
       * Determine what vertex to get from the tagged object
       * </pre>
       *
       * <code>.algebra.GetV.VOpt opt = 2;</code>
       * @param value The enum numeric value on the wire for opt to set.
       * @return This builder for chaining.
       */
      public Builder setOptValue(int value) {
        opt_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Determine what vertex to get from the tagged object
       * </pre>
       *
       * <code>.algebra.GetV.VOpt opt = 2;</code>
       * @return The opt.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.VOpt getOpt() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.VOpt result = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.VOpt.forNumber(opt_);
        return result == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.VOpt.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Determine what vertex to get from the tagged object
       * </pre>
       *
       * <code>.algebra.GetV.VOpt opt = 2;</code>
       * @param value The opt to set.
       * @return This builder for chaining.
       */
      public Builder setOpt(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.VOpt value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        opt_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Determine what vertex to get from the tagged object
       * </pre>
       *
       * <code>.algebra.GetV.VOpt opt = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearOpt() {
        bitField0_ = (bitField0_ & ~0x00000002);
        opt_ = 0;
        onChanged();
        return this;
      }

      private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams params_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParamsOrBuilder> paramsBuilder_;
      /**
       * <pre>
       * The query parameters of getting vertices
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       * @return Whether the params field is set.
       */
      public boolean hasParams() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The query parameters of getting vertices
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       * @return The params.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams getParams() {
        if (paramsBuilder_ == null) {
          return params_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.getDefaultInstance() : params_;
        } else {
          return paramsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The query parameters of getting vertices
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       */
      public Builder setParams(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams value) {
        if (paramsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          params_ = value;
        } else {
          paramsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The query parameters of getting vertices
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       */
      public Builder setParams(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.Builder builderForValue) {
        if (paramsBuilder_ == null) {
          params_ = builderForValue.build();
        } else {
          paramsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The query parameters of getting vertices
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       */
      public Builder mergeParams(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams value) {
        if (paramsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            params_ != null &&
            params_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.getDefaultInstance()) {
            getParamsBuilder().mergeFrom(value);
          } else {
            params_ = value;
          }
        } else {
          paramsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The query parameters of getting vertices
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       */
      public Builder clearParams() {
        bitField0_ = (bitField0_ & ~0x00000004);
        params_ = null;
        if (paramsBuilder_ != null) {
          paramsBuilder_.dispose();
          paramsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The query parameters of getting vertices
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.Builder getParamsBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getParamsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The query parameters of getting vertices
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParamsOrBuilder getParamsOrBuilder() {
        if (paramsBuilder_ != null) {
          return paramsBuilder_.getMessageOrBuilder();
        } else {
          return params_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.getDefaultInstance() : params_;
        }
      }
      /**
       * <pre>
       * The query parameters of getting vertices
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParamsOrBuilder> 
          getParamsFieldBuilder() {
        if (paramsBuilder_ == null) {
          paramsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParamsOrBuilder>(
                  getParams(),
                  getParentForChildren(),
                  isClean());
          params_ = null;
        }
        return paramsBuilder_;
      }

      private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId alias_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> aliasBuilder_;
      /**
       * <pre>
       * The alias of this vertex
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       * @return Whether the alias field is set.
       */
      public boolean hasAlias() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The alias of this vertex
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       * @return The alias.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias() {
        if (aliasBuilder_ == null) {
          return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
        } else {
          return aliasBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The alias of this vertex
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       */
      public Builder setAlias(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (aliasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          alias_ = value;
        } else {
          aliasBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The alias of this vertex
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       */
      public Builder setAlias(
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
        if (aliasBuilder_ == null) {
          alias_ = builderForValue.build();
        } else {
          aliasBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The alias of this vertex
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       */
      public Builder mergeAlias(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (aliasBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            alias_ != null &&
            alias_ != com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance()) {
            getAliasBuilder().mergeFrom(value);
          } else {
            alias_ = value;
          }
        } else {
          aliasBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The alias of this vertex
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       */
      public Builder clearAlias() {
        bitField0_ = (bitField0_ & ~0x00000008);
        alias_ = null;
        if (aliasBuilder_ != null) {
          aliasBuilder_.dispose();
          aliasBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The alias of this vertex
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder getAliasBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getAliasFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The alias of this vertex
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder() {
        if (aliasBuilder_ != null) {
          return aliasBuilder_.getMessageOrBuilder();
        } else {
          return alias_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
        }
      }
      /**
       * <pre>
       * The alias of this vertex
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
          getAliasFieldBuilder() {
        if (aliasBuilder_ == null) {
          aliasBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder>(
                  getAlias(),
                  getParentForChildren(),
                  isClean());
          alias_ = null;
        }
        return aliasBuilder_;
      }

      private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData metaData_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder> metaDataBuilder_;
      /**
       * <code>.algebra.MetaData meta_data = 5;</code>
       * @return Whether the metaData field is set.
       */
      public boolean hasMetaData() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>.algebra.MetaData meta_data = 5;</code>
       * @return The metaData.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData getMetaData() {
        if (metaDataBuilder_ == null) {
          return metaData_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance() : metaData_;
        } else {
          return metaDataBuilder_.getMessage();
        }
      }
      /**
       * <code>.algebra.MetaData meta_data = 5;</code>
       */
      public Builder setMetaData(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData value) {
        if (metaDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metaData_ = value;
        } else {
          metaDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>.algebra.MetaData meta_data = 5;</code>
       */
      public Builder setMetaData(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder builderForValue) {
        if (metaDataBuilder_ == null) {
          metaData_ = builderForValue.build();
        } else {
          metaDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>.algebra.MetaData meta_data = 5;</code>
       */
      public Builder mergeMetaData(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData value) {
        if (metaDataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            metaData_ != null &&
            metaData_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance()) {
            getMetaDataBuilder().mergeFrom(value);
          } else {
            metaData_ = value;
          }
        } else {
          metaDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>.algebra.MetaData meta_data = 5;</code>
       */
      public Builder clearMetaData() {
        bitField0_ = (bitField0_ & ~0x00000010);
        metaData_ = null;
        if (metaDataBuilder_ != null) {
          metaDataBuilder_.dispose();
          metaDataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.algebra.MetaData meta_data = 5;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder getMetaDataBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getMetaDataFieldBuilder().getBuilder();
      }
      /**
       * <code>.algebra.MetaData meta_data = 5;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder getMetaDataOrBuilder() {
        if (metaDataBuilder_ != null) {
          return metaDataBuilder_.getMessageOrBuilder();
        } else {
          return metaData_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance() : metaData_;
        }
      }
      /**
       * <code>.algebra.MetaData meta_data = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder> 
          getMetaDataFieldBuilder() {
        if (metaDataBuilder_ == null) {
          metaDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder>(
                  getMetaData(),
                  getParentForChildren(),
                  isClean());
          metaData_ = null;
        }
        return metaDataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.GetV)
    }

    // @@protoc_insertion_point(class_scope:algebra.GetV)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetV>
        PARSER = new com.google.protobuf.AbstractParser<GetV>() {
      @java.lang.Override
      public GetV parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GetV> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetV> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.As)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The alias to give if any, this is especially helpful when the entity now refers to the head of the record
     * </pre>
     *
     * <code>.common.NameOrId alias = 1;</code>
     * @return Whether the alias field is set.
     */
    boolean hasAlias();
    /**
     * <pre>
     * The alias to give if any, this is especially helpful when the entity now refers to the head of the record
     * </pre>
     *
     * <code>.common.NameOrId alias = 1;</code>
     * @return The alias.
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias();
    /**
     * <pre>
     * The alias to give if any, this is especially helpful when the entity now refers to the head of the record
     * </pre>
     *
     * <code>.common.NameOrId alias = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder();
  }
  /**
   * <pre>
   * To tag the current data with an alias
   * </pre>
   *
   * Protobuf type {@code algebra.As}
   */
  public static final class As extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.As)
      AsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use As.newBuilder() to construct.
    private As(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private As() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new As();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_As_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_As_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As.Builder.class);
    }

    public static final int ALIAS_FIELD_NUMBER = 1;
    private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId alias_;
    /**
     * <pre>
     * The alias to give if any, this is especially helpful when the entity now refers to the head of the record
     * </pre>
     *
     * <code>.common.NameOrId alias = 1;</code>
     * @return Whether the alias field is set.
     */
    @java.lang.Override
    public boolean hasAlias() {
      return alias_ != null;
    }
    /**
     * <pre>
     * The alias to give if any, this is especially helpful when the entity now refers to the head of the record
     * </pre>
     *
     * <code>.common.NameOrId alias = 1;</code>
     * @return The alias.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias() {
      return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
    }
    /**
     * <pre>
     * The alias to give if any, this is especially helpful when the entity now refers to the head of the record
     * </pre>
     *
     * <code>.common.NameOrId alias = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder() {
      return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (alias_ != null) {
        output.writeMessage(1, getAlias());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (alias_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAlias());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As) obj;

      if (hasAlias() != other.hasAlias()) return false;
      if (hasAlias()) {
        if (!getAlias()
            .equals(other.getAlias())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAlias()) {
        hash = (37 * hash) + ALIAS_FIELD_NUMBER;
        hash = (53 * hash) + getAlias().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * To tag the current data with an alias
     * </pre>
     *
     * Protobuf type {@code algebra.As}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.As)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.AsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_As_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_As_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        alias_ = null;
        if (aliasBuilder_ != null) {
          aliasBuilder_.dispose();
          aliasBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_As_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.alias_ = aliasBuilder_ == null
              ? alias_
              : aliasBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As.getDefaultInstance()) return this;
        if (other.hasAlias()) {
          mergeAlias(other.getAlias());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getAliasFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId alias_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> aliasBuilder_;
      /**
       * <pre>
       * The alias to give if any, this is especially helpful when the entity now refers to the head of the record
       * </pre>
       *
       * <code>.common.NameOrId alias = 1;</code>
       * @return Whether the alias field is set.
       */
      public boolean hasAlias() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The alias to give if any, this is especially helpful when the entity now refers to the head of the record
       * </pre>
       *
       * <code>.common.NameOrId alias = 1;</code>
       * @return The alias.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias() {
        if (aliasBuilder_ == null) {
          return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
        } else {
          return aliasBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The alias to give if any, this is especially helpful when the entity now refers to the head of the record
       * </pre>
       *
       * <code>.common.NameOrId alias = 1;</code>
       */
      public Builder setAlias(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (aliasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          alias_ = value;
        } else {
          aliasBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The alias to give if any, this is especially helpful when the entity now refers to the head of the record
       * </pre>
       *
       * <code>.common.NameOrId alias = 1;</code>
       */
      public Builder setAlias(
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
        if (aliasBuilder_ == null) {
          alias_ = builderForValue.build();
        } else {
          aliasBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The alias to give if any, this is especially helpful when the entity now refers to the head of the record
       * </pre>
       *
       * <code>.common.NameOrId alias = 1;</code>
       */
      public Builder mergeAlias(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (aliasBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            alias_ != null &&
            alias_ != com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance()) {
            getAliasBuilder().mergeFrom(value);
          } else {
            alias_ = value;
          }
        } else {
          aliasBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The alias to give if any, this is especially helpful when the entity now refers to the head of the record
       * </pre>
       *
       * <code>.common.NameOrId alias = 1;</code>
       */
      public Builder clearAlias() {
        bitField0_ = (bitField0_ & ~0x00000001);
        alias_ = null;
        if (aliasBuilder_ != null) {
          aliasBuilder_.dispose();
          aliasBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The alias to give if any, this is especially helpful when the entity now refers to the head of the record
       * </pre>
       *
       * <code>.common.NameOrId alias = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder getAliasBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getAliasFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The alias to give if any, this is especially helpful when the entity now refers to the head of the record
       * </pre>
       *
       * <code>.common.NameOrId alias = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder() {
        if (aliasBuilder_ != null) {
          return aliasBuilder_.getMessageOrBuilder();
        } else {
          return alias_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
        }
      }
      /**
       * <pre>
       * The alias to give if any, this is especially helpful when the entity now refers to the head of the record
       * </pre>
       *
       * <code>.common.NameOrId alias = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
          getAliasFieldBuilder() {
        if (aliasBuilder_ == null) {
          aliasBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder>(
                  getAlias(),
                  getParentForChildren(),
                  isClean());
          alias_ = null;
        }
        return aliasBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.As)
    }

    // @@protoc_insertion_point(class_scope:algebra.As)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<As>
        PARSER = new com.google.protobuf.AbstractParser<As>() {
      @java.lang.Override
      public As parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<As> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<As> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EdgeExpandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.EdgeExpand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The tag that refers to the starting vertex
     * </pre>
     *
     * <code>.common.NameOrId v_tag = 1;</code>
     * @return Whether the vTag field is set.
     */
    boolean hasVTag();
    /**
     * <pre>
     * The tag that refers to the starting vertex
     * </pre>
     *
     * <code>.common.NameOrId v_tag = 1;</code>
     * @return The vTag.
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getVTag();
    /**
     * <pre>
     * The tag that refers to the starting vertex
     * </pre>
     *
     * <code>.common.NameOrId v_tag = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getVTagOrBuilder();

    /**
     * <pre>
     * The direction of the expanded edge
     * </pre>
     *
     * <code>.algebra.EdgeExpand.Direction direction = 2;</code>
     * @return The enum numeric value on the wire for direction.
     */
    int getDirectionValue();
    /**
     * <pre>
     * The direction of the expanded edge
     * </pre>
     *
     * <code>.algebra.EdgeExpand.Direction direction = 2;</code>
     * @return The direction.
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Direction getDirection();

    /**
     * <pre>
     * The query parameters define the condition that the edge/end vertex must satisfy.
     * Note that whether the query parameters apply to the edge or end vertex depends on
     * the `is_edge` indicator, with one exception that the `tables` parameter in `EdgeExpand`
     * **always** applies to the edge for now (may be fixed later) .
     * </pre>
     *
     * <code>.algebra.QueryParams params = 3;</code>
     * @return Whether the params field is set.
     */
    boolean hasParams();
    /**
     * <pre>
     * The query parameters define the condition that the edge/end vertex must satisfy.
     * Note that whether the query parameters apply to the edge or end vertex depends on
     * the `is_edge` indicator, with one exception that the `tables` parameter in `EdgeExpand`
     * **always** applies to the edge for now (may be fixed later) .
     * </pre>
     *
     * <code>.algebra.QueryParams params = 3;</code>
     * @return The params.
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams getParams();
    /**
     * <pre>
     * The query parameters define the condition that the edge/end vertex must satisfy.
     * Note that whether the query parameters apply to the edge or end vertex depends on
     * the `is_edge` indicator, with one exception that the `tables` parameter in `EdgeExpand`
     * **always** applies to the edge for now (may be fixed later) .
     * </pre>
     *
     * <code>.algebra.QueryParams params = 3;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParamsOrBuilder getParamsOrBuilder();

    /**
     * <pre>
     * An optional alias for the object of the expansion
     * </pre>
     *
     * <code>.common.NameOrId alias = 4;</code>
     * @return Whether the alias field is set.
     */
    boolean hasAlias();
    /**
     * <pre>
     * An optional alias for the object of the expansion
     * </pre>
     *
     * <code>.common.NameOrId alias = 4;</code>
     * @return The alias.
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias();
    /**
     * <pre>
     * An optional alias for the object of the expansion
     * </pre>
     *
     * <code>.common.NameOrId alias = 4;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder();

    /**
     * <pre>
     * Expand option, i.e., expand vertices/edges/degree.
     * </pre>
     *
     * <code>.algebra.EdgeExpand.ExpandOpt expand_opt = 5;</code>
     * @return The enum numeric value on the wire for expandOpt.
     */
    int getExpandOptValue();
    /**
     * <pre>
     * Expand option, i.e., expand vertices/edges/degree.
     * </pre>
     *
     * <code>.algebra.EdgeExpand.ExpandOpt expand_opt = 5;</code>
     * @return The expandOpt.
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.ExpandOpt getExpandOpt();

    /**
     * <code>.algebra.MetaData meta_data = 6;</code>
     * @return Whether the metaData field is set.
     */
    boolean hasMetaData();
    /**
     * <code>.algebra.MetaData meta_data = 6;</code>
     * @return The metaData.
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData getMetaData();
    /**
     * <code>.algebra.MetaData meta_data = 6;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder getMetaDataOrBuilder();
  }
  /**
   * Protobuf type {@code algebra.EdgeExpand}
   */
  public static final class EdgeExpand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.EdgeExpand)
      EdgeExpandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EdgeExpand.newBuilder() to construct.
    private EdgeExpand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EdgeExpand() {
      direction_ = 0;
      expandOpt_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EdgeExpand();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_EdgeExpand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_EdgeExpand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Builder.class);
    }

    /**
     * Protobuf enum {@code algebra.EdgeExpand.Direction}
     */
    public enum Direction
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>OUT = 0;</code>
       */
      OUT(0),
      /**
       * <code>IN = 1;</code>
       */
      IN(1),
      /**
       * <code>BOTH = 2;</code>
       */
      BOTH(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>OUT = 0;</code>
       */
      public static final int OUT_VALUE = 0;
      /**
       * <code>IN = 1;</code>
       */
      public static final int IN_VALUE = 1;
      /**
       * <code>BOTH = 2;</code>
       */
      public static final int BOTH_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Direction valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Direction forNumber(int value) {
        switch (value) {
          case 0: return OUT;
          case 1: return IN;
          case 2: return BOTH;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Direction>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Direction> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Direction>() {
              public Direction findValueByNumber(int number) {
                return Direction.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.getDescriptor().getEnumTypes().get(0);
      }

      private static final Direction[] VALUES = values();

      public static Direction valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Direction(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:algebra.EdgeExpand.Direction)
    }

    /**
     * Protobuf enum {@code algebra.EdgeExpand.ExpandOpt}
     */
    public enum ExpandOpt
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>VERTEX = 0;</code>
       */
      VERTEX(0),
      /**
       * <code>EDGE = 1;</code>
       */
      EDGE(1),
      /**
       * <code>DEGREE = 2;</code>
       */
      DEGREE(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>VERTEX = 0;</code>
       */
      public static final int VERTEX_VALUE = 0;
      /**
       * <code>EDGE = 1;</code>
       */
      public static final int EDGE_VALUE = 1;
      /**
       * <code>DEGREE = 2;</code>
       */
      public static final int DEGREE_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ExpandOpt valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static ExpandOpt forNumber(int value) {
        switch (value) {
          case 0: return VERTEX;
          case 1: return EDGE;
          case 2: return DEGREE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ExpandOpt>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ExpandOpt> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ExpandOpt>() {
              public ExpandOpt findValueByNumber(int number) {
                return ExpandOpt.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.getDescriptor().getEnumTypes().get(1);
      }

      private static final ExpandOpt[] VALUES = values();

      public static ExpandOpt valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ExpandOpt(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:algebra.EdgeExpand.ExpandOpt)
    }

    public static final int V_TAG_FIELD_NUMBER = 1;
    private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId vTag_;
    /**
     * <pre>
     * The tag that refers to the starting vertex
     * </pre>
     *
     * <code>.common.NameOrId v_tag = 1;</code>
     * @return Whether the vTag field is set.
     */
    @java.lang.Override
    public boolean hasVTag() {
      return vTag_ != null;
    }
    /**
     * <pre>
     * The tag that refers to the starting vertex
     * </pre>
     *
     * <code>.common.NameOrId v_tag = 1;</code>
     * @return The vTag.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getVTag() {
      return vTag_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : vTag_;
    }
    /**
     * <pre>
     * The tag that refers to the starting vertex
     * </pre>
     *
     * <code>.common.NameOrId v_tag = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getVTagOrBuilder() {
      return vTag_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : vTag_;
    }

    public static final int DIRECTION_FIELD_NUMBER = 2;
    private int direction_ = 0;
    /**
     * <pre>
     * The direction of the expanded edge
     * </pre>
     *
     * <code>.algebra.EdgeExpand.Direction direction = 2;</code>
     * @return The enum numeric value on the wire for direction.
     */
    @java.lang.Override public int getDirectionValue() {
      return direction_;
    }
    /**
     * <pre>
     * The direction of the expanded edge
     * </pre>
     *
     * <code>.algebra.EdgeExpand.Direction direction = 2;</code>
     * @return The direction.
     */
    @java.lang.Override public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Direction getDirection() {
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Direction result = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Direction.forNumber(direction_);
      return result == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Direction.UNRECOGNIZED : result;
    }

    public static final int PARAMS_FIELD_NUMBER = 3;
    private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams params_;
    /**
     * <pre>
     * The query parameters define the condition that the edge/end vertex must satisfy.
     * Note that whether the query parameters apply to the edge or end vertex depends on
     * the `is_edge` indicator, with one exception that the `tables` parameter in `EdgeExpand`
     * **always** applies to the edge for now (may be fixed later) .
     * </pre>
     *
     * <code>.algebra.QueryParams params = 3;</code>
     * @return Whether the params field is set.
     */
    @java.lang.Override
    public boolean hasParams() {
      return params_ != null;
    }
    /**
     * <pre>
     * The query parameters define the condition that the edge/end vertex must satisfy.
     * Note that whether the query parameters apply to the edge or end vertex depends on
     * the `is_edge` indicator, with one exception that the `tables` parameter in `EdgeExpand`
     * **always** applies to the edge for now (may be fixed later) .
     * </pre>
     *
     * <code>.algebra.QueryParams params = 3;</code>
     * @return The params.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams getParams() {
      return params_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.getDefaultInstance() : params_;
    }
    /**
     * <pre>
     * The query parameters define the condition that the edge/end vertex must satisfy.
     * Note that whether the query parameters apply to the edge or end vertex depends on
     * the `is_edge` indicator, with one exception that the `tables` parameter in `EdgeExpand`
     * **always** applies to the edge for now (may be fixed later) .
     * </pre>
     *
     * <code>.algebra.QueryParams params = 3;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParamsOrBuilder getParamsOrBuilder() {
      return params_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.getDefaultInstance() : params_;
    }

    public static final int ALIAS_FIELD_NUMBER = 4;
    private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId alias_;
    /**
     * <pre>
     * An optional alias for the object of the expansion
     * </pre>
     *
     * <code>.common.NameOrId alias = 4;</code>
     * @return Whether the alias field is set.
     */
    @java.lang.Override
    public boolean hasAlias() {
      return alias_ != null;
    }
    /**
     * <pre>
     * An optional alias for the object of the expansion
     * </pre>
     *
     * <code>.common.NameOrId alias = 4;</code>
     * @return The alias.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias() {
      return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
    }
    /**
     * <pre>
     * An optional alias for the object of the expansion
     * </pre>
     *
     * <code>.common.NameOrId alias = 4;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder() {
      return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
    }

    public static final int EXPAND_OPT_FIELD_NUMBER = 5;
    private int expandOpt_ = 0;
    /**
     * <pre>
     * Expand option, i.e., expand vertices/edges/degree.
     * </pre>
     *
     * <code>.algebra.EdgeExpand.ExpandOpt expand_opt = 5;</code>
     * @return The enum numeric value on the wire for expandOpt.
     */
    @java.lang.Override public int getExpandOptValue() {
      return expandOpt_;
    }
    /**
     * <pre>
     * Expand option, i.e., expand vertices/edges/degree.
     * </pre>
     *
     * <code>.algebra.EdgeExpand.ExpandOpt expand_opt = 5;</code>
     * @return The expandOpt.
     */
    @java.lang.Override public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.ExpandOpt getExpandOpt() {
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.ExpandOpt result = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.ExpandOpt.forNumber(expandOpt_);
      return result == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.ExpandOpt.UNRECOGNIZED : result;
    }

    public static final int META_DATA_FIELD_NUMBER = 6;
    private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData metaData_;
    /**
     * <code>.algebra.MetaData meta_data = 6;</code>
     * @return Whether the metaData field is set.
     */
    @java.lang.Override
    public boolean hasMetaData() {
      return metaData_ != null;
    }
    /**
     * <code>.algebra.MetaData meta_data = 6;</code>
     * @return The metaData.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData getMetaData() {
      return metaData_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance() : metaData_;
    }
    /**
     * <code>.algebra.MetaData meta_data = 6;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder getMetaDataOrBuilder() {
      return metaData_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance() : metaData_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (vTag_ != null) {
        output.writeMessage(1, getVTag());
      }
      if (direction_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Direction.OUT.getNumber()) {
        output.writeEnum(2, direction_);
      }
      if (params_ != null) {
        output.writeMessage(3, getParams());
      }
      if (alias_ != null) {
        output.writeMessage(4, getAlias());
      }
      if (expandOpt_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.ExpandOpt.VERTEX.getNumber()) {
        output.writeEnum(5, expandOpt_);
      }
      if (metaData_ != null) {
        output.writeMessage(6, getMetaData());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (vTag_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getVTag());
      }
      if (direction_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Direction.OUT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, direction_);
      }
      if (params_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getParams());
      }
      if (alias_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getAlias());
      }
      if (expandOpt_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.ExpandOpt.VERTEX.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, expandOpt_);
      }
      if (metaData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getMetaData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand) obj;

      if (hasVTag() != other.hasVTag()) return false;
      if (hasVTag()) {
        if (!getVTag()
            .equals(other.getVTag())) return false;
      }
      if (direction_ != other.direction_) return false;
      if (hasParams() != other.hasParams()) return false;
      if (hasParams()) {
        if (!getParams()
            .equals(other.getParams())) return false;
      }
      if (hasAlias() != other.hasAlias()) return false;
      if (hasAlias()) {
        if (!getAlias()
            .equals(other.getAlias())) return false;
      }
      if (expandOpt_ != other.expandOpt_) return false;
      if (hasMetaData() != other.hasMetaData()) return false;
      if (hasMetaData()) {
        if (!getMetaData()
            .equals(other.getMetaData())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasVTag()) {
        hash = (37 * hash) + V_TAG_FIELD_NUMBER;
        hash = (53 * hash) + getVTag().hashCode();
      }
      hash = (37 * hash) + DIRECTION_FIELD_NUMBER;
      hash = (53 * hash) + direction_;
      if (hasParams()) {
        hash = (37 * hash) + PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getParams().hashCode();
      }
      if (hasAlias()) {
        hash = (37 * hash) + ALIAS_FIELD_NUMBER;
        hash = (53 * hash) + getAlias().hashCode();
      }
      hash = (37 * hash) + EXPAND_OPT_FIELD_NUMBER;
      hash = (53 * hash) + expandOpt_;
      if (hasMetaData()) {
        hash = (37 * hash) + META_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetaData().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code algebra.EdgeExpand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.EdgeExpand)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_EdgeExpand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_EdgeExpand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        vTag_ = null;
        if (vTagBuilder_ != null) {
          vTagBuilder_.dispose();
          vTagBuilder_ = null;
        }
        direction_ = 0;
        params_ = null;
        if (paramsBuilder_ != null) {
          paramsBuilder_.dispose();
          paramsBuilder_ = null;
        }
        alias_ = null;
        if (aliasBuilder_ != null) {
          aliasBuilder_.dispose();
          aliasBuilder_ = null;
        }
        expandOpt_ = 0;
        metaData_ = null;
        if (metaDataBuilder_ != null) {
          metaDataBuilder_.dispose();
          metaDataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_EdgeExpand_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.vTag_ = vTagBuilder_ == null
              ? vTag_
              : vTagBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.direction_ = direction_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.params_ = paramsBuilder_ == null
              ? params_
              : paramsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.alias_ = aliasBuilder_ == null
              ? alias_
              : aliasBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.expandOpt_ = expandOpt_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.metaData_ = metaDataBuilder_ == null
              ? metaData_
              : metaDataBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.getDefaultInstance()) return this;
        if (other.hasVTag()) {
          mergeVTag(other.getVTag());
        }
        if (other.direction_ != 0) {
          setDirectionValue(other.getDirectionValue());
        }
        if (other.hasParams()) {
          mergeParams(other.getParams());
        }
        if (other.hasAlias()) {
          mergeAlias(other.getAlias());
        }
        if (other.expandOpt_ != 0) {
          setExpandOptValue(other.getExpandOptValue());
        }
        if (other.hasMetaData()) {
          mergeMetaData(other.getMetaData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getVTagFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                direction_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                input.readMessage(
                    getParamsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getAliasFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 40: {
                expandOpt_ = input.readEnum();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 50: {
                input.readMessage(
                    getMetaDataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId vTag_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> vTagBuilder_;
      /**
       * <pre>
       * The tag that refers to the starting vertex
       * </pre>
       *
       * <code>.common.NameOrId v_tag = 1;</code>
       * @return Whether the vTag field is set.
       */
      public boolean hasVTag() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The tag that refers to the starting vertex
       * </pre>
       *
       * <code>.common.NameOrId v_tag = 1;</code>
       * @return The vTag.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getVTag() {
        if (vTagBuilder_ == null) {
          return vTag_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : vTag_;
        } else {
          return vTagBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The tag that refers to the starting vertex
       * </pre>
       *
       * <code>.common.NameOrId v_tag = 1;</code>
       */
      public Builder setVTag(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (vTagBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vTag_ = value;
        } else {
          vTagBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The tag that refers to the starting vertex
       * </pre>
       *
       * <code>.common.NameOrId v_tag = 1;</code>
       */
      public Builder setVTag(
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
        if (vTagBuilder_ == null) {
          vTag_ = builderForValue.build();
        } else {
          vTagBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The tag that refers to the starting vertex
       * </pre>
       *
       * <code>.common.NameOrId v_tag = 1;</code>
       */
      public Builder mergeVTag(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (vTagBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            vTag_ != null &&
            vTag_ != com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance()) {
            getVTagBuilder().mergeFrom(value);
          } else {
            vTag_ = value;
          }
        } else {
          vTagBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The tag that refers to the starting vertex
       * </pre>
       *
       * <code>.common.NameOrId v_tag = 1;</code>
       */
      public Builder clearVTag() {
        bitField0_ = (bitField0_ & ~0x00000001);
        vTag_ = null;
        if (vTagBuilder_ != null) {
          vTagBuilder_.dispose();
          vTagBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The tag that refers to the starting vertex
       * </pre>
       *
       * <code>.common.NameOrId v_tag = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder getVTagBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getVTagFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The tag that refers to the starting vertex
       * </pre>
       *
       * <code>.common.NameOrId v_tag = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getVTagOrBuilder() {
        if (vTagBuilder_ != null) {
          return vTagBuilder_.getMessageOrBuilder();
        } else {
          return vTag_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : vTag_;
        }
      }
      /**
       * <pre>
       * The tag that refers to the starting vertex
       * </pre>
       *
       * <code>.common.NameOrId v_tag = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
          getVTagFieldBuilder() {
        if (vTagBuilder_ == null) {
          vTagBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder>(
                  getVTag(),
                  getParentForChildren(),
                  isClean());
          vTag_ = null;
        }
        return vTagBuilder_;
      }

      private int direction_ = 0;
      /**
       * <pre>
       * The direction of the expanded edge
       * </pre>
       *
       * <code>.algebra.EdgeExpand.Direction direction = 2;</code>
       * @return The enum numeric value on the wire for direction.
       */
      @java.lang.Override public int getDirectionValue() {
        return direction_;
      }
      /**
       * <pre>
       * The direction of the expanded edge
       * </pre>
       *
       * <code>.algebra.EdgeExpand.Direction direction = 2;</code>
       * @param value The enum numeric value on the wire for direction to set.
       * @return This builder for chaining.
       */
      public Builder setDirectionValue(int value) {
        direction_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The direction of the expanded edge
       * </pre>
       *
       * <code>.algebra.EdgeExpand.Direction direction = 2;</code>
       * @return The direction.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Direction getDirection() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Direction result = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Direction.forNumber(direction_);
        return result == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Direction.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The direction of the expanded edge
       * </pre>
       *
       * <code>.algebra.EdgeExpand.Direction direction = 2;</code>
       * @param value The direction to set.
       * @return This builder for chaining.
       */
      public Builder setDirection(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Direction value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        direction_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The direction of the expanded edge
       * </pre>
       *
       * <code>.algebra.EdgeExpand.Direction direction = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirection() {
        bitField0_ = (bitField0_ & ~0x00000002);
        direction_ = 0;
        onChanged();
        return this;
      }

      private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams params_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParamsOrBuilder> paramsBuilder_;
      /**
       * <pre>
       * The query parameters define the condition that the edge/end vertex must satisfy.
       * Note that whether the query parameters apply to the edge or end vertex depends on
       * the `is_edge` indicator, with one exception that the `tables` parameter in `EdgeExpand`
       * **always** applies to the edge for now (may be fixed later) .
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       * @return Whether the params field is set.
       */
      public boolean hasParams() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The query parameters define the condition that the edge/end vertex must satisfy.
       * Note that whether the query parameters apply to the edge or end vertex depends on
       * the `is_edge` indicator, with one exception that the `tables` parameter in `EdgeExpand`
       * **always** applies to the edge for now (may be fixed later) .
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       * @return The params.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams getParams() {
        if (paramsBuilder_ == null) {
          return params_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.getDefaultInstance() : params_;
        } else {
          return paramsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The query parameters define the condition that the edge/end vertex must satisfy.
       * Note that whether the query parameters apply to the edge or end vertex depends on
       * the `is_edge` indicator, with one exception that the `tables` parameter in `EdgeExpand`
       * **always** applies to the edge for now (may be fixed later) .
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       */
      public Builder setParams(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams value) {
        if (paramsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          params_ = value;
        } else {
          paramsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The query parameters define the condition that the edge/end vertex must satisfy.
       * Note that whether the query parameters apply to the edge or end vertex depends on
       * the `is_edge` indicator, with one exception that the `tables` parameter in `EdgeExpand`
       * **always** applies to the edge for now (may be fixed later) .
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       */
      public Builder setParams(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.Builder builderForValue) {
        if (paramsBuilder_ == null) {
          params_ = builderForValue.build();
        } else {
          paramsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The query parameters define the condition that the edge/end vertex must satisfy.
       * Note that whether the query parameters apply to the edge or end vertex depends on
       * the `is_edge` indicator, with one exception that the `tables` parameter in `EdgeExpand`
       * **always** applies to the edge for now (may be fixed later) .
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       */
      public Builder mergeParams(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams value) {
        if (paramsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            params_ != null &&
            params_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.getDefaultInstance()) {
            getParamsBuilder().mergeFrom(value);
          } else {
            params_ = value;
          }
        } else {
          paramsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The query parameters define the condition that the edge/end vertex must satisfy.
       * Note that whether the query parameters apply to the edge or end vertex depends on
       * the `is_edge` indicator, with one exception that the `tables` parameter in `EdgeExpand`
       * **always** applies to the edge for now (may be fixed later) .
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       */
      public Builder clearParams() {
        bitField0_ = (bitField0_ & ~0x00000004);
        params_ = null;
        if (paramsBuilder_ != null) {
          paramsBuilder_.dispose();
          paramsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The query parameters define the condition that the edge/end vertex must satisfy.
       * Note that whether the query parameters apply to the edge or end vertex depends on
       * the `is_edge` indicator, with one exception that the `tables` parameter in `EdgeExpand`
       * **always** applies to the edge for now (may be fixed later) .
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.Builder getParamsBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getParamsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The query parameters define the condition that the edge/end vertex must satisfy.
       * Note that whether the query parameters apply to the edge or end vertex depends on
       * the `is_edge` indicator, with one exception that the `tables` parameter in `EdgeExpand`
       * **always** applies to the edge for now (may be fixed later) .
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParamsOrBuilder getParamsOrBuilder() {
        if (paramsBuilder_ != null) {
          return paramsBuilder_.getMessageOrBuilder();
        } else {
          return params_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.getDefaultInstance() : params_;
        }
      }
      /**
       * <pre>
       * The query parameters define the condition that the edge/end vertex must satisfy.
       * Note that whether the query parameters apply to the edge or end vertex depends on
       * the `is_edge` indicator, with one exception that the `tables` parameter in `EdgeExpand`
       * **always** applies to the edge for now (may be fixed later) .
       * </pre>
       *
       * <code>.algebra.QueryParams params = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParamsOrBuilder> 
          getParamsFieldBuilder() {
        if (paramsBuilder_ == null) {
          paramsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParams.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.QueryParamsOrBuilder>(
                  getParams(),
                  getParentForChildren(),
                  isClean());
          params_ = null;
        }
        return paramsBuilder_;
      }

      private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId alias_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> aliasBuilder_;
      /**
       * <pre>
       * An optional alias for the object of the expansion
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       * @return Whether the alias field is set.
       */
      public boolean hasAlias() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * An optional alias for the object of the expansion
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       * @return The alias.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias() {
        if (aliasBuilder_ == null) {
          return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
        } else {
          return aliasBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * An optional alias for the object of the expansion
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       */
      public Builder setAlias(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (aliasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          alias_ = value;
        } else {
          aliasBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional alias for the object of the expansion
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       */
      public Builder setAlias(
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
        if (aliasBuilder_ == null) {
          alias_ = builderForValue.build();
        } else {
          aliasBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional alias for the object of the expansion
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       */
      public Builder mergeAlias(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (aliasBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            alias_ != null &&
            alias_ != com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance()) {
            getAliasBuilder().mergeFrom(value);
          } else {
            alias_ = value;
          }
        } else {
          aliasBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional alias for the object of the expansion
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       */
      public Builder clearAlias() {
        bitField0_ = (bitField0_ & ~0x00000008);
        alias_ = null;
        if (aliasBuilder_ != null) {
          aliasBuilder_.dispose();
          aliasBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional alias for the object of the expansion
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder getAliasBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getAliasFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * An optional alias for the object of the expansion
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder() {
        if (aliasBuilder_ != null) {
          return aliasBuilder_.getMessageOrBuilder();
        } else {
          return alias_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
        }
      }
      /**
       * <pre>
       * An optional alias for the object of the expansion
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
          getAliasFieldBuilder() {
        if (aliasBuilder_ == null) {
          aliasBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder>(
                  getAlias(),
                  getParentForChildren(),
                  isClean());
          alias_ = null;
        }
        return aliasBuilder_;
      }

      private int expandOpt_ = 0;
      /**
       * <pre>
       * Expand option, i.e., expand vertices/edges/degree.
       * </pre>
       *
       * <code>.algebra.EdgeExpand.ExpandOpt expand_opt = 5;</code>
       * @return The enum numeric value on the wire for expandOpt.
       */
      @java.lang.Override public int getExpandOptValue() {
        return expandOpt_;
      }
      /**
       * <pre>
       * Expand option, i.e., expand vertices/edges/degree.
       * </pre>
       *
       * <code>.algebra.EdgeExpand.ExpandOpt expand_opt = 5;</code>
       * @param value The enum numeric value on the wire for expandOpt to set.
       * @return This builder for chaining.
       */
      public Builder setExpandOptValue(int value) {
        expandOpt_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Expand option, i.e., expand vertices/edges/degree.
       * </pre>
       *
       * <code>.algebra.EdgeExpand.ExpandOpt expand_opt = 5;</code>
       * @return The expandOpt.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.ExpandOpt getExpandOpt() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.ExpandOpt result = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.ExpandOpt.forNumber(expandOpt_);
        return result == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.ExpandOpt.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Expand option, i.e., expand vertices/edges/degree.
       * </pre>
       *
       * <code>.algebra.EdgeExpand.ExpandOpt expand_opt = 5;</code>
       * @param value The expandOpt to set.
       * @return This builder for chaining.
       */
      public Builder setExpandOpt(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.ExpandOpt value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        expandOpt_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Expand option, i.e., expand vertices/edges/degree.
       * </pre>
       *
       * <code>.algebra.EdgeExpand.ExpandOpt expand_opt = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearExpandOpt() {
        bitField0_ = (bitField0_ & ~0x00000010);
        expandOpt_ = 0;
        onChanged();
        return this;
      }

      private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData metaData_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder> metaDataBuilder_;
      /**
       * <code>.algebra.MetaData meta_data = 6;</code>
       * @return Whether the metaData field is set.
       */
      public boolean hasMetaData() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>.algebra.MetaData meta_data = 6;</code>
       * @return The metaData.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData getMetaData() {
        if (metaDataBuilder_ == null) {
          return metaData_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance() : metaData_;
        } else {
          return metaDataBuilder_.getMessage();
        }
      }
      /**
       * <code>.algebra.MetaData meta_data = 6;</code>
       */
      public Builder setMetaData(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData value) {
        if (metaDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metaData_ = value;
        } else {
          metaDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>.algebra.MetaData meta_data = 6;</code>
       */
      public Builder setMetaData(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder builderForValue) {
        if (metaDataBuilder_ == null) {
          metaData_ = builderForValue.build();
        } else {
          metaDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>.algebra.MetaData meta_data = 6;</code>
       */
      public Builder mergeMetaData(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData value) {
        if (metaDataBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
            metaData_ != null &&
            metaData_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance()) {
            getMetaDataBuilder().mergeFrom(value);
          } else {
            metaData_ = value;
          }
        } else {
          metaDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>.algebra.MetaData meta_data = 6;</code>
       */
      public Builder clearMetaData() {
        bitField0_ = (bitField0_ & ~0x00000020);
        metaData_ = null;
        if (metaDataBuilder_ != null) {
          metaDataBuilder_.dispose();
          metaDataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.algebra.MetaData meta_data = 6;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder getMetaDataBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getMetaDataFieldBuilder().getBuilder();
      }
      /**
       * <code>.algebra.MetaData meta_data = 6;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder getMetaDataOrBuilder() {
        if (metaDataBuilder_ != null) {
          return metaDataBuilder_.getMessageOrBuilder();
        } else {
          return metaData_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance() : metaData_;
        }
      }
      /**
       * <code>.algebra.MetaData meta_data = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder> 
          getMetaDataFieldBuilder() {
        if (metaDataBuilder_ == null) {
          metaDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder>(
                  getMetaData(),
                  getParentForChildren(),
                  isClean());
          metaData_ = null;
        }
        return metaDataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.EdgeExpand)
    }

    // @@protoc_insertion_point(class_scope:algebra.EdgeExpand)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EdgeExpand>
        PARSER = new com.google.protobuf.AbstractParser<EdgeExpand>() {
      @java.lang.Override
      public EdgeExpand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<EdgeExpand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EdgeExpand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PathExpandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.PathExpand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A path expansion has a base expansion
     * </pre>
     *
     * <code>.algebra.PathExpand.ExpandBase base = 1;</code>
     * @return Whether the base field is set.
     */
    boolean hasBase();
    /**
     * <pre>
     * A path expansion has a base expansion
     * </pre>
     *
     * <code>.algebra.PathExpand.ExpandBase base = 1;</code>
     * @return The base.
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase getBase();
    /**
     * <pre>
     * A path expansion has a base expansion
     * </pre>
     *
     * <code>.algebra.PathExpand.ExpandBase base = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBaseOrBuilder getBaseOrBuilder();

    /**
     * <pre>
     * The tag that refers to the starting vertex
     * </pre>
     *
     * <code>.common.NameOrId start_tag = 2;</code>
     * @return Whether the startTag field is set.
     */
    boolean hasStartTag();
    /**
     * <pre>
     * The tag that refers to the starting vertex
     * </pre>
     *
     * <code>.common.NameOrId start_tag = 2;</code>
     * @return The startTag.
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getStartTag();
    /**
     * <pre>
     * The tag that refers to the starting vertex
     * </pre>
     *
     * <code>.common.NameOrId start_tag = 2;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getStartTagOrBuilder();

    /**
     * <pre>
     * An optional alias for the object of the expansion
     * </pre>
     *
     * <code>.common.NameOrId alias = 3;</code>
     * @return Whether the alias field is set.
     */
    boolean hasAlias();
    /**
     * <pre>
     * An optional alias for the object of the expansion
     * </pre>
     *
     * <code>.common.NameOrId alias = 3;</code>
     * @return The alias.
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias();
    /**
     * <pre>
     * An optional alias for the object of the expansion
     * </pre>
     *
     * <code>.common.NameOrId alias = 3;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder();

    /**
     * <pre>
     * The range that defines the minimum and maximum number of hops of the path expansion.
     * This is optional, if not set, the minimum number is 1, and the maximum is INT_MAX
     * </pre>
     *
     * <code>.algebra.Range hop_range = 4;</code>
     * @return Whether the hopRange field is set.
     */
    boolean hasHopRange();
    /**
     * <pre>
     * The range that defines the minimum and maximum number of hops of the path expansion.
     * This is optional, if not set, the minimum number is 1, and the maximum is INT_MAX
     * </pre>
     *
     * <code>.algebra.Range hop_range = 4;</code>
     * @return The hopRange.
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range getHopRange();
    /**
     * <pre>
     * The range that defines the minimum and maximum number of hops of the path expansion.
     * This is optional, if not set, the minimum number is 1, and the maximum is INT_MAX
     * </pre>
     *
     * <code>.algebra.Range hop_range = 4;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RangeOrBuilder getHopRangeOrBuilder();

    /**
     * <pre>
     * Path option, including to expand an arbitrary path or a simple path
     * </pre>
     *
     * <code>.algebra.PathExpand.PathOpt path_opt = 5;</code>
     * @return The enum numeric value on the wire for pathOpt.
     */
    int getPathOptValue();
    /**
     * <pre>
     * Path option, including to expand an arbitrary path or a simple path
     * </pre>
     *
     * <code>.algebra.PathExpand.PathOpt path_opt = 5;</code>
     * @return The pathOpt.
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.PathOpt getPathOpt();

    /**
     * <pre>
     * Result option, including to take end vertex (EndV), or whole path (AllV), for this expansion
     * </pre>
     *
     * <code>.algebra.PathExpand.ResultOpt result_opt = 6;</code>
     * @return The enum numeric value on the wire for resultOpt.
     */
    int getResultOptValue();
    /**
     * <pre>
     * Result option, including to take end vertex (EndV), or whole path (AllV), for this expansion
     * </pre>
     *
     * <code>.algebra.PathExpand.ResultOpt result_opt = 6;</code>
     * @return The resultOpt.
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ResultOpt getResultOpt();

    /**
     * <pre>
     * A condition formulated as an expression predicate
     * </pre>
     *
     * <code>.common.Expression condition = 7;</code>
     * @return Whether the condition field is set.
     */
    boolean hasCondition();
    /**
     * <pre>
     * A condition formulated as an expression predicate
     * </pre>
     *
     * <code>.common.Expression condition = 7;</code>
     * @return The condition.
     */
    com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression getCondition();
    /**
     * <pre>
     * A condition formulated as an expression predicate
     * </pre>
     *
     * <code>.common.Expression condition = 7;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.ExpressionOrBuilder getConditionOrBuilder();
  }
  /**
   * Protobuf type {@code algebra.PathExpand}
   */
  public static final class PathExpand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.PathExpand)
      PathExpandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PathExpand.newBuilder() to construct.
    private PathExpand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PathExpand() {
      pathOpt_ = 0;
      resultOpt_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PathExpand();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_PathExpand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_PathExpand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.Builder.class);
    }

    /**
     * Protobuf enum {@code algebra.PathExpand.PathOpt}
     */
    public enum PathOpt
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * an arbitrary path, in which both vertex/edge may duplicate
       * </pre>
       *
       * <code>ARBITRARY = 0;</code>
       */
      ARBITRARY(0),
      /**
       * <pre>
       * a path without vertex duplications
       * </pre>
       *
       * <code>SIMPLE = 1;</code>
       */
      SIMPLE(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * an arbitrary path, in which both vertex/edge may duplicate
       * </pre>
       *
       * <code>ARBITRARY = 0;</code>
       */
      public static final int ARBITRARY_VALUE = 0;
      /**
       * <pre>
       * a path without vertex duplications
       * </pre>
       *
       * <code>SIMPLE = 1;</code>
       */
      public static final int SIMPLE_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PathOpt valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static PathOpt forNumber(int value) {
        switch (value) {
          case 0: return ARBITRARY;
          case 1: return SIMPLE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<PathOpt>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          PathOpt> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PathOpt>() {
              public PathOpt findValueByNumber(int number) {
                return PathOpt.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.getDescriptor().getEnumTypes().get(0);
      }

      private static final PathOpt[] VALUES = values();

      public static PathOpt valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private PathOpt(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:algebra.PathExpand.PathOpt)
    }

    /**
     * <pre>
     * Define what result is required for this path. We currently support `EndV` and `AllV`, while an option to
     * include all edges and vertices may be needed in the future.
     * </pre>
     *
     * Protobuf enum {@code algebra.PathExpand.ResultOpt}
     */
    public enum ResultOpt
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * only end vertex is required for this expansion
       * </pre>
       *
       * <code>END_V = 0;</code>
       */
      END_V(0),
      /**
       * <pre>
       * all vertices of this path are required for this expansion.
       * </pre>
       *
       * <code>ALL_V = 1;</code>
       */
      ALL_V(1),
      /**
       * <pre>
       * all vertices and edges of this path are required for this expansion.
       * </pre>
       *
       * <code>ALL_V_E = 2;</code>
       */
      ALL_V_E(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * only end vertex is required for this expansion
       * </pre>
       *
       * <code>END_V = 0;</code>
       */
      public static final int END_V_VALUE = 0;
      /**
       * <pre>
       * all vertices of this path are required for this expansion.
       * </pre>
       *
       * <code>ALL_V = 1;</code>
       */
      public static final int ALL_V_VALUE = 1;
      /**
       * <pre>
       * all vertices and edges of this path are required for this expansion.
       * </pre>
       *
       * <code>ALL_V_E = 2;</code>
       */
      public static final int ALL_V_E_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ResultOpt valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static ResultOpt forNumber(int value) {
        switch (value) {
          case 0: return END_V;
          case 1: return ALL_V;
          case 2: return ALL_V_E;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ResultOpt>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ResultOpt> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ResultOpt>() {
              public ResultOpt findValueByNumber(int number) {
                return ResultOpt.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.getDescriptor().getEnumTypes().get(1);
      }

      private static final ResultOpt[] VALUES = values();

      public static ResultOpt valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ResultOpt(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:algebra.PathExpand.ResultOpt)
    }

    public interface ExpandBaseOrBuilder extends
        // @@protoc_insertion_point(interface_extends:algebra.PathExpand.ExpandBase)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Can either be a single EdgeExpand (with ExpandOpt = Vertex), or EdgeExpand (with ExpandOpt = Edge) + GetV
       * </pre>
       *
       * <code>.algebra.EdgeExpand edge_expand = 1;</code>
       * @return Whether the edgeExpand field is set.
       */
      boolean hasEdgeExpand();
      /**
       * <pre>
       * Can either be a single EdgeExpand (with ExpandOpt = Vertex), or EdgeExpand (with ExpandOpt = Edge) + GetV
       * </pre>
       *
       * <code>.algebra.EdgeExpand edge_expand = 1;</code>
       * @return The edgeExpand.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand getEdgeExpand();
      /**
       * <pre>
       * Can either be a single EdgeExpand (with ExpandOpt = Vertex), or EdgeExpand (with ExpandOpt = Edge) + GetV
       * </pre>
       *
       * <code>.algebra.EdgeExpand edge_expand = 1;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpandOrBuilder getEdgeExpandOrBuilder();

      /**
       * <code>.algebra.GetV get_V = 2;</code>
       * @return Whether the getV field is set.
       */
      boolean hasGetV();
      /**
       * <code>.algebra.GetV get_V = 2;</code>
       * @return The getV.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV getGetV();
      /**
       * <code>.algebra.GetV get_V = 2;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetVOrBuilder getGetVOrBuilder();
    }
    /**
     * <pre>
     * The expand base of PathExpand
     * </pre>
     *
     * Protobuf type {@code algebra.PathExpand.ExpandBase}
     */
    public static final class ExpandBase extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:algebra.PathExpand.ExpandBase)
        ExpandBaseOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ExpandBase.newBuilder() to construct.
      private ExpandBase(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ExpandBase() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ExpandBase();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_PathExpand_ExpandBase_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_PathExpand_ExpandBase_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase.Builder.class);
      }

      public static final int EDGE_EXPAND_FIELD_NUMBER = 1;
      private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand edgeExpand_;
      /**
       * <pre>
       * Can either be a single EdgeExpand (with ExpandOpt = Vertex), or EdgeExpand (with ExpandOpt = Edge) + GetV
       * </pre>
       *
       * <code>.algebra.EdgeExpand edge_expand = 1;</code>
       * @return Whether the edgeExpand field is set.
       */
      @java.lang.Override
      public boolean hasEdgeExpand() {
        return edgeExpand_ != null;
      }
      /**
       * <pre>
       * Can either be a single EdgeExpand (with ExpandOpt = Vertex), or EdgeExpand (with ExpandOpt = Edge) + GetV
       * </pre>
       *
       * <code>.algebra.EdgeExpand edge_expand = 1;</code>
       * @return The edgeExpand.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand getEdgeExpand() {
        return edgeExpand_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.getDefaultInstance() : edgeExpand_;
      }
      /**
       * <pre>
       * Can either be a single EdgeExpand (with ExpandOpt = Vertex), or EdgeExpand (with ExpandOpt = Edge) + GetV
       * </pre>
       *
       * <code>.algebra.EdgeExpand edge_expand = 1;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpandOrBuilder getEdgeExpandOrBuilder() {
        return edgeExpand_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.getDefaultInstance() : edgeExpand_;
      }

      public static final int GET_V_FIELD_NUMBER = 2;
      private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV getV_;
      /**
       * <code>.algebra.GetV get_V = 2;</code>
       * @return Whether the getV field is set.
       */
      @java.lang.Override
      public boolean hasGetV() {
        return getV_ != null;
      }
      /**
       * <code>.algebra.GetV get_V = 2;</code>
       * @return The getV.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV getGetV() {
        return getV_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.getDefaultInstance() : getV_;
      }
      /**
       * <code>.algebra.GetV get_V = 2;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetVOrBuilder getGetVOrBuilder() {
        return getV_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.getDefaultInstance() : getV_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (edgeExpand_ != null) {
          output.writeMessage(1, getEdgeExpand());
        }
        if (getV_ != null) {
          output.writeMessage(2, getGetV());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (edgeExpand_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getEdgeExpand());
        }
        if (getV_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getGetV());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase)) {
          return super.equals(obj);
        }
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase) obj;

        if (hasEdgeExpand() != other.hasEdgeExpand()) return false;
        if (hasEdgeExpand()) {
          if (!getEdgeExpand()
              .equals(other.getEdgeExpand())) return false;
        }
        if (hasGetV() != other.hasGetV()) return false;
        if (hasGetV()) {
          if (!getGetV()
              .equals(other.getGetV())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasEdgeExpand()) {
          hash = (37 * hash) + EDGE_EXPAND_FIELD_NUMBER;
          hash = (53 * hash) + getEdgeExpand().hashCode();
        }
        if (hasGetV()) {
          hash = (37 * hash) + GET_V_FIELD_NUMBER;
          hash = (53 * hash) + getGetV().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * The expand base of PathExpand
       * </pre>
       *
       * Protobuf type {@code algebra.PathExpand.ExpandBase}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:algebra.PathExpand.ExpandBase)
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBaseOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_PathExpand_ExpandBase_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_PathExpand_ExpandBase_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase.Builder.class);
        }

        // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          edgeExpand_ = null;
          if (edgeExpandBuilder_ != null) {
            edgeExpandBuilder_.dispose();
            edgeExpandBuilder_ = null;
          }
          getV_ = null;
          if (getVBuilder_ != null) {
            getVBuilder_.dispose();
            getVBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_PathExpand_ExpandBase_descriptor;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase getDefaultInstanceForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase.getDefaultInstance();
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase build() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase buildPartial() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.edgeExpand_ = edgeExpandBuilder_ == null
                ? edgeExpand_
                : edgeExpandBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.getV_ = getVBuilder_ == null
                ? getV_
                : getVBuilder_.build();
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase) {
            return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase other) {
          if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase.getDefaultInstance()) return this;
          if (other.hasEdgeExpand()) {
            mergeEdgeExpand(other.getEdgeExpand());
          }
          if (other.hasGetV()) {
            mergeGetV(other.getGetV());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getEdgeExpandFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 18: {
                  input.readMessage(
                      getGetVFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand edgeExpand_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpandOrBuilder> edgeExpandBuilder_;
        /**
         * <pre>
         * Can either be a single EdgeExpand (with ExpandOpt = Vertex), or EdgeExpand (with ExpandOpt = Edge) + GetV
         * </pre>
         *
         * <code>.algebra.EdgeExpand edge_expand = 1;</code>
         * @return Whether the edgeExpand field is set.
         */
        public boolean hasEdgeExpand() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Can either be a single EdgeExpand (with ExpandOpt = Vertex), or EdgeExpand (with ExpandOpt = Edge) + GetV
         * </pre>
         *
         * <code>.algebra.EdgeExpand edge_expand = 1;</code>
         * @return The edgeExpand.
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand getEdgeExpand() {
          if (edgeExpandBuilder_ == null) {
            return edgeExpand_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.getDefaultInstance() : edgeExpand_;
          } else {
            return edgeExpandBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Can either be a single EdgeExpand (with ExpandOpt = Vertex), or EdgeExpand (with ExpandOpt = Edge) + GetV
         * </pre>
         *
         * <code>.algebra.EdgeExpand edge_expand = 1;</code>
         */
        public Builder setEdgeExpand(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand value) {
          if (edgeExpandBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            edgeExpand_ = value;
          } else {
            edgeExpandBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Can either be a single EdgeExpand (with ExpandOpt = Vertex), or EdgeExpand (with ExpandOpt = Edge) + GetV
         * </pre>
         *
         * <code>.algebra.EdgeExpand edge_expand = 1;</code>
         */
        public Builder setEdgeExpand(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Builder builderForValue) {
          if (edgeExpandBuilder_ == null) {
            edgeExpand_ = builderForValue.build();
          } else {
            edgeExpandBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Can either be a single EdgeExpand (with ExpandOpt = Vertex), or EdgeExpand (with ExpandOpt = Edge) + GetV
         * </pre>
         *
         * <code>.algebra.EdgeExpand edge_expand = 1;</code>
         */
        public Builder mergeEdgeExpand(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand value) {
          if (edgeExpandBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0) &&
              edgeExpand_ != null &&
              edgeExpand_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.getDefaultInstance()) {
              getEdgeExpandBuilder().mergeFrom(value);
            } else {
              edgeExpand_ = value;
            }
          } else {
            edgeExpandBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Can either be a single EdgeExpand (with ExpandOpt = Vertex), or EdgeExpand (with ExpandOpt = Edge) + GetV
         * </pre>
         *
         * <code>.algebra.EdgeExpand edge_expand = 1;</code>
         */
        public Builder clearEdgeExpand() {
          bitField0_ = (bitField0_ & ~0x00000001);
          edgeExpand_ = null;
          if (edgeExpandBuilder_ != null) {
            edgeExpandBuilder_.dispose();
            edgeExpandBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Can either be a single EdgeExpand (with ExpandOpt = Vertex), or EdgeExpand (with ExpandOpt = Edge) + GetV
         * </pre>
         *
         * <code>.algebra.EdgeExpand edge_expand = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Builder getEdgeExpandBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getEdgeExpandFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Can either be a single EdgeExpand (with ExpandOpt = Vertex), or EdgeExpand (with ExpandOpt = Edge) + GetV
         * </pre>
         *
         * <code>.algebra.EdgeExpand edge_expand = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpandOrBuilder getEdgeExpandOrBuilder() {
          if (edgeExpandBuilder_ != null) {
            return edgeExpandBuilder_.getMessageOrBuilder();
          } else {
            return edgeExpand_ == null ?
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.getDefaultInstance() : edgeExpand_;
          }
        }
        /**
         * <pre>
         * Can either be a single EdgeExpand (with ExpandOpt = Vertex), or EdgeExpand (with ExpandOpt = Edge) + GetV
         * </pre>
         *
         * <code>.algebra.EdgeExpand edge_expand = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpandOrBuilder> 
            getEdgeExpandFieldBuilder() {
          if (edgeExpandBuilder_ == null) {
            edgeExpandBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpandOrBuilder>(
                    getEdgeExpand(),
                    getParentForChildren(),
                    isClean());
            edgeExpand_ = null;
          }
          return edgeExpandBuilder_;
        }

        private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV getV_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetVOrBuilder> getVBuilder_;
        /**
         * <code>.algebra.GetV get_V = 2;</code>
         * @return Whether the getV field is set.
         */
        public boolean hasGetV() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>.algebra.GetV get_V = 2;</code>
         * @return The getV.
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV getGetV() {
          if (getVBuilder_ == null) {
            return getV_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.getDefaultInstance() : getV_;
          } else {
            return getVBuilder_.getMessage();
          }
        }
        /**
         * <code>.algebra.GetV get_V = 2;</code>
         */
        public Builder setGetV(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV value) {
          if (getVBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            getV_ = value;
          } else {
            getVBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>.algebra.GetV get_V = 2;</code>
         */
        public Builder setGetV(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.Builder builderForValue) {
          if (getVBuilder_ == null) {
            getV_ = builderForValue.build();
          } else {
            getVBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>.algebra.GetV get_V = 2;</code>
         */
        public Builder mergeGetV(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV value) {
          if (getVBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0) &&
              getV_ != null &&
              getV_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.getDefaultInstance()) {
              getGetVBuilder().mergeFrom(value);
            } else {
              getV_ = value;
            }
          } else {
            getVBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>.algebra.GetV get_V = 2;</code>
         */
        public Builder clearGetV() {
          bitField0_ = (bitField0_ & ~0x00000002);
          getV_ = null;
          if (getVBuilder_ != null) {
            getVBuilder_.dispose();
            getVBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <code>.algebra.GetV get_V = 2;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.Builder getGetVBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getGetVFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.GetV get_V = 2;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetVOrBuilder getGetVOrBuilder() {
          if (getVBuilder_ != null) {
            return getVBuilder_.getMessageOrBuilder();
          } else {
            return getV_ == null ?
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.getDefaultInstance() : getV_;
          }
        }
        /**
         * <code>.algebra.GetV get_V = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetVOrBuilder> 
            getGetVFieldBuilder() {
          if (getVBuilder_ == null) {
            getVBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetVOrBuilder>(
                    getGetV(),
                    getParentForChildren(),
                    isClean());
            getV_ = null;
          }
          return getVBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:algebra.PathExpand.ExpandBase)
      }

      // @@protoc_insertion_point(class_scope:algebra.PathExpand.ExpandBase)
      private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase();
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ExpandBase>
          PARSER = new com.google.protobuf.AbstractParser<ExpandBase>() {
        @java.lang.Override
        public ExpandBase parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ExpandBase> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ExpandBase> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int BASE_FIELD_NUMBER = 1;
    private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase base_;
    /**
     * <pre>
     * A path expansion has a base expansion
     * </pre>
     *
     * <code>.algebra.PathExpand.ExpandBase base = 1;</code>
     * @return Whether the base field is set.
     */
    @java.lang.Override
    public boolean hasBase() {
      return base_ != null;
    }
    /**
     * <pre>
     * A path expansion has a base expansion
     * </pre>
     *
     * <code>.algebra.PathExpand.ExpandBase base = 1;</code>
     * @return The base.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase getBase() {
      return base_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase.getDefaultInstance() : base_;
    }
    /**
     * <pre>
     * A path expansion has a base expansion
     * </pre>
     *
     * <code>.algebra.PathExpand.ExpandBase base = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBaseOrBuilder getBaseOrBuilder() {
      return base_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase.getDefaultInstance() : base_;
    }

    public static final int START_TAG_FIELD_NUMBER = 2;
    private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId startTag_;
    /**
     * <pre>
     * The tag that refers to the starting vertex
     * </pre>
     *
     * <code>.common.NameOrId start_tag = 2;</code>
     * @return Whether the startTag field is set.
     */
    @java.lang.Override
    public boolean hasStartTag() {
      return startTag_ != null;
    }
    /**
     * <pre>
     * The tag that refers to the starting vertex
     * </pre>
     *
     * <code>.common.NameOrId start_tag = 2;</code>
     * @return The startTag.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getStartTag() {
      return startTag_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : startTag_;
    }
    /**
     * <pre>
     * The tag that refers to the starting vertex
     * </pre>
     *
     * <code>.common.NameOrId start_tag = 2;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getStartTagOrBuilder() {
      return startTag_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : startTag_;
    }

    public static final int ALIAS_FIELD_NUMBER = 3;
    private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId alias_;
    /**
     * <pre>
     * An optional alias for the object of the expansion
     * </pre>
     *
     * <code>.common.NameOrId alias = 3;</code>
     * @return Whether the alias field is set.
     */
    @java.lang.Override
    public boolean hasAlias() {
      return alias_ != null;
    }
    /**
     * <pre>
     * An optional alias for the object of the expansion
     * </pre>
     *
     * <code>.common.NameOrId alias = 3;</code>
     * @return The alias.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias() {
      return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
    }
    /**
     * <pre>
     * An optional alias for the object of the expansion
     * </pre>
     *
     * <code>.common.NameOrId alias = 3;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder() {
      return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
    }

    public static final int HOP_RANGE_FIELD_NUMBER = 4;
    private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range hopRange_;
    /**
     * <pre>
     * The range that defines the minimum and maximum number of hops of the path expansion.
     * This is optional, if not set, the minimum number is 1, and the maximum is INT_MAX
     * </pre>
     *
     * <code>.algebra.Range hop_range = 4;</code>
     * @return Whether the hopRange field is set.
     */
    @java.lang.Override
    public boolean hasHopRange() {
      return hopRange_ != null;
    }
    /**
     * <pre>
     * The range that defines the minimum and maximum number of hops of the path expansion.
     * This is optional, if not set, the minimum number is 1, and the maximum is INT_MAX
     * </pre>
     *
     * <code>.algebra.Range hop_range = 4;</code>
     * @return The hopRange.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range getHopRange() {
      return hopRange_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.getDefaultInstance() : hopRange_;
    }
    /**
     * <pre>
     * The range that defines the minimum and maximum number of hops of the path expansion.
     * This is optional, if not set, the minimum number is 1, and the maximum is INT_MAX
     * </pre>
     *
     * <code>.algebra.Range hop_range = 4;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RangeOrBuilder getHopRangeOrBuilder() {
      return hopRange_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.getDefaultInstance() : hopRange_;
    }

    public static final int PATH_OPT_FIELD_NUMBER = 5;
    private int pathOpt_ = 0;
    /**
     * <pre>
     * Path option, including to expand an arbitrary path or a simple path
     * </pre>
     *
     * <code>.algebra.PathExpand.PathOpt path_opt = 5;</code>
     * @return The enum numeric value on the wire for pathOpt.
     */
    @java.lang.Override public int getPathOptValue() {
      return pathOpt_;
    }
    /**
     * <pre>
     * Path option, including to expand an arbitrary path or a simple path
     * </pre>
     *
     * <code>.algebra.PathExpand.PathOpt path_opt = 5;</code>
     * @return The pathOpt.
     */
    @java.lang.Override public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.PathOpt getPathOpt() {
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.PathOpt result = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.PathOpt.forNumber(pathOpt_);
      return result == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.PathOpt.UNRECOGNIZED : result;
    }

    public static final int RESULT_OPT_FIELD_NUMBER = 6;
    private int resultOpt_ = 0;
    /**
     * <pre>
     * Result option, including to take end vertex (EndV), or whole path (AllV), for this expansion
     * </pre>
     *
     * <code>.algebra.PathExpand.ResultOpt result_opt = 6;</code>
     * @return The enum numeric value on the wire for resultOpt.
     */
    @java.lang.Override public int getResultOptValue() {
      return resultOpt_;
    }
    /**
     * <pre>
     * Result option, including to take end vertex (EndV), or whole path (AllV), for this expansion
     * </pre>
     *
     * <code>.algebra.PathExpand.ResultOpt result_opt = 6;</code>
     * @return The resultOpt.
     */
    @java.lang.Override public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ResultOpt getResultOpt() {
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ResultOpt result = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ResultOpt.forNumber(resultOpt_);
      return result == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ResultOpt.UNRECOGNIZED : result;
    }

    public static final int CONDITION_FIELD_NUMBER = 7;
    private com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression condition_;
    /**
     * <pre>
     * A condition formulated as an expression predicate
     * </pre>
     *
     * <code>.common.Expression condition = 7;</code>
     * @return Whether the condition field is set.
     */
    @java.lang.Override
    public boolean hasCondition() {
      return condition_ != null;
    }
    /**
     * <pre>
     * A condition formulated as an expression predicate
     * </pre>
     *
     * <code>.common.Expression condition = 7;</code>
     * @return The condition.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression getCondition() {
      return condition_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.getDefaultInstance() : condition_;
    }
    /**
     * <pre>
     * A condition formulated as an expression predicate
     * </pre>
     *
     * <code>.common.Expression condition = 7;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.ExpressionOrBuilder getConditionOrBuilder() {
      return condition_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.getDefaultInstance() : condition_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (base_ != null) {
        output.writeMessage(1, getBase());
      }
      if (startTag_ != null) {
        output.writeMessage(2, getStartTag());
      }
      if (alias_ != null) {
        output.writeMessage(3, getAlias());
      }
      if (hopRange_ != null) {
        output.writeMessage(4, getHopRange());
      }
      if (pathOpt_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.PathOpt.ARBITRARY.getNumber()) {
        output.writeEnum(5, pathOpt_);
      }
      if (resultOpt_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ResultOpt.END_V.getNumber()) {
        output.writeEnum(6, resultOpt_);
      }
      if (condition_ != null) {
        output.writeMessage(7, getCondition());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (base_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBase());
      }
      if (startTag_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getStartTag());
      }
      if (alias_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getAlias());
      }
      if (hopRange_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getHopRange());
      }
      if (pathOpt_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.PathOpt.ARBITRARY.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, pathOpt_);
      }
      if (resultOpt_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ResultOpt.END_V.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, resultOpt_);
      }
      if (condition_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getCondition());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand) obj;

      if (hasBase() != other.hasBase()) return false;
      if (hasBase()) {
        if (!getBase()
            .equals(other.getBase())) return false;
      }
      if (hasStartTag() != other.hasStartTag()) return false;
      if (hasStartTag()) {
        if (!getStartTag()
            .equals(other.getStartTag())) return false;
      }
      if (hasAlias() != other.hasAlias()) return false;
      if (hasAlias()) {
        if (!getAlias()
            .equals(other.getAlias())) return false;
      }
      if (hasHopRange() != other.hasHopRange()) return false;
      if (hasHopRange()) {
        if (!getHopRange()
            .equals(other.getHopRange())) return false;
      }
      if (pathOpt_ != other.pathOpt_) return false;
      if (resultOpt_ != other.resultOpt_) return false;
      if (hasCondition() != other.hasCondition()) return false;
      if (hasCondition()) {
        if (!getCondition()
            .equals(other.getCondition())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBase()) {
        hash = (37 * hash) + BASE_FIELD_NUMBER;
        hash = (53 * hash) + getBase().hashCode();
      }
      if (hasStartTag()) {
        hash = (37 * hash) + START_TAG_FIELD_NUMBER;
        hash = (53 * hash) + getStartTag().hashCode();
      }
      if (hasAlias()) {
        hash = (37 * hash) + ALIAS_FIELD_NUMBER;
        hash = (53 * hash) + getAlias().hashCode();
      }
      if (hasHopRange()) {
        hash = (37 * hash) + HOP_RANGE_FIELD_NUMBER;
        hash = (53 * hash) + getHopRange().hashCode();
      }
      hash = (37 * hash) + PATH_OPT_FIELD_NUMBER;
      hash = (53 * hash) + pathOpt_;
      hash = (37 * hash) + RESULT_OPT_FIELD_NUMBER;
      hash = (53 * hash) + resultOpt_;
      if (hasCondition()) {
        hash = (37 * hash) + CONDITION_FIELD_NUMBER;
        hash = (53 * hash) + getCondition().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code algebra.PathExpand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.PathExpand)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_PathExpand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_PathExpand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        base_ = null;
        if (baseBuilder_ != null) {
          baseBuilder_.dispose();
          baseBuilder_ = null;
        }
        startTag_ = null;
        if (startTagBuilder_ != null) {
          startTagBuilder_.dispose();
          startTagBuilder_ = null;
        }
        alias_ = null;
        if (aliasBuilder_ != null) {
          aliasBuilder_.dispose();
          aliasBuilder_ = null;
        }
        hopRange_ = null;
        if (hopRangeBuilder_ != null) {
          hopRangeBuilder_.dispose();
          hopRangeBuilder_ = null;
        }
        pathOpt_ = 0;
        resultOpt_ = 0;
        condition_ = null;
        if (conditionBuilder_ != null) {
          conditionBuilder_.dispose();
          conditionBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_PathExpand_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.base_ = baseBuilder_ == null
              ? base_
              : baseBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.startTag_ = startTagBuilder_ == null
              ? startTag_
              : startTagBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.alias_ = aliasBuilder_ == null
              ? alias_
              : aliasBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.hopRange_ = hopRangeBuilder_ == null
              ? hopRange_
              : hopRangeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.pathOpt_ = pathOpt_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.resultOpt_ = resultOpt_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.condition_ = conditionBuilder_ == null
              ? condition_
              : conditionBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.getDefaultInstance()) return this;
        if (other.hasBase()) {
          mergeBase(other.getBase());
        }
        if (other.hasStartTag()) {
          mergeStartTag(other.getStartTag());
        }
        if (other.hasAlias()) {
          mergeAlias(other.getAlias());
        }
        if (other.hasHopRange()) {
          mergeHopRange(other.getHopRange());
        }
        if (other.pathOpt_ != 0) {
          setPathOptValue(other.getPathOptValue());
        }
        if (other.resultOpt_ != 0) {
          setResultOptValue(other.getResultOptValue());
        }
        if (other.hasCondition()) {
          mergeCondition(other.getCondition());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getBaseFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getStartTagFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getAliasFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getHopRangeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 40: {
                pathOpt_ = input.readEnum();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                resultOpt_ = input.readEnum();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 58: {
                input.readMessage(
                    getConditionFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase base_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBaseOrBuilder> baseBuilder_;
      /**
       * <pre>
       * A path expansion has a base expansion
       * </pre>
       *
       * <code>.algebra.PathExpand.ExpandBase base = 1;</code>
       * @return Whether the base field is set.
       */
      public boolean hasBase() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * A path expansion has a base expansion
       * </pre>
       *
       * <code>.algebra.PathExpand.ExpandBase base = 1;</code>
       * @return The base.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase getBase() {
        if (baseBuilder_ == null) {
          return base_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase.getDefaultInstance() : base_;
        } else {
          return baseBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * A path expansion has a base expansion
       * </pre>
       *
       * <code>.algebra.PathExpand.ExpandBase base = 1;</code>
       */
      public Builder setBase(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase value) {
        if (baseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          base_ = value;
        } else {
          baseBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A path expansion has a base expansion
       * </pre>
       *
       * <code>.algebra.PathExpand.ExpandBase base = 1;</code>
       */
      public Builder setBase(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase.Builder builderForValue) {
        if (baseBuilder_ == null) {
          base_ = builderForValue.build();
        } else {
          baseBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A path expansion has a base expansion
       * </pre>
       *
       * <code>.algebra.PathExpand.ExpandBase base = 1;</code>
       */
      public Builder mergeBase(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase value) {
        if (baseBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            base_ != null &&
            base_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase.getDefaultInstance()) {
            getBaseBuilder().mergeFrom(value);
          } else {
            base_ = value;
          }
        } else {
          baseBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A path expansion has a base expansion
       * </pre>
       *
       * <code>.algebra.PathExpand.ExpandBase base = 1;</code>
       */
      public Builder clearBase() {
        bitField0_ = (bitField0_ & ~0x00000001);
        base_ = null;
        if (baseBuilder_ != null) {
          baseBuilder_.dispose();
          baseBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A path expansion has a base expansion
       * </pre>
       *
       * <code>.algebra.PathExpand.ExpandBase base = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase.Builder getBaseBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getBaseFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * A path expansion has a base expansion
       * </pre>
       *
       * <code>.algebra.PathExpand.ExpandBase base = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBaseOrBuilder getBaseOrBuilder() {
        if (baseBuilder_ != null) {
          return baseBuilder_.getMessageOrBuilder();
        } else {
          return base_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase.getDefaultInstance() : base_;
        }
      }
      /**
       * <pre>
       * A path expansion has a base expansion
       * </pre>
       *
       * <code>.algebra.PathExpand.ExpandBase base = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBaseOrBuilder> 
          getBaseFieldBuilder() {
        if (baseBuilder_ == null) {
          baseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBase.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ExpandBaseOrBuilder>(
                  getBase(),
                  getParentForChildren(),
                  isClean());
          base_ = null;
        }
        return baseBuilder_;
      }

      private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId startTag_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> startTagBuilder_;
      /**
       * <pre>
       * The tag that refers to the starting vertex
       * </pre>
       *
       * <code>.common.NameOrId start_tag = 2;</code>
       * @return Whether the startTag field is set.
       */
      public boolean hasStartTag() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The tag that refers to the starting vertex
       * </pre>
       *
       * <code>.common.NameOrId start_tag = 2;</code>
       * @return The startTag.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getStartTag() {
        if (startTagBuilder_ == null) {
          return startTag_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : startTag_;
        } else {
          return startTagBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The tag that refers to the starting vertex
       * </pre>
       *
       * <code>.common.NameOrId start_tag = 2;</code>
       */
      public Builder setStartTag(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (startTagBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          startTag_ = value;
        } else {
          startTagBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The tag that refers to the starting vertex
       * </pre>
       *
       * <code>.common.NameOrId start_tag = 2;</code>
       */
      public Builder setStartTag(
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
        if (startTagBuilder_ == null) {
          startTag_ = builderForValue.build();
        } else {
          startTagBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The tag that refers to the starting vertex
       * </pre>
       *
       * <code>.common.NameOrId start_tag = 2;</code>
       */
      public Builder mergeStartTag(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (startTagBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            startTag_ != null &&
            startTag_ != com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance()) {
            getStartTagBuilder().mergeFrom(value);
          } else {
            startTag_ = value;
          }
        } else {
          startTagBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The tag that refers to the starting vertex
       * </pre>
       *
       * <code>.common.NameOrId start_tag = 2;</code>
       */
      public Builder clearStartTag() {
        bitField0_ = (bitField0_ & ~0x00000002);
        startTag_ = null;
        if (startTagBuilder_ != null) {
          startTagBuilder_.dispose();
          startTagBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The tag that refers to the starting vertex
       * </pre>
       *
       * <code>.common.NameOrId start_tag = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder getStartTagBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getStartTagFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The tag that refers to the starting vertex
       * </pre>
       *
       * <code>.common.NameOrId start_tag = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getStartTagOrBuilder() {
        if (startTagBuilder_ != null) {
          return startTagBuilder_.getMessageOrBuilder();
        } else {
          return startTag_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : startTag_;
        }
      }
      /**
       * <pre>
       * The tag that refers to the starting vertex
       * </pre>
       *
       * <code>.common.NameOrId start_tag = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
          getStartTagFieldBuilder() {
        if (startTagBuilder_ == null) {
          startTagBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder>(
                  getStartTag(),
                  getParentForChildren(),
                  isClean());
          startTag_ = null;
        }
        return startTagBuilder_;
      }

      private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId alias_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> aliasBuilder_;
      /**
       * <pre>
       * An optional alias for the object of the expansion
       * </pre>
       *
       * <code>.common.NameOrId alias = 3;</code>
       * @return Whether the alias field is set.
       */
      public boolean hasAlias() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * An optional alias for the object of the expansion
       * </pre>
       *
       * <code>.common.NameOrId alias = 3;</code>
       * @return The alias.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias() {
        if (aliasBuilder_ == null) {
          return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
        } else {
          return aliasBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * An optional alias for the object of the expansion
       * </pre>
       *
       * <code>.common.NameOrId alias = 3;</code>
       */
      public Builder setAlias(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (aliasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          alias_ = value;
        } else {
          aliasBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional alias for the object of the expansion
       * </pre>
       *
       * <code>.common.NameOrId alias = 3;</code>
       */
      public Builder setAlias(
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
        if (aliasBuilder_ == null) {
          alias_ = builderForValue.build();
        } else {
          aliasBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional alias for the object of the expansion
       * </pre>
       *
       * <code>.common.NameOrId alias = 3;</code>
       */
      public Builder mergeAlias(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (aliasBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            alias_ != null &&
            alias_ != com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance()) {
            getAliasBuilder().mergeFrom(value);
          } else {
            alias_ = value;
          }
        } else {
          aliasBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional alias for the object of the expansion
       * </pre>
       *
       * <code>.common.NameOrId alias = 3;</code>
       */
      public Builder clearAlias() {
        bitField0_ = (bitField0_ & ~0x00000004);
        alias_ = null;
        if (aliasBuilder_ != null) {
          aliasBuilder_.dispose();
          aliasBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An optional alias for the object of the expansion
       * </pre>
       *
       * <code>.common.NameOrId alias = 3;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder getAliasBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getAliasFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * An optional alias for the object of the expansion
       * </pre>
       *
       * <code>.common.NameOrId alias = 3;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder() {
        if (aliasBuilder_ != null) {
          return aliasBuilder_.getMessageOrBuilder();
        } else {
          return alias_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
        }
      }
      /**
       * <pre>
       * An optional alias for the object of the expansion
       * </pre>
       *
       * <code>.common.NameOrId alias = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
          getAliasFieldBuilder() {
        if (aliasBuilder_ == null) {
          aliasBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder>(
                  getAlias(),
                  getParentForChildren(),
                  isClean());
          alias_ = null;
        }
        return aliasBuilder_;
      }

      private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range hopRange_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RangeOrBuilder> hopRangeBuilder_;
      /**
       * <pre>
       * The range that defines the minimum and maximum number of hops of the path expansion.
       * This is optional, if not set, the minimum number is 1, and the maximum is INT_MAX
       * </pre>
       *
       * <code>.algebra.Range hop_range = 4;</code>
       * @return Whether the hopRange field is set.
       */
      public boolean hasHopRange() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The range that defines the minimum and maximum number of hops of the path expansion.
       * This is optional, if not set, the minimum number is 1, and the maximum is INT_MAX
       * </pre>
       *
       * <code>.algebra.Range hop_range = 4;</code>
       * @return The hopRange.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range getHopRange() {
        if (hopRangeBuilder_ == null) {
          return hopRange_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.getDefaultInstance() : hopRange_;
        } else {
          return hopRangeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The range that defines the minimum and maximum number of hops of the path expansion.
       * This is optional, if not set, the minimum number is 1, and the maximum is INT_MAX
       * </pre>
       *
       * <code>.algebra.Range hop_range = 4;</code>
       */
      public Builder setHopRange(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range value) {
        if (hopRangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hopRange_ = value;
        } else {
          hopRangeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The range that defines the minimum and maximum number of hops of the path expansion.
       * This is optional, if not set, the minimum number is 1, and the maximum is INT_MAX
       * </pre>
       *
       * <code>.algebra.Range hop_range = 4;</code>
       */
      public Builder setHopRange(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.Builder builderForValue) {
        if (hopRangeBuilder_ == null) {
          hopRange_ = builderForValue.build();
        } else {
          hopRangeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The range that defines the minimum and maximum number of hops of the path expansion.
       * This is optional, if not set, the minimum number is 1, and the maximum is INT_MAX
       * </pre>
       *
       * <code>.algebra.Range hop_range = 4;</code>
       */
      public Builder mergeHopRange(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range value) {
        if (hopRangeBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            hopRange_ != null &&
            hopRange_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.getDefaultInstance()) {
            getHopRangeBuilder().mergeFrom(value);
          } else {
            hopRange_ = value;
          }
        } else {
          hopRangeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The range that defines the minimum and maximum number of hops of the path expansion.
       * This is optional, if not set, the minimum number is 1, and the maximum is INT_MAX
       * </pre>
       *
       * <code>.algebra.Range hop_range = 4;</code>
       */
      public Builder clearHopRange() {
        bitField0_ = (bitField0_ & ~0x00000008);
        hopRange_ = null;
        if (hopRangeBuilder_ != null) {
          hopRangeBuilder_.dispose();
          hopRangeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The range that defines the minimum and maximum number of hops of the path expansion.
       * This is optional, if not set, the minimum number is 1, and the maximum is INT_MAX
       * </pre>
       *
       * <code>.algebra.Range hop_range = 4;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.Builder getHopRangeBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getHopRangeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The range that defines the minimum and maximum number of hops of the path expansion.
       * This is optional, if not set, the minimum number is 1, and the maximum is INT_MAX
       * </pre>
       *
       * <code>.algebra.Range hop_range = 4;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RangeOrBuilder getHopRangeOrBuilder() {
        if (hopRangeBuilder_ != null) {
          return hopRangeBuilder_.getMessageOrBuilder();
        } else {
          return hopRange_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.getDefaultInstance() : hopRange_;
        }
      }
      /**
       * <pre>
       * The range that defines the minimum and maximum number of hops of the path expansion.
       * This is optional, if not set, the minimum number is 1, and the maximum is INT_MAX
       * </pre>
       *
       * <code>.algebra.Range hop_range = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RangeOrBuilder> 
          getHopRangeFieldBuilder() {
        if (hopRangeBuilder_ == null) {
          hopRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Range.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RangeOrBuilder>(
                  getHopRange(),
                  getParentForChildren(),
                  isClean());
          hopRange_ = null;
        }
        return hopRangeBuilder_;
      }

      private int pathOpt_ = 0;
      /**
       * <pre>
       * Path option, including to expand an arbitrary path or a simple path
       * </pre>
       *
       * <code>.algebra.PathExpand.PathOpt path_opt = 5;</code>
       * @return The enum numeric value on the wire for pathOpt.
       */
      @java.lang.Override public int getPathOptValue() {
        return pathOpt_;
      }
      /**
       * <pre>
       * Path option, including to expand an arbitrary path or a simple path
       * </pre>
       *
       * <code>.algebra.PathExpand.PathOpt path_opt = 5;</code>
       * @param value The enum numeric value on the wire for pathOpt to set.
       * @return This builder for chaining.
       */
      public Builder setPathOptValue(int value) {
        pathOpt_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Path option, including to expand an arbitrary path or a simple path
       * </pre>
       *
       * <code>.algebra.PathExpand.PathOpt path_opt = 5;</code>
       * @return The pathOpt.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.PathOpt getPathOpt() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.PathOpt result = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.PathOpt.forNumber(pathOpt_);
        return result == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.PathOpt.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Path option, including to expand an arbitrary path or a simple path
       * </pre>
       *
       * <code>.algebra.PathExpand.PathOpt path_opt = 5;</code>
       * @param value The pathOpt to set.
       * @return This builder for chaining.
       */
      public Builder setPathOpt(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.PathOpt value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        pathOpt_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Path option, including to expand an arbitrary path or a simple path
       * </pre>
       *
       * <code>.algebra.PathExpand.PathOpt path_opt = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearPathOpt() {
        bitField0_ = (bitField0_ & ~0x00000010);
        pathOpt_ = 0;
        onChanged();
        return this;
      }

      private int resultOpt_ = 0;
      /**
       * <pre>
       * Result option, including to take end vertex (EndV), or whole path (AllV), for this expansion
       * </pre>
       *
       * <code>.algebra.PathExpand.ResultOpt result_opt = 6;</code>
       * @return The enum numeric value on the wire for resultOpt.
       */
      @java.lang.Override public int getResultOptValue() {
        return resultOpt_;
      }
      /**
       * <pre>
       * Result option, including to take end vertex (EndV), or whole path (AllV), for this expansion
       * </pre>
       *
       * <code>.algebra.PathExpand.ResultOpt result_opt = 6;</code>
       * @param value The enum numeric value on the wire for resultOpt to set.
       * @return This builder for chaining.
       */
      public Builder setResultOptValue(int value) {
        resultOpt_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Result option, including to take end vertex (EndV), or whole path (AllV), for this expansion
       * </pre>
       *
       * <code>.algebra.PathExpand.ResultOpt result_opt = 6;</code>
       * @return The resultOpt.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ResultOpt getResultOpt() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ResultOpt result = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ResultOpt.forNumber(resultOpt_);
        return result == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ResultOpt.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Result option, including to take end vertex (EndV), or whole path (AllV), for this expansion
       * </pre>
       *
       * <code>.algebra.PathExpand.ResultOpt result_opt = 6;</code>
       * @param value The resultOpt to set.
       * @return This builder for chaining.
       */
      public Builder setResultOpt(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.ResultOpt value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        resultOpt_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Result option, including to take end vertex (EndV), or whole path (AllV), for this expansion
       * </pre>
       *
       * <code>.algebra.PathExpand.ResultOpt result_opt = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearResultOpt() {
        bitField0_ = (bitField0_ & ~0x00000020);
        resultOpt_ = 0;
        onChanged();
        return this;
      }

      private com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression condition_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.ExpressionOrBuilder> conditionBuilder_;
      /**
       * <pre>
       * A condition formulated as an expression predicate
       * </pre>
       *
       * <code>.common.Expression condition = 7;</code>
       * @return Whether the condition field is set.
       */
      public boolean hasCondition() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * A condition formulated as an expression predicate
       * </pre>
       *
       * <code>.common.Expression condition = 7;</code>
       * @return The condition.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression getCondition() {
        if (conditionBuilder_ == null) {
          return condition_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.getDefaultInstance() : condition_;
        } else {
          return conditionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * A condition formulated as an expression predicate
       * </pre>
       *
       * <code>.common.Expression condition = 7;</code>
       */
      public Builder setCondition(com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression value) {
        if (conditionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          condition_ = value;
        } else {
          conditionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A condition formulated as an expression predicate
       * </pre>
       *
       * <code>.common.Expression condition = 7;</code>
       */
      public Builder setCondition(
          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.Builder builderForValue) {
        if (conditionBuilder_ == null) {
          condition_ = builderForValue.build();
        } else {
          conditionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A condition formulated as an expression predicate
       * </pre>
       *
       * <code>.common.Expression condition = 7;</code>
       */
      public Builder mergeCondition(com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression value) {
        if (conditionBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0) &&
            condition_ != null &&
            condition_ != com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.getDefaultInstance()) {
            getConditionBuilder().mergeFrom(value);
          } else {
            condition_ = value;
          }
        } else {
          conditionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A condition formulated as an expression predicate
       * </pre>
       *
       * <code>.common.Expression condition = 7;</code>
       */
      public Builder clearCondition() {
        bitField0_ = (bitField0_ & ~0x00000040);
        condition_ = null;
        if (conditionBuilder_ != null) {
          conditionBuilder_.dispose();
          conditionBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A condition formulated as an expression predicate
       * </pre>
       *
       * <code>.common.Expression condition = 7;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.Builder getConditionBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getConditionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * A condition formulated as an expression predicate
       * </pre>
       *
       * <code>.common.Expression condition = 7;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.ExpressionOrBuilder getConditionOrBuilder() {
        if (conditionBuilder_ != null) {
          return conditionBuilder_.getMessageOrBuilder();
        } else {
          return condition_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.getDefaultInstance() : condition_;
        }
      }
      /**
       * <pre>
       * A condition formulated as an expression predicate
       * </pre>
       *
       * <code>.common.Expression condition = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.ExpressionOrBuilder> 
          getConditionFieldBuilder() {
        if (conditionBuilder_ == null) {
          conditionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Expression.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.ExpressionOrBuilder>(
                  getCondition(),
                  getParentForChildren(),
                  isClean());
          condition_ = null;
        }
        return conditionBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.PathExpand)
    }

    // @@protoc_insertion_point(class_scope:algebra.PathExpand)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PathExpand>
        PARSER = new com.google.protobuf.AbstractParser<PathExpand>() {
      @java.lang.Override
      public PathExpand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PathExpand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PathExpand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ApplyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.Apply)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Define how to join the result of the subtask back to the original relation
     * </pre>
     *
     * <code>.algebra.Join.JoinKind join_kind = 1;</code>
     * @return The enum numeric value on the wire for joinKind.
     */
    int getJoinKindValue();
    /**
     * <pre>
     * Define how to join the result of the subtask back to the original relation
     * </pre>
     *
     * <code>.algebra.Join.JoinKind join_kind = 1;</code>
     * @return The joinKind.
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind getJoinKind();

    /**
     * <pre>
     * To project on certain tags of the input relation to execute the subtask
     * </pre>
     *
     * <code>repeated .common.NameOrId tags = 2;</code>
     */
    java.util.List<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId> 
        getTagsList();
    /**
     * <pre>
     * To project on certain tags of the input relation to execute the subtask
     * </pre>
     *
     * <code>repeated .common.NameOrId tags = 2;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getTags(int index);
    /**
     * <pre>
     * To project on certain tags of the input relation to execute the subtask
     * </pre>
     *
     * <code>repeated .common.NameOrId tags = 2;</code>
     */
    int getTagsCount();
    /**
     * <pre>
     * To project on certain tags of the input relation to execute the subtask
     * </pre>
     *
     * <code>repeated .common.NameOrId tags = 2;</code>
     */
    java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
        getTagsOrBuilderList();
    /**
     * <pre>
     * To project on certain tags of the input relation to execute the subtask
     * </pre>
     *
     * <code>repeated .common.NameOrId tags = 2;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getTagsOrBuilder(
        int index);

    /**
     * <pre>
     * The subtask will be perform on certain tags as keys of the input relation
     * </pre>
     *
     * <code>int32 subtask = 3;</code>
     * @return The subtask.
     */
    int getSubtask();

    /**
     * <pre>
     * Define the alias of output from `Apply`
     * </pre>
     *
     * <code>.common.NameOrId alias = 4;</code>
     * @return Whether the alias field is set.
     */
    boolean hasAlias();
    /**
     * <pre>
     * Define the alias of output from `Apply`
     * </pre>
     *
     * <code>.common.NameOrId alias = 4;</code>
     * @return The alias.
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias();
    /**
     * <pre>
     * Define the alias of output from `Apply`
     * </pre>
     *
     * <code>.common.NameOrId alias = 4;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder();
  }
  /**
   * <pre>
   * Apply is a relational operation where it first performs a inner correlated subtask for each tuple
   * of input relations, and then the result of the subtask will be joined back to each input tuple.
   * </pre>
   *
   * Protobuf type {@code algebra.Apply}
   */
  public static final class Apply extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.Apply)
      ApplyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Apply.newBuilder() to construct.
    private Apply(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Apply() {
      joinKind_ = 0;
      tags_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Apply();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Apply_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Apply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.Builder.class);
    }

    public static final int JOIN_KIND_FIELD_NUMBER = 1;
    private int joinKind_ = 0;
    /**
     * <pre>
     * Define how to join the result of the subtask back to the original relation
     * </pre>
     *
     * <code>.algebra.Join.JoinKind join_kind = 1;</code>
     * @return The enum numeric value on the wire for joinKind.
     */
    @java.lang.Override public int getJoinKindValue() {
      return joinKind_;
    }
    /**
     * <pre>
     * Define how to join the result of the subtask back to the original relation
     * </pre>
     *
     * <code>.algebra.Join.JoinKind join_kind = 1;</code>
     * @return The joinKind.
     */
    @java.lang.Override public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind getJoinKind() {
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind result = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind.forNumber(joinKind_);
      return result == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind.UNRECOGNIZED : result;
    }

    public static final int TAGS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId> tags_;
    /**
     * <pre>
     * To project on certain tags of the input relation to execute the subtask
     * </pre>
     *
     * <code>repeated .common.NameOrId tags = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId> getTagsList() {
      return tags_;
    }
    /**
     * <pre>
     * To project on certain tags of the input relation to execute the subtask
     * </pre>
     *
     * <code>repeated .common.NameOrId tags = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
        getTagsOrBuilderList() {
      return tags_;
    }
    /**
     * <pre>
     * To project on certain tags of the input relation to execute the subtask
     * </pre>
     *
     * <code>repeated .common.NameOrId tags = 2;</code>
     */
    @java.lang.Override
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <pre>
     * To project on certain tags of the input relation to execute the subtask
     * </pre>
     *
     * <code>repeated .common.NameOrId tags = 2;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getTags(int index) {
      return tags_.get(index);
    }
    /**
     * <pre>
     * To project on certain tags of the input relation to execute the subtask
     * </pre>
     *
     * <code>repeated .common.NameOrId tags = 2;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getTagsOrBuilder(
        int index) {
      return tags_.get(index);
    }

    public static final int SUBTASK_FIELD_NUMBER = 3;
    private int subtask_ = 0;
    /**
     * <pre>
     * The subtask will be perform on certain tags as keys of the input relation
     * </pre>
     *
     * <code>int32 subtask = 3;</code>
     * @return The subtask.
     */
    @java.lang.Override
    public int getSubtask() {
      return subtask_;
    }

    public static final int ALIAS_FIELD_NUMBER = 4;
    private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId alias_;
    /**
     * <pre>
     * Define the alias of output from `Apply`
     * </pre>
     *
     * <code>.common.NameOrId alias = 4;</code>
     * @return Whether the alias field is set.
     */
    @java.lang.Override
    public boolean hasAlias() {
      return alias_ != null;
    }
    /**
     * <pre>
     * Define the alias of output from `Apply`
     * </pre>
     *
     * <code>.common.NameOrId alias = 4;</code>
     * @return The alias.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias() {
      return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
    }
    /**
     * <pre>
     * Define the alias of output from `Apply`
     * </pre>
     *
     * <code>.common.NameOrId alias = 4;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder() {
      return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (joinKind_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind.INNER.getNumber()) {
        output.writeEnum(1, joinKind_);
      }
      for (int i = 0; i < tags_.size(); i++) {
        output.writeMessage(2, tags_.get(i));
      }
      if (subtask_ != 0) {
        output.writeInt32(3, subtask_);
      }
      if (alias_ != null) {
        output.writeMessage(4, getAlias());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (joinKind_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind.INNER.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, joinKind_);
      }
      for (int i = 0; i < tags_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, tags_.get(i));
      }
      if (subtask_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, subtask_);
      }
      if (alias_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getAlias());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply) obj;

      if (joinKind_ != other.joinKind_) return false;
      if (!getTagsList()
          .equals(other.getTagsList())) return false;
      if (getSubtask()
          != other.getSubtask()) return false;
      if (hasAlias() != other.hasAlias()) return false;
      if (hasAlias()) {
        if (!getAlias()
            .equals(other.getAlias())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + JOIN_KIND_FIELD_NUMBER;
      hash = (53 * hash) + joinKind_;
      if (getTagsCount() > 0) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + getTagsList().hashCode();
      }
      hash = (37 * hash) + SUBTASK_FIELD_NUMBER;
      hash = (53 * hash) + getSubtask();
      if (hasAlias()) {
        hash = (37 * hash) + ALIAS_FIELD_NUMBER;
        hash = (53 * hash) + getAlias().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Apply is a relational operation where it first performs a inner correlated subtask for each tuple
     * of input relations, and then the result of the subtask will be joined back to each input tuple.
     * </pre>
     *
     * Protobuf type {@code algebra.Apply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.Apply)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ApplyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Apply_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Apply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        joinKind_ = 0;
        if (tagsBuilder_ == null) {
          tags_ = java.util.Collections.emptyList();
        } else {
          tags_ = null;
          tagsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        subtask_ = 0;
        alias_ = null;
        if (aliasBuilder_ != null) {
          aliasBuilder_.dispose();
          aliasBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Apply_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply result) {
        if (tagsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            tags_ = java.util.Collections.unmodifiableList(tags_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.tags_ = tags_;
        } else {
          result.tags_ = tagsBuilder_.build();
        }
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.joinKind_ = joinKind_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.subtask_ = subtask_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.alias_ = aliasBuilder_ == null
              ? alias_
              : aliasBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.getDefaultInstance()) return this;
        if (other.joinKind_ != 0) {
          setJoinKindValue(other.getJoinKindValue());
        }
        if (tagsBuilder_ == null) {
          if (!other.tags_.isEmpty()) {
            if (tags_.isEmpty()) {
              tags_ = other.tags_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTagsIsMutable();
              tags_.addAll(other.tags_);
            }
            onChanged();
          }
        } else {
          if (!other.tags_.isEmpty()) {
            if (tagsBuilder_.isEmpty()) {
              tagsBuilder_.dispose();
              tagsBuilder_ = null;
              tags_ = other.tags_;
              bitField0_ = (bitField0_ & ~0x00000002);
              tagsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTagsFieldBuilder() : null;
            } else {
              tagsBuilder_.addAllMessages(other.tags_);
            }
          }
        }
        if (other.getSubtask() != 0) {
          setSubtask(other.getSubtask());
        }
        if (other.hasAlias()) {
          mergeAlias(other.getAlias());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                joinKind_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId m =
                    input.readMessage(
                        com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.parser(),
                        extensionRegistry);
                if (tagsBuilder_ == null) {
                  ensureTagsIsMutable();
                  tags_.add(m);
                } else {
                  tagsBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 24: {
                subtask_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 34: {
                input.readMessage(
                    getAliasFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int joinKind_ = 0;
      /**
       * <pre>
       * Define how to join the result of the subtask back to the original relation
       * </pre>
       *
       * <code>.algebra.Join.JoinKind join_kind = 1;</code>
       * @return The enum numeric value on the wire for joinKind.
       */
      @java.lang.Override public int getJoinKindValue() {
        return joinKind_;
      }
      /**
       * <pre>
       * Define how to join the result of the subtask back to the original relation
       * </pre>
       *
       * <code>.algebra.Join.JoinKind join_kind = 1;</code>
       * @param value The enum numeric value on the wire for joinKind to set.
       * @return This builder for chaining.
       */
      public Builder setJoinKindValue(int value) {
        joinKind_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Define how to join the result of the subtask back to the original relation
       * </pre>
       *
       * <code>.algebra.Join.JoinKind join_kind = 1;</code>
       * @return The joinKind.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind getJoinKind() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind result = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind.forNumber(joinKind_);
        return result == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Define how to join the result of the subtask back to the original relation
       * </pre>
       *
       * <code>.algebra.Join.JoinKind join_kind = 1;</code>
       * @param value The joinKind to set.
       * @return This builder for chaining.
       */
      public Builder setJoinKind(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        joinKind_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Define how to join the result of the subtask back to the original relation
       * </pre>
       *
       * <code>.algebra.Join.JoinKind join_kind = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearJoinKind() {
        bitField0_ = (bitField0_ & ~0x00000001);
        joinKind_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId> tags_ =
        java.util.Collections.emptyList();
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          tags_ = new java.util.ArrayList<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId>(tags_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> tagsBuilder_;

      /**
       * <pre>
       * To project on certain tags of the input relation to execute the subtask
       * </pre>
       *
       * <code>repeated .common.NameOrId tags = 2;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId> getTagsList() {
        if (tagsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tags_);
        } else {
          return tagsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * To project on certain tags of the input relation to execute the subtask
       * </pre>
       *
       * <code>repeated .common.NameOrId tags = 2;</code>
       */
      public int getTagsCount() {
        if (tagsBuilder_ == null) {
          return tags_.size();
        } else {
          return tagsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * To project on certain tags of the input relation to execute the subtask
       * </pre>
       *
       * <code>repeated .common.NameOrId tags = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getTags(int index) {
        if (tagsBuilder_ == null) {
          return tags_.get(index);
        } else {
          return tagsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * To project on certain tags of the input relation to execute the subtask
       * </pre>
       *
       * <code>repeated .common.NameOrId tags = 2;</code>
       */
      public Builder setTags(
          int index, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (tagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTagsIsMutable();
          tags_.set(index, value);
          onChanged();
        } else {
          tagsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * To project on certain tags of the input relation to execute the subtask
       * </pre>
       *
       * <code>repeated .common.NameOrId tags = 2;</code>
       */
      public Builder setTags(
          int index, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
        if (tagsBuilder_ == null) {
          ensureTagsIsMutable();
          tags_.set(index, builderForValue.build());
          onChanged();
        } else {
          tagsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * To project on certain tags of the input relation to execute the subtask
       * </pre>
       *
       * <code>repeated .common.NameOrId tags = 2;</code>
       */
      public Builder addTags(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (tagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTagsIsMutable();
          tags_.add(value);
          onChanged();
        } else {
          tagsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * To project on certain tags of the input relation to execute the subtask
       * </pre>
       *
       * <code>repeated .common.NameOrId tags = 2;</code>
       */
      public Builder addTags(
          int index, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (tagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTagsIsMutable();
          tags_.add(index, value);
          onChanged();
        } else {
          tagsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * To project on certain tags of the input relation to execute the subtask
       * </pre>
       *
       * <code>repeated .common.NameOrId tags = 2;</code>
       */
      public Builder addTags(
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
        if (tagsBuilder_ == null) {
          ensureTagsIsMutable();
          tags_.add(builderForValue.build());
          onChanged();
        } else {
          tagsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * To project on certain tags of the input relation to execute the subtask
       * </pre>
       *
       * <code>repeated .common.NameOrId tags = 2;</code>
       */
      public Builder addTags(
          int index, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
        if (tagsBuilder_ == null) {
          ensureTagsIsMutable();
          tags_.add(index, builderForValue.build());
          onChanged();
        } else {
          tagsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * To project on certain tags of the input relation to execute the subtask
       * </pre>
       *
       * <code>repeated .common.NameOrId tags = 2;</code>
       */
      public Builder addAllTags(
          java.lang.Iterable<? extends com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId> values) {
        if (tagsBuilder_ == null) {
          ensureTagsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tags_);
          onChanged();
        } else {
          tagsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * To project on certain tags of the input relation to execute the subtask
       * </pre>
       *
       * <code>repeated .common.NameOrId tags = 2;</code>
       */
      public Builder clearTags() {
        if (tagsBuilder_ == null) {
          tags_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          tagsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * To project on certain tags of the input relation to execute the subtask
       * </pre>
       *
       * <code>repeated .common.NameOrId tags = 2;</code>
       */
      public Builder removeTags(int index) {
        if (tagsBuilder_ == null) {
          ensureTagsIsMutable();
          tags_.remove(index);
          onChanged();
        } else {
          tagsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * To project on certain tags of the input relation to execute the subtask
       * </pre>
       *
       * <code>repeated .common.NameOrId tags = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder getTagsBuilder(
          int index) {
        return getTagsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * To project on certain tags of the input relation to execute the subtask
       * </pre>
       *
       * <code>repeated .common.NameOrId tags = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getTagsOrBuilder(
          int index) {
        if (tagsBuilder_ == null) {
          return tags_.get(index);  } else {
          return tagsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * To project on certain tags of the input relation to execute the subtask
       * </pre>
       *
       * <code>repeated .common.NameOrId tags = 2;</code>
       */
      public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
           getTagsOrBuilderList() {
        if (tagsBuilder_ != null) {
          return tagsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tags_);
        }
      }
      /**
       * <pre>
       * To project on certain tags of the input relation to execute the subtask
       * </pre>
       *
       * <code>repeated .common.NameOrId tags = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder addTagsBuilder() {
        return getTagsFieldBuilder().addBuilder(
            com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance());
      }
      /**
       * <pre>
       * To project on certain tags of the input relation to execute the subtask
       * </pre>
       *
       * <code>repeated .common.NameOrId tags = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder addTagsBuilder(
          int index) {
        return getTagsFieldBuilder().addBuilder(
            index, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance());
      }
      /**
       * <pre>
       * To project on certain tags of the input relation to execute the subtask
       * </pre>
       *
       * <code>repeated .common.NameOrId tags = 2;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder> 
           getTagsBuilderList() {
        return getTagsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
          getTagsFieldBuilder() {
        if (tagsBuilder_ == null) {
          tagsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder>(
                  tags_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          tags_ = null;
        }
        return tagsBuilder_;
      }

      private int subtask_ ;
      /**
       * <pre>
       * The subtask will be perform on certain tags as keys of the input relation
       * </pre>
       *
       * <code>int32 subtask = 3;</code>
       * @return The subtask.
       */
      @java.lang.Override
      public int getSubtask() {
        return subtask_;
      }
      /**
       * <pre>
       * The subtask will be perform on certain tags as keys of the input relation
       * </pre>
       *
       * <code>int32 subtask = 3;</code>
       * @param value The subtask to set.
       * @return This builder for chaining.
       */
      public Builder setSubtask(int value) {

        subtask_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The subtask will be perform on certain tags as keys of the input relation
       * </pre>
       *
       * <code>int32 subtask = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSubtask() {
        bitField0_ = (bitField0_ & ~0x00000004);
        subtask_ = 0;
        onChanged();
        return this;
      }

      private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId alias_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> aliasBuilder_;
      /**
       * <pre>
       * Define the alias of output from `Apply`
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       * @return Whether the alias field is set.
       */
      public boolean hasAlias() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Define the alias of output from `Apply`
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       * @return The alias.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getAlias() {
        if (aliasBuilder_ == null) {
          return alias_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
        } else {
          return aliasBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Define the alias of output from `Apply`
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       */
      public Builder setAlias(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (aliasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          alias_ = value;
        } else {
          aliasBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Define the alias of output from `Apply`
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       */
      public Builder setAlias(
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
        if (aliasBuilder_ == null) {
          alias_ = builderForValue.build();
        } else {
          aliasBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Define the alias of output from `Apply`
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       */
      public Builder mergeAlias(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (aliasBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            alias_ != null &&
            alias_ != com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance()) {
            getAliasBuilder().mergeFrom(value);
          } else {
            alias_ = value;
          }
        } else {
          aliasBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Define the alias of output from `Apply`
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       */
      public Builder clearAlias() {
        bitField0_ = (bitField0_ & ~0x00000008);
        alias_ = null;
        if (aliasBuilder_ != null) {
          aliasBuilder_.dispose();
          aliasBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Define the alias of output from `Apply`
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder getAliasBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getAliasFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Define the alias of output from `Apply`
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getAliasOrBuilder() {
        if (aliasBuilder_ != null) {
          return aliasBuilder_.getMessageOrBuilder();
        } else {
          return alias_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : alias_;
        }
      }
      /**
       * <pre>
       * Define the alias of output from `Apply`
       * </pre>
       *
       * <code>.common.NameOrId alias = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
          getAliasFieldBuilder() {
        if (aliasBuilder_ == null) {
          aliasBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder>(
                  getAlias(),
                  getParentForChildren(),
                  isClean());
          alias_ = null;
        }
        return aliasBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.Apply)
    }

    // @@protoc_insertion_point(class_scope:algebra.Apply)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Apply>
        PARSER = new com.google.protobuf.AbstractParser<Apply>() {
      @java.lang.Override
      public Apply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Apply> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Apply> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SegmentApplyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.SegmentApply)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
     * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
     * into the properties of a vertex/edge that the tag refers to.
     * </pre>
     *
     * <code>repeated .common.NameOrId keys = 1;</code>
     */
    java.util.List<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId> 
        getKeysList();
    /**
     * <pre>
     * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
     * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
     * into the properties of a vertex/edge that the tag refers to.
     * </pre>
     *
     * <code>repeated .common.NameOrId keys = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getKeys(int index);
    /**
     * <pre>
     * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
     * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
     * into the properties of a vertex/edge that the tag refers to.
     * </pre>
     *
     * <code>repeated .common.NameOrId keys = 1;</code>
     */
    int getKeysCount();
    /**
     * <pre>
     * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
     * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
     * into the properties of a vertex/edge that the tag refers to.
     * </pre>
     *
     * <code>repeated .common.NameOrId keys = 1;</code>
     */
    java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
        getKeysOrBuilderList();
    /**
     * <pre>
     * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
     * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
     * into the properties of a vertex/edge that the tag refers to.
     * </pre>
     *
     * <code>repeated .common.NameOrId keys = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getKeysOrBuilder(
        int index);

    /**
     * <pre>
     * A base of apply operation that is conducted on each group of the relations instead of tuple
     * </pre>
     *
     * <code>.algebra.Apply apply_subtask = 2;</code>
     * @return Whether the applySubtask field is set.
     */
    boolean hasApplySubtask();
    /**
     * <pre>
     * A base of apply operation that is conducted on each group of the relations instead of tuple
     * </pre>
     *
     * <code>.algebra.Apply apply_subtask = 2;</code>
     * @return The applySubtask.
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply getApplySubtask();
    /**
     * <pre>
     * A base of apply operation that is conducted on each group of the relations instead of tuple
     * </pre>
     *
     * <code>.algebra.Apply apply_subtask = 2;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ApplyOrBuilder getApplySubtaskOrBuilder();
  }
  /**
   * Protobuf type {@code algebra.SegmentApply}
   */
  public static final class SegmentApply extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.SegmentApply)
      SegmentApplyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SegmentApply.newBuilder() to construct.
    private SegmentApply(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SegmentApply() {
      keys_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SegmentApply();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_SegmentApply_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_SegmentApply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply.Builder.class);
    }

    public static final int KEYS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId> keys_;
    /**
     * <pre>
     * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
     * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
     * into the properties of a vertex/edge that the tag refers to.
     * </pre>
     *
     * <code>repeated .common.NameOrId keys = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId> getKeysList() {
      return keys_;
    }
    /**
     * <pre>
     * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
     * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
     * into the properties of a vertex/edge that the tag refers to.
     * </pre>
     *
     * <code>repeated .common.NameOrId keys = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
        getKeysOrBuilderList() {
      return keys_;
    }
    /**
     * <pre>
     * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
     * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
     * into the properties of a vertex/edge that the tag refers to.
     * </pre>
     *
     * <code>repeated .common.NameOrId keys = 1;</code>
     */
    @java.lang.Override
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <pre>
     * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
     * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
     * into the properties of a vertex/edge that the tag refers to.
     * </pre>
     *
     * <code>repeated .common.NameOrId keys = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getKeys(int index) {
      return keys_.get(index);
    }
    /**
     * <pre>
     * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
     * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
     * into the properties of a vertex/edge that the tag refers to.
     * </pre>
     *
     * <code>repeated .common.NameOrId keys = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getKeysOrBuilder(
        int index) {
      return keys_.get(index);
    }

    public static final int APPLY_SUBTASK_FIELD_NUMBER = 2;
    private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply applySubtask_;
    /**
     * <pre>
     * A base of apply operation that is conducted on each group of the relations instead of tuple
     * </pre>
     *
     * <code>.algebra.Apply apply_subtask = 2;</code>
     * @return Whether the applySubtask field is set.
     */
    @java.lang.Override
    public boolean hasApplySubtask() {
      return applySubtask_ != null;
    }
    /**
     * <pre>
     * A base of apply operation that is conducted on each group of the relations instead of tuple
     * </pre>
     *
     * <code>.algebra.Apply apply_subtask = 2;</code>
     * @return The applySubtask.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply getApplySubtask() {
      return applySubtask_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.getDefaultInstance() : applySubtask_;
    }
    /**
     * <pre>
     * A base of apply operation that is conducted on each group of the relations instead of tuple
     * </pre>
     *
     * <code>.algebra.Apply apply_subtask = 2;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ApplyOrBuilder getApplySubtaskOrBuilder() {
      return applySubtask_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.getDefaultInstance() : applySubtask_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < keys_.size(); i++) {
        output.writeMessage(1, keys_.get(i));
      }
      if (applySubtask_ != null) {
        output.writeMessage(2, getApplySubtask());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < keys_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, keys_.get(i));
      }
      if (applySubtask_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getApplySubtask());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply) obj;

      if (!getKeysList()
          .equals(other.getKeysList())) return false;
      if (hasApplySubtask() != other.hasApplySubtask()) return false;
      if (hasApplySubtask()) {
        if (!getApplySubtask()
            .equals(other.getApplySubtask())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getKeysCount() > 0) {
        hash = (37 * hash) + KEYS_FIELD_NUMBER;
        hash = (53 * hash) + getKeysList().hashCode();
      }
      if (hasApplySubtask()) {
        hash = (37 * hash) + APPLY_SUBTASK_FIELD_NUMBER;
        hash = (53 * hash) + getApplySubtask().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code algebra.SegmentApply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.SegmentApply)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApplyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_SegmentApply_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_SegmentApply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (keysBuilder_ == null) {
          keys_ = java.util.Collections.emptyList();
        } else {
          keys_ = null;
          keysBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        applySubtask_ = null;
        if (applySubtaskBuilder_ != null) {
          applySubtaskBuilder_.dispose();
          applySubtaskBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_SegmentApply_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply result) {
        if (keysBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            keys_ = java.util.Collections.unmodifiableList(keys_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.keys_ = keys_;
        } else {
          result.keys_ = keysBuilder_.build();
        }
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.applySubtask_ = applySubtaskBuilder_ == null
              ? applySubtask_
              : applySubtaskBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply.getDefaultInstance()) return this;
        if (keysBuilder_ == null) {
          if (!other.keys_.isEmpty()) {
            if (keys_.isEmpty()) {
              keys_ = other.keys_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureKeysIsMutable();
              keys_.addAll(other.keys_);
            }
            onChanged();
          }
        } else {
          if (!other.keys_.isEmpty()) {
            if (keysBuilder_.isEmpty()) {
              keysBuilder_.dispose();
              keysBuilder_ = null;
              keys_ = other.keys_;
              bitField0_ = (bitField0_ & ~0x00000001);
              keysBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getKeysFieldBuilder() : null;
            } else {
              keysBuilder_.addAllMessages(other.keys_);
            }
          }
        }
        if (other.hasApplySubtask()) {
          mergeApplySubtask(other.getApplySubtask());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId m =
                    input.readMessage(
                        com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.parser(),
                        extensionRegistry);
                if (keysBuilder_ == null) {
                  ensureKeysIsMutable();
                  keys_.add(m);
                } else {
                  keysBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getApplySubtaskFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId> keys_ =
        java.util.Collections.emptyList();
      private void ensureKeysIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          keys_ = new java.util.ArrayList<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId>(keys_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> keysBuilder_;

      /**
       * <pre>
       * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
       * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
       * into the properties of a vertex/edge that the tag refers to.
       * </pre>
       *
       * <code>repeated .common.NameOrId keys = 1;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId> getKeysList() {
        if (keysBuilder_ == null) {
          return java.util.Collections.unmodifiableList(keys_);
        } else {
          return keysBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
       * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
       * into the properties of a vertex/edge that the tag refers to.
       * </pre>
       *
       * <code>repeated .common.NameOrId keys = 1;</code>
       */
      public int getKeysCount() {
        if (keysBuilder_ == null) {
          return keys_.size();
        } else {
          return keysBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
       * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
       * into the properties of a vertex/edge that the tag refers to.
       * </pre>
       *
       * <code>repeated .common.NameOrId keys = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getKeys(int index) {
        if (keysBuilder_ == null) {
          return keys_.get(index);
        } else {
          return keysBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
       * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
       * into the properties of a vertex/edge that the tag refers to.
       * </pre>
       *
       * <code>repeated .common.NameOrId keys = 1;</code>
       */
      public Builder setKeys(
          int index, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (keysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKeysIsMutable();
          keys_.set(index, value);
          onChanged();
        } else {
          keysBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
       * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
       * into the properties of a vertex/edge that the tag refers to.
       * </pre>
       *
       * <code>repeated .common.NameOrId keys = 1;</code>
       */
      public Builder setKeys(
          int index, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
        if (keysBuilder_ == null) {
          ensureKeysIsMutable();
          keys_.set(index, builderForValue.build());
          onChanged();
        } else {
          keysBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
       * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
       * into the properties of a vertex/edge that the tag refers to.
       * </pre>
       *
       * <code>repeated .common.NameOrId keys = 1;</code>
       */
      public Builder addKeys(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (keysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKeysIsMutable();
          keys_.add(value);
          onChanged();
        } else {
          keysBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
       * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
       * into the properties of a vertex/edge that the tag refers to.
       * </pre>
       *
       * <code>repeated .common.NameOrId keys = 1;</code>
       */
      public Builder addKeys(
          int index, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
        if (keysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKeysIsMutable();
          keys_.add(index, value);
          onChanged();
        } else {
          keysBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
       * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
       * into the properties of a vertex/edge that the tag refers to.
       * </pre>
       *
       * <code>repeated .common.NameOrId keys = 1;</code>
       */
      public Builder addKeys(
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
        if (keysBuilder_ == null) {
          ensureKeysIsMutable();
          keys_.add(builderForValue.build());
          onChanged();
        } else {
          keysBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
       * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
       * into the properties of a vertex/edge that the tag refers to.
       * </pre>
       *
       * <code>repeated .common.NameOrId keys = 1;</code>
       */
      public Builder addKeys(
          int index, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
        if (keysBuilder_ == null) {
          ensureKeysIsMutable();
          keys_.add(index, builderForValue.build());
          onChanged();
        } else {
          keysBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
       * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
       * into the properties of a vertex/edge that the tag refers to.
       * </pre>
       *
       * <code>repeated .common.NameOrId keys = 1;</code>
       */
      public Builder addAllKeys(
          java.lang.Iterable<? extends com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId> values) {
        if (keysBuilder_ == null) {
          ensureKeysIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, keys_);
          onChanged();
        } else {
          keysBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
       * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
       * into the properties of a vertex/edge that the tag refers to.
       * </pre>
       *
       * <code>repeated .common.NameOrId keys = 1;</code>
       */
      public Builder clearKeys() {
        if (keysBuilder_ == null) {
          keys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          keysBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
       * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
       * into the properties of a vertex/edge that the tag refers to.
       * </pre>
       *
       * <code>repeated .common.NameOrId keys = 1;</code>
       */
      public Builder removeKeys(int index) {
        if (keysBuilder_ == null) {
          ensureKeysIsMutable();
          keys_.remove(index);
          onChanged();
        } else {
          keysBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
       * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
       * into the properties of a vertex/edge that the tag refers to.
       * </pre>
       *
       * <code>repeated .common.NameOrId keys = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder getKeysBuilder(
          int index) {
        return getKeysFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
       * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
       * into the properties of a vertex/edge that the tag refers to.
       * </pre>
       *
       * <code>repeated .common.NameOrId keys = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getKeysOrBuilder(
          int index) {
        if (keysBuilder_ == null) {
          return keys_.get(index);  } else {
          return keysBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
       * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
       * into the properties of a vertex/edge that the tag refers to.
       * </pre>
       *
       * <code>repeated .common.NameOrId keys = 1;</code>
       */
      public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
           getKeysOrBuilderList() {
        if (keysBuilder_ != null) {
          return keysBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(keys_);
        }
      }
      /**
       * <pre>
       * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
       * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
       * into the properties of a vertex/edge that the tag refers to.
       * </pre>
       *
       * <code>repeated .common.NameOrId keys = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder addKeysBuilder() {
        return getKeysFieldBuilder().addBuilder(
            com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance());
      }
      /**
       * <pre>
       * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
       * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
       * into the properties of a vertex/edge that the tag refers to.
       * </pre>
       *
       * <code>repeated .common.NameOrId keys = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder addKeysBuilder(
          int index) {
        return getKeysFieldBuilder().addBuilder(
            index, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance());
      }
      /**
       * <pre>
       * The keys to perform grouping, or segmenting. For simplicity, we only allows grouping by the
       * existed tags of the graph relation, which is unlike GroupBy that we further allows digging
       * into the properties of a vertex/edge that the tag refers to.
       * </pre>
       *
       * <code>repeated .common.NameOrId keys = 1;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder> 
           getKeysBuilderList() {
        return getKeysFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
          getKeysFieldBuilder() {
        if (keysBuilder_ == null) {
          keysBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder>(
                  keys_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          keys_ = null;
        }
        return keysBuilder_;
      }

      private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply applySubtask_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ApplyOrBuilder> applySubtaskBuilder_;
      /**
       * <pre>
       * A base of apply operation that is conducted on each group of the relations instead of tuple
       * </pre>
       *
       * <code>.algebra.Apply apply_subtask = 2;</code>
       * @return Whether the applySubtask field is set.
       */
      public boolean hasApplySubtask() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * A base of apply operation that is conducted on each group of the relations instead of tuple
       * </pre>
       *
       * <code>.algebra.Apply apply_subtask = 2;</code>
       * @return The applySubtask.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply getApplySubtask() {
        if (applySubtaskBuilder_ == null) {
          return applySubtask_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.getDefaultInstance() : applySubtask_;
        } else {
          return applySubtaskBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * A base of apply operation that is conducted on each group of the relations instead of tuple
       * </pre>
       *
       * <code>.algebra.Apply apply_subtask = 2;</code>
       */
      public Builder setApplySubtask(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply value) {
        if (applySubtaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          applySubtask_ = value;
        } else {
          applySubtaskBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A base of apply operation that is conducted on each group of the relations instead of tuple
       * </pre>
       *
       * <code>.algebra.Apply apply_subtask = 2;</code>
       */
      public Builder setApplySubtask(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.Builder builderForValue) {
        if (applySubtaskBuilder_ == null) {
          applySubtask_ = builderForValue.build();
        } else {
          applySubtaskBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A base of apply operation that is conducted on each group of the relations instead of tuple
       * </pre>
       *
       * <code>.algebra.Apply apply_subtask = 2;</code>
       */
      public Builder mergeApplySubtask(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply value) {
        if (applySubtaskBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            applySubtask_ != null &&
            applySubtask_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.getDefaultInstance()) {
            getApplySubtaskBuilder().mergeFrom(value);
          } else {
            applySubtask_ = value;
          }
        } else {
          applySubtaskBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A base of apply operation that is conducted on each group of the relations instead of tuple
       * </pre>
       *
       * <code>.algebra.Apply apply_subtask = 2;</code>
       */
      public Builder clearApplySubtask() {
        bitField0_ = (bitField0_ & ~0x00000002);
        applySubtask_ = null;
        if (applySubtaskBuilder_ != null) {
          applySubtaskBuilder_.dispose();
          applySubtaskBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A base of apply operation that is conducted on each group of the relations instead of tuple
       * </pre>
       *
       * <code>.algebra.Apply apply_subtask = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.Builder getApplySubtaskBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getApplySubtaskFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * A base of apply operation that is conducted on each group of the relations instead of tuple
       * </pre>
       *
       * <code>.algebra.Apply apply_subtask = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ApplyOrBuilder getApplySubtaskOrBuilder() {
        if (applySubtaskBuilder_ != null) {
          return applySubtaskBuilder_.getMessageOrBuilder();
        } else {
          return applySubtask_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.getDefaultInstance() : applySubtask_;
        }
      }
      /**
       * <pre>
       * A base of apply operation that is conducted on each group of the relations instead of tuple
       * </pre>
       *
       * <code>.algebra.Apply apply_subtask = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ApplyOrBuilder> 
          getApplySubtaskFieldBuilder() {
        if (applySubtaskBuilder_ == null) {
          applySubtaskBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ApplyOrBuilder>(
                  getApplySubtask(),
                  getParentForChildren(),
                  isClean());
          applySubtask_ = null;
        }
        return applySubtaskBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.SegmentApply)
    }

    // @@protoc_insertion_point(class_scope:algebra.SegmentApply)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SegmentApply>
        PARSER = new com.google.protobuf.AbstractParser<SegmentApply>() {
      @java.lang.Override
      public SegmentApply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SegmentApply> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SegmentApply> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PatternOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.Pattern)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
     */
    java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence> 
        getSentencesList();
    /**
     * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence getSentences(int index);
    /**
     * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
     */
    int getSentencesCount();
    /**
     * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
     */
    java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.SentenceOrBuilder> 
        getSentencesOrBuilderList();
    /**
     * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.SentenceOrBuilder getSentencesOrBuilder(
        int index);

    /**
     * <code>repeated .algebra.MetaData meta_data = 2;</code>
     */
    java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData> 
        getMetaDataList();
    /**
     * <code>repeated .algebra.MetaData meta_data = 2;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData getMetaData(int index);
    /**
     * <code>repeated .algebra.MetaData meta_data = 2;</code>
     */
    int getMetaDataCount();
    /**
     * <code>repeated .algebra.MetaData meta_data = 2;</code>
     */
    java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder> 
        getMetaDataOrBuilderList();
    /**
     * <code>repeated .algebra.MetaData meta_data = 2;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder getMetaDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code algebra.Pattern}
   */
  public static final class Pattern extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.Pattern)
      PatternOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Pattern.newBuilder() to construct.
    private Pattern(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Pattern() {
      sentences_ = java.util.Collections.emptyList();
      metaData_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Pattern();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Pattern_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Pattern_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Builder.class);
    }

    public interface BinderOrBuilder extends
        // @@protoc_insertion_point(interface_extends:algebra.Pattern.Binder)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.algebra.EdgeExpand edge = 1;</code>
       * @return Whether the edge field is set.
       */
      boolean hasEdge();
      /**
       * <code>.algebra.EdgeExpand edge = 1;</code>
       * @return The edge.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand getEdge();
      /**
       * <code>.algebra.EdgeExpand edge = 1;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpandOrBuilder getEdgeOrBuilder();

      /**
       * <code>.algebra.PathExpand path = 2;</code>
       * @return Whether the path field is set.
       */
      boolean hasPath();
      /**
       * <code>.algebra.PathExpand path = 2;</code>
       * @return The path.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand getPath();
      /**
       * <code>.algebra.PathExpand path = 2;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpandOrBuilder getPathOrBuilder();

      /**
       * <code>.algebra.GetV vertex = 3;</code>
       * @return Whether the vertex field is set.
       */
      boolean hasVertex();
      /**
       * <code>.algebra.GetV vertex = 3;</code>
       * @return The vertex.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV getVertex();
      /**
       * <code>.algebra.GetV vertex = 3;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetVOrBuilder getVertexOrBuilder();

      /**
       * <code>.algebra.Select select = 4;</code>
       * @return Whether the select field is set.
       */
      boolean hasSelect();
      /**
       * <code>.algebra.Select select = 4;</code>
       * @return The select.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select getSelect();
      /**
       * <code>.algebra.Select select = 4;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SelectOrBuilder getSelectOrBuilder();

      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder.ItemCase getItemCase();
    }
    /**
     * Protobuf type {@code algebra.Pattern.Binder}
     */
    public static final class Binder extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:algebra.Pattern.Binder)
        BinderOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Binder.newBuilder() to construct.
      private Binder(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Binder() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Binder();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Pattern_Binder_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Pattern_Binder_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder.Builder.class);
      }

      private int itemCase_ = 0;
      @SuppressWarnings("serial")
      private java.lang.Object item_;
      public enum ItemCase
          implements com.google.protobuf.Internal.EnumLite,
              com.google.protobuf.AbstractMessage.InternalOneOfEnum {
        EDGE(1),
        PATH(2),
        VERTEX(3),
        SELECT(4),
        ITEM_NOT_SET(0);
        private final int value;
        private ItemCase(int value) {
          this.value = value;
        }
        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static ItemCase valueOf(int value) {
          return forNumber(value);
        }

        public static ItemCase forNumber(int value) {
          switch (value) {
            case 1: return EDGE;
            case 2: return PATH;
            case 3: return VERTEX;
            case 4: return SELECT;
            case 0: return ITEM_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public ItemCase
      getItemCase() {
        return ItemCase.forNumber(
            itemCase_);
      }

      public static final int EDGE_FIELD_NUMBER = 1;
      /**
       * <code>.algebra.EdgeExpand edge = 1;</code>
       * @return Whether the edge field is set.
       */
      @java.lang.Override
      public boolean hasEdge() {
        return itemCase_ == 1;
      }
      /**
       * <code>.algebra.EdgeExpand edge = 1;</code>
       * @return The edge.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand getEdge() {
        if (itemCase_ == 1) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand) item_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.getDefaultInstance();
      }
      /**
       * <code>.algebra.EdgeExpand edge = 1;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpandOrBuilder getEdgeOrBuilder() {
        if (itemCase_ == 1) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand) item_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.getDefaultInstance();
      }

      public static final int PATH_FIELD_NUMBER = 2;
      /**
       * <code>.algebra.PathExpand path = 2;</code>
       * @return Whether the path field is set.
       */
      @java.lang.Override
      public boolean hasPath() {
        return itemCase_ == 2;
      }
      /**
       * <code>.algebra.PathExpand path = 2;</code>
       * @return The path.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand getPath() {
        if (itemCase_ == 2) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand) item_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.getDefaultInstance();
      }
      /**
       * <code>.algebra.PathExpand path = 2;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpandOrBuilder getPathOrBuilder() {
        if (itemCase_ == 2) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand) item_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.getDefaultInstance();
      }

      public static final int VERTEX_FIELD_NUMBER = 3;
      /**
       * <code>.algebra.GetV vertex = 3;</code>
       * @return Whether the vertex field is set.
       */
      @java.lang.Override
      public boolean hasVertex() {
        return itemCase_ == 3;
      }
      /**
       * <code>.algebra.GetV vertex = 3;</code>
       * @return The vertex.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV getVertex() {
        if (itemCase_ == 3) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV) item_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.getDefaultInstance();
      }
      /**
       * <code>.algebra.GetV vertex = 3;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetVOrBuilder getVertexOrBuilder() {
        if (itemCase_ == 3) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV) item_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.getDefaultInstance();
      }

      public static final int SELECT_FIELD_NUMBER = 4;
      /**
       * <code>.algebra.Select select = 4;</code>
       * @return Whether the select field is set.
       */
      @java.lang.Override
      public boolean hasSelect() {
        return itemCase_ == 4;
      }
      /**
       * <code>.algebra.Select select = 4;</code>
       * @return The select.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select getSelect() {
        if (itemCase_ == 4) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select) item_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.getDefaultInstance();
      }
      /**
       * <code>.algebra.Select select = 4;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SelectOrBuilder getSelectOrBuilder() {
        if (itemCase_ == 4) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select) item_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.getDefaultInstance();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (itemCase_ == 1) {
          output.writeMessage(1, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand) item_);
        }
        if (itemCase_ == 2) {
          output.writeMessage(2, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand) item_);
        }
        if (itemCase_ == 3) {
          output.writeMessage(3, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV) item_);
        }
        if (itemCase_ == 4) {
          output.writeMessage(4, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select) item_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (itemCase_ == 1) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand) item_);
        }
        if (itemCase_ == 2) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand) item_);
        }
        if (itemCase_ == 3) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV) item_);
        }
        if (itemCase_ == 4) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select) item_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder)) {
          return super.equals(obj);
        }
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder) obj;

        if (!getItemCase().equals(other.getItemCase())) return false;
        switch (itemCase_) {
          case 1:
            if (!getEdge()
                .equals(other.getEdge())) return false;
            break;
          case 2:
            if (!getPath()
                .equals(other.getPath())) return false;
            break;
          case 3:
            if (!getVertex()
                .equals(other.getVertex())) return false;
            break;
          case 4:
            if (!getSelect()
                .equals(other.getSelect())) return false;
            break;
          case 0:
          default:
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        switch (itemCase_) {
          case 1:
            hash = (37 * hash) + EDGE_FIELD_NUMBER;
            hash = (53 * hash) + getEdge().hashCode();
            break;
          case 2:
            hash = (37 * hash) + PATH_FIELD_NUMBER;
            hash = (53 * hash) + getPath().hashCode();
            break;
          case 3:
            hash = (37 * hash) + VERTEX_FIELD_NUMBER;
            hash = (53 * hash) + getVertex().hashCode();
            break;
          case 4:
            hash = (37 * hash) + SELECT_FIELD_NUMBER;
            hash = (53 * hash) + getSelect().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code algebra.Pattern.Binder}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:algebra.Pattern.Binder)
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.BinderOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Pattern_Binder_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Pattern_Binder_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder.Builder.class);
        }

        // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          if (edgeBuilder_ != null) {
            edgeBuilder_.clear();
          }
          if (pathBuilder_ != null) {
            pathBuilder_.clear();
          }
          if (vertexBuilder_ != null) {
            vertexBuilder_.clear();
          }
          if (selectBuilder_ != null) {
            selectBuilder_.clear();
          }
          itemCase_ = 0;
          item_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Pattern_Binder_descriptor;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder getDefaultInstanceForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder.getDefaultInstance();
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder build() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder buildPartial() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          buildPartialOneofs(result);
          onBuilt();
          return result;
        }

        private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder result) {
          int from_bitField0_ = bitField0_;
        }

        private void buildPartialOneofs(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder result) {
          result.itemCase_ = itemCase_;
          result.item_ = this.item_;
          if (itemCase_ == 1 &&
              edgeBuilder_ != null) {
            result.item_ = edgeBuilder_.build();
          }
          if (itemCase_ == 2 &&
              pathBuilder_ != null) {
            result.item_ = pathBuilder_.build();
          }
          if (itemCase_ == 3 &&
              vertexBuilder_ != null) {
            result.item_ = vertexBuilder_.build();
          }
          if (itemCase_ == 4 &&
              selectBuilder_ != null) {
            result.item_ = selectBuilder_.build();
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder) {
            return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder other) {
          if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder.getDefaultInstance()) return this;
          switch (other.getItemCase()) {
            case EDGE: {
              mergeEdge(other.getEdge());
              break;
            }
            case PATH: {
              mergePath(other.getPath());
              break;
            }
            case VERTEX: {
              mergeVertex(other.getVertex());
              break;
            }
            case SELECT: {
              mergeSelect(other.getSelect());
              break;
            }
            case ITEM_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getEdgeFieldBuilder().getBuilder(),
                      extensionRegistry);
                  itemCase_ = 1;
                  break;
                } // case 10
                case 18: {
                  input.readMessage(
                      getPathFieldBuilder().getBuilder(),
                      extensionRegistry);
                  itemCase_ = 2;
                  break;
                } // case 18
                case 26: {
                  input.readMessage(
                      getVertexFieldBuilder().getBuilder(),
                      extensionRegistry);
                  itemCase_ = 3;
                  break;
                } // case 26
                case 34: {
                  input.readMessage(
                      getSelectFieldBuilder().getBuilder(),
                      extensionRegistry);
                  itemCase_ = 4;
                  break;
                } // case 34
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int itemCase_ = 0;
        private java.lang.Object item_;
        public ItemCase
            getItemCase() {
          return ItemCase.forNumber(
              itemCase_);
        }

        public Builder clearItem() {
          itemCase_ = 0;
          item_ = null;
          onChanged();
          return this;
        }

        private int bitField0_;

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpandOrBuilder> edgeBuilder_;
        /**
         * <code>.algebra.EdgeExpand edge = 1;</code>
         * @return Whether the edge field is set.
         */
        @java.lang.Override
        public boolean hasEdge() {
          return itemCase_ == 1;
        }
        /**
         * <code>.algebra.EdgeExpand edge = 1;</code>
         * @return The edge.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand getEdge() {
          if (edgeBuilder_ == null) {
            if (itemCase_ == 1) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand) item_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.getDefaultInstance();
          } else {
            if (itemCase_ == 1) {
              return edgeBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.EdgeExpand edge = 1;</code>
         */
        public Builder setEdge(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand value) {
          if (edgeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            item_ = value;
            onChanged();
          } else {
            edgeBuilder_.setMessage(value);
          }
          itemCase_ = 1;
          return this;
        }
        /**
         * <code>.algebra.EdgeExpand edge = 1;</code>
         */
        public Builder setEdge(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Builder builderForValue) {
          if (edgeBuilder_ == null) {
            item_ = builderForValue.build();
            onChanged();
          } else {
            edgeBuilder_.setMessage(builderForValue.build());
          }
          itemCase_ = 1;
          return this;
        }
        /**
         * <code>.algebra.EdgeExpand edge = 1;</code>
         */
        public Builder mergeEdge(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand value) {
          if (edgeBuilder_ == null) {
            if (itemCase_ == 1 &&
                item_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.getDefaultInstance()) {
              item_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand) item_)
                  .mergeFrom(value).buildPartial();
            } else {
              item_ = value;
            }
            onChanged();
          } else {
            if (itemCase_ == 1) {
              edgeBuilder_.mergeFrom(value);
            } else {
              edgeBuilder_.setMessage(value);
            }
          }
          itemCase_ = 1;
          return this;
        }
        /**
         * <code>.algebra.EdgeExpand edge = 1;</code>
         */
        public Builder clearEdge() {
          if (edgeBuilder_ == null) {
            if (itemCase_ == 1) {
              itemCase_ = 0;
              item_ = null;
              onChanged();
            }
          } else {
            if (itemCase_ == 1) {
              itemCase_ = 0;
              item_ = null;
            }
            edgeBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.EdgeExpand edge = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Builder getEdgeBuilder() {
          return getEdgeFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.EdgeExpand edge = 1;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpandOrBuilder getEdgeOrBuilder() {
          if ((itemCase_ == 1) && (edgeBuilder_ != null)) {
            return edgeBuilder_.getMessageOrBuilder();
          } else {
            if (itemCase_ == 1) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand) item_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.EdgeExpand edge = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpandOrBuilder> 
            getEdgeFieldBuilder() {
          if (edgeBuilder_ == null) {
            if (!(itemCase_ == 1)) {
              item_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.getDefaultInstance();
            }
            edgeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpandOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand) item_,
                    getParentForChildren(),
                    isClean());
            item_ = null;
          }
          itemCase_ = 1;
          onChanged();
          return edgeBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpandOrBuilder> pathBuilder_;
        /**
         * <code>.algebra.PathExpand path = 2;</code>
         * @return Whether the path field is set.
         */
        @java.lang.Override
        public boolean hasPath() {
          return itemCase_ == 2;
        }
        /**
         * <code>.algebra.PathExpand path = 2;</code>
         * @return The path.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand getPath() {
          if (pathBuilder_ == null) {
            if (itemCase_ == 2) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand) item_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.getDefaultInstance();
          } else {
            if (itemCase_ == 2) {
              return pathBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.PathExpand path = 2;</code>
         */
        public Builder setPath(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand value) {
          if (pathBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            item_ = value;
            onChanged();
          } else {
            pathBuilder_.setMessage(value);
          }
          itemCase_ = 2;
          return this;
        }
        /**
         * <code>.algebra.PathExpand path = 2;</code>
         */
        public Builder setPath(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.Builder builderForValue) {
          if (pathBuilder_ == null) {
            item_ = builderForValue.build();
            onChanged();
          } else {
            pathBuilder_.setMessage(builderForValue.build());
          }
          itemCase_ = 2;
          return this;
        }
        /**
         * <code>.algebra.PathExpand path = 2;</code>
         */
        public Builder mergePath(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand value) {
          if (pathBuilder_ == null) {
            if (itemCase_ == 2 &&
                item_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.getDefaultInstance()) {
              item_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand) item_)
                  .mergeFrom(value).buildPartial();
            } else {
              item_ = value;
            }
            onChanged();
          } else {
            if (itemCase_ == 2) {
              pathBuilder_.mergeFrom(value);
            } else {
              pathBuilder_.setMessage(value);
            }
          }
          itemCase_ = 2;
          return this;
        }
        /**
         * <code>.algebra.PathExpand path = 2;</code>
         */
        public Builder clearPath() {
          if (pathBuilder_ == null) {
            if (itemCase_ == 2) {
              itemCase_ = 0;
              item_ = null;
              onChanged();
            }
          } else {
            if (itemCase_ == 2) {
              itemCase_ = 0;
              item_ = null;
            }
            pathBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.PathExpand path = 2;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.Builder getPathBuilder() {
          return getPathFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.PathExpand path = 2;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpandOrBuilder getPathOrBuilder() {
          if ((itemCase_ == 2) && (pathBuilder_ != null)) {
            return pathBuilder_.getMessageOrBuilder();
          } else {
            if (itemCase_ == 2) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand) item_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.PathExpand path = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpandOrBuilder> 
            getPathFieldBuilder() {
          if (pathBuilder_ == null) {
            if (!(itemCase_ == 2)) {
              item_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.getDefaultInstance();
            }
            pathBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpandOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand) item_,
                    getParentForChildren(),
                    isClean());
            item_ = null;
          }
          itemCase_ = 2;
          onChanged();
          return pathBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetVOrBuilder> vertexBuilder_;
        /**
         * <code>.algebra.GetV vertex = 3;</code>
         * @return Whether the vertex field is set.
         */
        @java.lang.Override
        public boolean hasVertex() {
          return itemCase_ == 3;
        }
        /**
         * <code>.algebra.GetV vertex = 3;</code>
         * @return The vertex.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV getVertex() {
          if (vertexBuilder_ == null) {
            if (itemCase_ == 3) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV) item_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.getDefaultInstance();
          } else {
            if (itemCase_ == 3) {
              return vertexBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.GetV vertex = 3;</code>
         */
        public Builder setVertex(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV value) {
          if (vertexBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            item_ = value;
            onChanged();
          } else {
            vertexBuilder_.setMessage(value);
          }
          itemCase_ = 3;
          return this;
        }
        /**
         * <code>.algebra.GetV vertex = 3;</code>
         */
        public Builder setVertex(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.Builder builderForValue) {
          if (vertexBuilder_ == null) {
            item_ = builderForValue.build();
            onChanged();
          } else {
            vertexBuilder_.setMessage(builderForValue.build());
          }
          itemCase_ = 3;
          return this;
        }
        /**
         * <code>.algebra.GetV vertex = 3;</code>
         */
        public Builder mergeVertex(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV value) {
          if (vertexBuilder_ == null) {
            if (itemCase_ == 3 &&
                item_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.getDefaultInstance()) {
              item_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV) item_)
                  .mergeFrom(value).buildPartial();
            } else {
              item_ = value;
            }
            onChanged();
          } else {
            if (itemCase_ == 3) {
              vertexBuilder_.mergeFrom(value);
            } else {
              vertexBuilder_.setMessage(value);
            }
          }
          itemCase_ = 3;
          return this;
        }
        /**
         * <code>.algebra.GetV vertex = 3;</code>
         */
        public Builder clearVertex() {
          if (vertexBuilder_ == null) {
            if (itemCase_ == 3) {
              itemCase_ = 0;
              item_ = null;
              onChanged();
            }
          } else {
            if (itemCase_ == 3) {
              itemCase_ = 0;
              item_ = null;
            }
            vertexBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.GetV vertex = 3;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.Builder getVertexBuilder() {
          return getVertexFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.GetV vertex = 3;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetVOrBuilder getVertexOrBuilder() {
          if ((itemCase_ == 3) && (vertexBuilder_ != null)) {
            return vertexBuilder_.getMessageOrBuilder();
          } else {
            if (itemCase_ == 3) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV) item_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.GetV vertex = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetVOrBuilder> 
            getVertexFieldBuilder() {
          if (vertexBuilder_ == null) {
            if (!(itemCase_ == 3)) {
              item_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.getDefaultInstance();
            }
            vertexBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetVOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV) item_,
                    getParentForChildren(),
                    isClean());
            item_ = null;
          }
          itemCase_ = 3;
          onChanged();
          return vertexBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SelectOrBuilder> selectBuilder_;
        /**
         * <code>.algebra.Select select = 4;</code>
         * @return Whether the select field is set.
         */
        @java.lang.Override
        public boolean hasSelect() {
          return itemCase_ == 4;
        }
        /**
         * <code>.algebra.Select select = 4;</code>
         * @return The select.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select getSelect() {
          if (selectBuilder_ == null) {
            if (itemCase_ == 4) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select) item_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.getDefaultInstance();
          } else {
            if (itemCase_ == 4) {
              return selectBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Select select = 4;</code>
         */
        public Builder setSelect(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select value) {
          if (selectBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            item_ = value;
            onChanged();
          } else {
            selectBuilder_.setMessage(value);
          }
          itemCase_ = 4;
          return this;
        }
        /**
         * <code>.algebra.Select select = 4;</code>
         */
        public Builder setSelect(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.Builder builderForValue) {
          if (selectBuilder_ == null) {
            item_ = builderForValue.build();
            onChanged();
          } else {
            selectBuilder_.setMessage(builderForValue.build());
          }
          itemCase_ = 4;
          return this;
        }
        /**
         * <code>.algebra.Select select = 4;</code>
         */
        public Builder mergeSelect(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select value) {
          if (selectBuilder_ == null) {
            if (itemCase_ == 4 &&
                item_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.getDefaultInstance()) {
              item_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select) item_)
                  .mergeFrom(value).buildPartial();
            } else {
              item_ = value;
            }
            onChanged();
          } else {
            if (itemCase_ == 4) {
              selectBuilder_.mergeFrom(value);
            } else {
              selectBuilder_.setMessage(value);
            }
          }
          itemCase_ = 4;
          return this;
        }
        /**
         * <code>.algebra.Select select = 4;</code>
         */
        public Builder clearSelect() {
          if (selectBuilder_ == null) {
            if (itemCase_ == 4) {
              itemCase_ = 0;
              item_ = null;
              onChanged();
            }
          } else {
            if (itemCase_ == 4) {
              itemCase_ = 0;
              item_ = null;
            }
            selectBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.Select select = 4;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.Builder getSelectBuilder() {
          return getSelectFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.Select select = 4;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SelectOrBuilder getSelectOrBuilder() {
          if ((itemCase_ == 4) && (selectBuilder_ != null)) {
            return selectBuilder_.getMessageOrBuilder();
          } else {
            if (itemCase_ == 4) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select) item_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Select select = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SelectOrBuilder> 
            getSelectFieldBuilder() {
          if (selectBuilder_ == null) {
            if (!(itemCase_ == 4)) {
              item_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.getDefaultInstance();
            }
            selectBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SelectOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select) item_,
                    getParentForChildren(),
                    isClean());
            item_ = null;
          }
          itemCase_ = 4;
          onChanged();
          return selectBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:algebra.Pattern.Binder)
      }

      // @@protoc_insertion_point(class_scope:algebra.Pattern.Binder)
      private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder();
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Binder>
          PARSER = new com.google.protobuf.AbstractParser<Binder>() {
        @java.lang.Override
        public Binder parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Binder> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Binder> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface SentenceOrBuilder extends
        // @@protoc_insertion_point(interface_extends:algebra.Pattern.Sentence)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.common.NameOrId start = 1;</code>
       * @return Whether the start field is set.
       */
      boolean hasStart();
      /**
       * <code>.common.NameOrId start = 1;</code>
       * @return The start.
       */
      com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getStart();
      /**
       * <code>.common.NameOrId start = 1;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getStartOrBuilder();

      /**
       * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
       */
      java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder> 
          getBindersList();
      /**
       * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder getBinders(int index);
      /**
       * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
       */
      int getBindersCount();
      /**
       * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
       */
      java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.BinderOrBuilder> 
          getBindersOrBuilderList();
      /**
       * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.BinderOrBuilder getBindersOrBuilder(
          int index);

      /**
       * <code>.common.NameOrId end = 3;</code>
       * @return Whether the end field is set.
       */
      boolean hasEnd();
      /**
       * <code>.common.NameOrId end = 3;</code>
       * @return The end.
       */
      com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getEnd();
      /**
       * <code>.common.NameOrId end = 3;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getEndOrBuilder();

      /**
       * <pre>
       *&#47; Define how to attach this sentence to the other one
       * </pre>
       *
       * <code>.algebra.Join.JoinKind join_kind = 4;</code>
       * @return The enum numeric value on the wire for joinKind.
       */
      int getJoinKindValue();
      /**
       * <pre>
       *&#47; Define how to attach this sentence to the other one
       * </pre>
       *
       * <code>.algebra.Join.JoinKind join_kind = 4;</code>
       * @return The joinKind.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind getJoinKind();
    }
    /**
     * <pre>
     * A sentence defines a match
     * </pre>
     *
     * Protobuf type {@code algebra.Pattern.Sentence}
     */
    public static final class Sentence extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:algebra.Pattern.Sentence)
        SentenceOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Sentence.newBuilder() to construct.
      private Sentence(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Sentence() {
        binders_ = java.util.Collections.emptyList();
        joinKind_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Sentence();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Pattern_Sentence_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Pattern_Sentence_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence.Builder.class);
      }

      public static final int START_FIELD_NUMBER = 1;
      private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId start_;
      /**
       * <code>.common.NameOrId start = 1;</code>
       * @return Whether the start field is set.
       */
      @java.lang.Override
      public boolean hasStart() {
        return start_ != null;
      }
      /**
       * <code>.common.NameOrId start = 1;</code>
       * @return The start.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getStart() {
        return start_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : start_;
      }
      /**
       * <code>.common.NameOrId start = 1;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getStartOrBuilder() {
        return start_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : start_;
      }

      public static final int BINDERS_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder> binders_;
      /**
       * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
       */
      @java.lang.Override
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder> getBindersList() {
        return binders_;
      }
      /**
       * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
       */
      @java.lang.Override
      public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.BinderOrBuilder> 
          getBindersOrBuilderList() {
        return binders_;
      }
      /**
       * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
       */
      @java.lang.Override
      public int getBindersCount() {
        return binders_.size();
      }
      /**
       * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder getBinders(int index) {
        return binders_.get(index);
      }
      /**
       * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.BinderOrBuilder getBindersOrBuilder(
          int index) {
        return binders_.get(index);
      }

      public static final int END_FIELD_NUMBER = 3;
      private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId end_;
      /**
       * <code>.common.NameOrId end = 3;</code>
       * @return Whether the end field is set.
       */
      @java.lang.Override
      public boolean hasEnd() {
        return end_ != null;
      }
      /**
       * <code>.common.NameOrId end = 3;</code>
       * @return The end.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getEnd() {
        return end_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : end_;
      }
      /**
       * <code>.common.NameOrId end = 3;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getEndOrBuilder() {
        return end_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : end_;
      }

      public static final int JOIN_KIND_FIELD_NUMBER = 4;
      private int joinKind_ = 0;
      /**
       * <pre>
       *&#47; Define how to attach this sentence to the other one
       * </pre>
       *
       * <code>.algebra.Join.JoinKind join_kind = 4;</code>
       * @return The enum numeric value on the wire for joinKind.
       */
      @java.lang.Override public int getJoinKindValue() {
        return joinKind_;
      }
      /**
       * <pre>
       *&#47; Define how to attach this sentence to the other one
       * </pre>
       *
       * <code>.algebra.Join.JoinKind join_kind = 4;</code>
       * @return The joinKind.
       */
      @java.lang.Override public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind getJoinKind() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind result = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind.forNumber(joinKind_);
        return result == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind.UNRECOGNIZED : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (start_ != null) {
          output.writeMessage(1, getStart());
        }
        for (int i = 0; i < binders_.size(); i++) {
          output.writeMessage(2, binders_.get(i));
        }
        if (end_ != null) {
          output.writeMessage(3, getEnd());
        }
        if (joinKind_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind.INNER.getNumber()) {
          output.writeEnum(4, joinKind_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (start_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getStart());
        }
        for (int i = 0; i < binders_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, binders_.get(i));
        }
        if (end_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getEnd());
        }
        if (joinKind_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind.INNER.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, joinKind_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence)) {
          return super.equals(obj);
        }
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence) obj;

        if (hasStart() != other.hasStart()) return false;
        if (hasStart()) {
          if (!getStart()
              .equals(other.getStart())) return false;
        }
        if (!getBindersList()
            .equals(other.getBindersList())) return false;
        if (hasEnd() != other.hasEnd()) return false;
        if (hasEnd()) {
          if (!getEnd()
              .equals(other.getEnd())) return false;
        }
        if (joinKind_ != other.joinKind_) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasStart()) {
          hash = (37 * hash) + START_FIELD_NUMBER;
          hash = (53 * hash) + getStart().hashCode();
        }
        if (getBindersCount() > 0) {
          hash = (37 * hash) + BINDERS_FIELD_NUMBER;
          hash = (53 * hash) + getBindersList().hashCode();
        }
        if (hasEnd()) {
          hash = (37 * hash) + END_FIELD_NUMBER;
          hash = (53 * hash) + getEnd().hashCode();
        }
        hash = (37 * hash) + JOIN_KIND_FIELD_NUMBER;
        hash = (53 * hash) + joinKind_;
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * A sentence defines a match
       * </pre>
       *
       * Protobuf type {@code algebra.Pattern.Sentence}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:algebra.Pattern.Sentence)
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.SentenceOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Pattern_Sentence_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Pattern_Sentence_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence.Builder.class);
        }

        // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          start_ = null;
          if (startBuilder_ != null) {
            startBuilder_.dispose();
            startBuilder_ = null;
          }
          if (bindersBuilder_ == null) {
            binders_ = java.util.Collections.emptyList();
          } else {
            binders_ = null;
            bindersBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          end_ = null;
          if (endBuilder_ != null) {
            endBuilder_.dispose();
            endBuilder_ = null;
          }
          joinKind_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Pattern_Sentence_descriptor;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence getDefaultInstanceForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence.getDefaultInstance();
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence build() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence buildPartial() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence result) {
          if (bindersBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0)) {
              binders_ = java.util.Collections.unmodifiableList(binders_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.binders_ = binders_;
          } else {
            result.binders_ = bindersBuilder_.build();
          }
        }

        private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.start_ = startBuilder_ == null
                ? start_
                : startBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.end_ = endBuilder_ == null
                ? end_
                : endBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.joinKind_ = joinKind_;
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence) {
            return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence other) {
          if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence.getDefaultInstance()) return this;
          if (other.hasStart()) {
            mergeStart(other.getStart());
          }
          if (bindersBuilder_ == null) {
            if (!other.binders_.isEmpty()) {
              if (binders_.isEmpty()) {
                binders_ = other.binders_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureBindersIsMutable();
                binders_.addAll(other.binders_);
              }
              onChanged();
            }
          } else {
            if (!other.binders_.isEmpty()) {
              if (bindersBuilder_.isEmpty()) {
                bindersBuilder_.dispose();
                bindersBuilder_ = null;
                binders_ = other.binders_;
                bitField0_ = (bitField0_ & ~0x00000002);
                bindersBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getBindersFieldBuilder() : null;
              } else {
                bindersBuilder_.addAllMessages(other.binders_);
              }
            }
          }
          if (other.hasEnd()) {
            mergeEnd(other.getEnd());
          }
          if (other.joinKind_ != 0) {
            setJoinKindValue(other.getJoinKindValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getStartFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 18: {
                  com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder m =
                      input.readMessage(
                          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder.parser(),
                          extensionRegistry);
                  if (bindersBuilder_ == null) {
                    ensureBindersIsMutable();
                    binders_.add(m);
                  } else {
                    bindersBuilder_.addMessage(m);
                  }
                  break;
                } // case 18
                case 26: {
                  input.readMessage(
                      getEndFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000004;
                  break;
                } // case 26
                case 32: {
                  joinKind_ = input.readEnum();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId start_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> startBuilder_;
        /**
         * <code>.common.NameOrId start = 1;</code>
         * @return Whether the start field is set.
         */
        public boolean hasStart() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>.common.NameOrId start = 1;</code>
         * @return The start.
         */
        public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getStart() {
          if (startBuilder_ == null) {
            return start_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : start_;
          } else {
            return startBuilder_.getMessage();
          }
        }
        /**
         * <code>.common.NameOrId start = 1;</code>
         */
        public Builder setStart(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
          if (startBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            start_ = value;
          } else {
            startBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>.common.NameOrId start = 1;</code>
         */
        public Builder setStart(
            com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
          if (startBuilder_ == null) {
            start_ = builderForValue.build();
          } else {
            startBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>.common.NameOrId start = 1;</code>
         */
        public Builder mergeStart(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
          if (startBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0) &&
              start_ != null &&
              start_ != com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance()) {
              getStartBuilder().mergeFrom(value);
            } else {
              start_ = value;
            }
          } else {
            startBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>.common.NameOrId start = 1;</code>
         */
        public Builder clearStart() {
          bitField0_ = (bitField0_ & ~0x00000001);
          start_ = null;
          if (startBuilder_ != null) {
            startBuilder_.dispose();
            startBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <code>.common.NameOrId start = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder getStartBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getStartFieldBuilder().getBuilder();
        }
        /**
         * <code>.common.NameOrId start = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getStartOrBuilder() {
          if (startBuilder_ != null) {
            return startBuilder_.getMessageOrBuilder();
          } else {
            return start_ == null ?
                com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : start_;
          }
        }
        /**
         * <code>.common.NameOrId start = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
            getStartFieldBuilder() {
          if (startBuilder_ == null) {
            startBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder>(
                    getStart(),
                    getParentForChildren(),
                    isClean());
            start_ = null;
          }
          return startBuilder_;
        }

        private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder> binders_ =
          java.util.Collections.emptyList();
        private void ensureBindersIsMutable() {
          if (!((bitField0_ & 0x00000002) != 0)) {
            binders_ = new java.util.ArrayList<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder>(binders_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.BinderOrBuilder> bindersBuilder_;

        /**
         * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
         */
        public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder> getBindersList() {
          if (bindersBuilder_ == null) {
            return java.util.Collections.unmodifiableList(binders_);
          } else {
            return bindersBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
         */
        public int getBindersCount() {
          if (bindersBuilder_ == null) {
            return binders_.size();
          } else {
            return bindersBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder getBinders(int index) {
          if (bindersBuilder_ == null) {
            return binders_.get(index);
          } else {
            return bindersBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
         */
        public Builder setBinders(
            int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder value) {
          if (bindersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBindersIsMutable();
            binders_.set(index, value);
            onChanged();
          } else {
            bindersBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
         */
        public Builder setBinders(
            int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder.Builder builderForValue) {
          if (bindersBuilder_ == null) {
            ensureBindersIsMutable();
            binders_.set(index, builderForValue.build());
            onChanged();
          } else {
            bindersBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
         */
        public Builder addBinders(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder value) {
          if (bindersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBindersIsMutable();
            binders_.add(value);
            onChanged();
          } else {
            bindersBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
         */
        public Builder addBinders(
            int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder value) {
          if (bindersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBindersIsMutable();
            binders_.add(index, value);
            onChanged();
          } else {
            bindersBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
         */
        public Builder addBinders(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder.Builder builderForValue) {
          if (bindersBuilder_ == null) {
            ensureBindersIsMutable();
            binders_.add(builderForValue.build());
            onChanged();
          } else {
            bindersBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
         */
        public Builder addBinders(
            int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder.Builder builderForValue) {
          if (bindersBuilder_ == null) {
            ensureBindersIsMutable();
            binders_.add(index, builderForValue.build());
            onChanged();
          } else {
            bindersBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
         */
        public Builder addAllBinders(
            java.lang.Iterable<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder> values) {
          if (bindersBuilder_ == null) {
            ensureBindersIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, binders_);
            onChanged();
          } else {
            bindersBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
         */
        public Builder clearBinders() {
          if (bindersBuilder_ == null) {
            binders_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            bindersBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
         */
        public Builder removeBinders(int index) {
          if (bindersBuilder_ == null) {
            ensureBindersIsMutable();
            binders_.remove(index);
            onChanged();
          } else {
            bindersBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder.Builder getBindersBuilder(
            int index) {
          return getBindersFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.BinderOrBuilder getBindersOrBuilder(
            int index) {
          if (bindersBuilder_ == null) {
            return binders_.get(index);  } else {
            return bindersBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
         */
        public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.BinderOrBuilder> 
             getBindersOrBuilderList() {
          if (bindersBuilder_ != null) {
            return bindersBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(binders_);
          }
        }
        /**
         * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder.Builder addBindersBuilder() {
          return getBindersFieldBuilder().addBuilder(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder.getDefaultInstance());
        }
        /**
         * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder.Builder addBindersBuilder(
            int index) {
          return getBindersFieldBuilder().addBuilder(
              index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder.getDefaultInstance());
        }
        /**
         * <code>repeated .algebra.Pattern.Binder binders = 2;</code>
         */
        public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder.Builder> 
             getBindersBuilderList() {
          return getBindersFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.BinderOrBuilder> 
            getBindersFieldBuilder() {
          if (bindersBuilder_ == null) {
            bindersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Binder.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.BinderOrBuilder>(
                    binders_,
                    ((bitField0_ & 0x00000002) != 0),
                    getParentForChildren(),
                    isClean());
            binders_ = null;
          }
          return bindersBuilder_;
        }

        private com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId end_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> endBuilder_;
        /**
         * <code>.common.NameOrId end = 3;</code>
         * @return Whether the end field is set.
         */
        public boolean hasEnd() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>.common.NameOrId end = 3;</code>
         * @return The end.
         */
        public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId getEnd() {
          if (endBuilder_ == null) {
            return end_ == null ? com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : end_;
          } else {
            return endBuilder_.getMessage();
          }
        }
        /**
         * <code>.common.NameOrId end = 3;</code>
         */
        public Builder setEnd(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
          if (endBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            end_ = value;
          } else {
            endBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>.common.NameOrId end = 3;</code>
         */
        public Builder setEnd(
            com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder builderForValue) {
          if (endBuilder_ == null) {
            end_ = builderForValue.build();
          } else {
            endBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>.common.NameOrId end = 3;</code>
         */
        public Builder mergeEnd(com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId value) {
          if (endBuilder_ == null) {
            if (((bitField0_ & 0x00000004) != 0) &&
              end_ != null &&
              end_ != com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance()) {
              getEndBuilder().mergeFrom(value);
            } else {
              end_ = value;
            }
          } else {
            endBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>.common.NameOrId end = 3;</code>
         */
        public Builder clearEnd() {
          bitField0_ = (bitField0_ & ~0x00000004);
          end_ = null;
          if (endBuilder_ != null) {
            endBuilder_.dispose();
            endBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <code>.common.NameOrId end = 3;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder getEndBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getEndFieldBuilder().getBuilder();
        }
        /**
         * <code>.common.NameOrId end = 3;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder getEndOrBuilder() {
          if (endBuilder_ != null) {
            return endBuilder_.getMessageOrBuilder();
          } else {
            return end_ == null ?
                com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.getDefaultInstance() : end_;
          }
        }
        /**
         * <code>.common.NameOrId end = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder> 
            getEndFieldBuilder() {
          if (endBuilder_ == null) {
            endBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrId.Builder, com.alibaba.graphscope.ldbc.workload.proto.Common.NameOrIdOrBuilder>(
                    getEnd(),
                    getParentForChildren(),
                    isClean());
            end_ = null;
          }
          return endBuilder_;
        }

        private int joinKind_ = 0;
        /**
         * <pre>
         *&#47; Define how to attach this sentence to the other one
         * </pre>
         *
         * <code>.algebra.Join.JoinKind join_kind = 4;</code>
         * @return The enum numeric value on the wire for joinKind.
         */
        @java.lang.Override public int getJoinKindValue() {
          return joinKind_;
        }
        /**
         * <pre>
         *&#47; Define how to attach this sentence to the other one
         * </pre>
         *
         * <code>.algebra.Join.JoinKind join_kind = 4;</code>
         * @param value The enum numeric value on the wire for joinKind to set.
         * @return This builder for chaining.
         */
        public Builder setJoinKindValue(int value) {
          joinKind_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *&#47; Define how to attach this sentence to the other one
         * </pre>
         *
         * <code>.algebra.Join.JoinKind join_kind = 4;</code>
         * @return The joinKind.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind getJoinKind() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind result = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind.forNumber(joinKind_);
          return result == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         *&#47; Define how to attach this sentence to the other one
         * </pre>
         *
         * <code>.algebra.Join.JoinKind join_kind = 4;</code>
         * @param value The joinKind to set.
         * @return This builder for chaining.
         */
        public Builder setJoinKind(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.JoinKind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000008;
          joinKind_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         *&#47; Define how to attach this sentence to the other one
         * </pre>
         *
         * <code>.algebra.Join.JoinKind join_kind = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearJoinKind() {
          bitField0_ = (bitField0_ & ~0x00000008);
          joinKind_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:algebra.Pattern.Sentence)
      }

      // @@protoc_insertion_point(class_scope:algebra.Pattern.Sentence)
      private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence();
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Sentence>
          PARSER = new com.google.protobuf.AbstractParser<Sentence>() {
        @java.lang.Override
        public Sentence parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Sentence> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Sentence> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int SENTENCES_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence> sentences_;
    /**
     * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence> getSentencesList() {
      return sentences_;
    }
    /**
     * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.SentenceOrBuilder> 
        getSentencesOrBuilderList() {
      return sentences_;
    }
    /**
     * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
     */
    @java.lang.Override
    public int getSentencesCount() {
      return sentences_.size();
    }
    /**
     * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence getSentences(int index) {
      return sentences_.get(index);
    }
    /**
     * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.SentenceOrBuilder getSentencesOrBuilder(
        int index) {
      return sentences_.get(index);
    }

    public static final int META_DATA_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData> metaData_;
    /**
     * <code>repeated .algebra.MetaData meta_data = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData> getMetaDataList() {
      return metaData_;
    }
    /**
     * <code>repeated .algebra.MetaData meta_data = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder> 
        getMetaDataOrBuilderList() {
      return metaData_;
    }
    /**
     * <code>repeated .algebra.MetaData meta_data = 2;</code>
     */
    @java.lang.Override
    public int getMetaDataCount() {
      return metaData_.size();
    }
    /**
     * <code>repeated .algebra.MetaData meta_data = 2;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData getMetaData(int index) {
      return metaData_.get(index);
    }
    /**
     * <code>repeated .algebra.MetaData meta_data = 2;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder getMetaDataOrBuilder(
        int index) {
      return metaData_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < sentences_.size(); i++) {
        output.writeMessage(1, sentences_.get(i));
      }
      for (int i = 0; i < metaData_.size(); i++) {
        output.writeMessage(2, metaData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < sentences_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, sentences_.get(i));
      }
      for (int i = 0; i < metaData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaData_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern) obj;

      if (!getSentencesList()
          .equals(other.getSentencesList())) return false;
      if (!getMetaDataList()
          .equals(other.getMetaDataList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSentencesCount() > 0) {
        hash = (37 * hash) + SENTENCES_FIELD_NUMBER;
        hash = (53 * hash) + getSentencesList().hashCode();
      }
      if (getMetaDataCount() > 0) {
        hash = (37 * hash) + META_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetaDataList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code algebra.Pattern}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.Pattern)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PatternOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Pattern_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Pattern_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (sentencesBuilder_ == null) {
          sentences_ = java.util.Collections.emptyList();
        } else {
          sentences_ = null;
          sentencesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (metaDataBuilder_ == null) {
          metaData_ = java.util.Collections.emptyList();
        } else {
          metaData_ = null;
          metaDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Pattern_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern result) {
        if (sentencesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            sentences_ = java.util.Collections.unmodifiableList(sentences_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.sentences_ = sentences_;
        } else {
          result.sentences_ = sentencesBuilder_.build();
        }
        if (metaDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            metaData_ = java.util.Collections.unmodifiableList(metaData_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.metaData_ = metaData_;
        } else {
          result.metaData_ = metaDataBuilder_.build();
        }
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.getDefaultInstance()) return this;
        if (sentencesBuilder_ == null) {
          if (!other.sentences_.isEmpty()) {
            if (sentences_.isEmpty()) {
              sentences_ = other.sentences_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSentencesIsMutable();
              sentences_.addAll(other.sentences_);
            }
            onChanged();
          }
        } else {
          if (!other.sentences_.isEmpty()) {
            if (sentencesBuilder_.isEmpty()) {
              sentencesBuilder_.dispose();
              sentencesBuilder_ = null;
              sentences_ = other.sentences_;
              bitField0_ = (bitField0_ & ~0x00000001);
              sentencesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSentencesFieldBuilder() : null;
            } else {
              sentencesBuilder_.addAllMessages(other.sentences_);
            }
          }
        }
        if (metaDataBuilder_ == null) {
          if (!other.metaData_.isEmpty()) {
            if (metaData_.isEmpty()) {
              metaData_ = other.metaData_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMetaDataIsMutable();
              metaData_.addAll(other.metaData_);
            }
            onChanged();
          }
        } else {
          if (!other.metaData_.isEmpty()) {
            if (metaDataBuilder_.isEmpty()) {
              metaDataBuilder_.dispose();
              metaDataBuilder_ = null;
              metaData_ = other.metaData_;
              bitField0_ = (bitField0_ & ~0x00000002);
              metaDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMetaDataFieldBuilder() : null;
            } else {
              metaDataBuilder_.addAllMessages(other.metaData_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence m =
                    input.readMessage(
                        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence.parser(),
                        extensionRegistry);
                if (sentencesBuilder_ == null) {
                  ensureSentencesIsMutable();
                  sentences_.add(m);
                } else {
                  sentencesBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData m =
                    input.readMessage(
                        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.parser(),
                        extensionRegistry);
                if (metaDataBuilder_ == null) {
                  ensureMetaDataIsMutable();
                  metaData_.add(m);
                } else {
                  metaDataBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence> sentences_ =
        java.util.Collections.emptyList();
      private void ensureSentencesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          sentences_ = new java.util.ArrayList<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence>(sentences_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.SentenceOrBuilder> sentencesBuilder_;

      /**
       * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence> getSentencesList() {
        if (sentencesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sentences_);
        } else {
          return sentencesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
       */
      public int getSentencesCount() {
        if (sentencesBuilder_ == null) {
          return sentences_.size();
        } else {
          return sentencesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence getSentences(int index) {
        if (sentencesBuilder_ == null) {
          return sentences_.get(index);
        } else {
          return sentencesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
       */
      public Builder setSentences(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence value) {
        if (sentencesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSentencesIsMutable();
          sentences_.set(index, value);
          onChanged();
        } else {
          sentencesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
       */
      public Builder setSentences(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence.Builder builderForValue) {
        if (sentencesBuilder_ == null) {
          ensureSentencesIsMutable();
          sentences_.set(index, builderForValue.build());
          onChanged();
        } else {
          sentencesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
       */
      public Builder addSentences(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence value) {
        if (sentencesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSentencesIsMutable();
          sentences_.add(value);
          onChanged();
        } else {
          sentencesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
       */
      public Builder addSentences(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence value) {
        if (sentencesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSentencesIsMutable();
          sentences_.add(index, value);
          onChanged();
        } else {
          sentencesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
       */
      public Builder addSentences(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence.Builder builderForValue) {
        if (sentencesBuilder_ == null) {
          ensureSentencesIsMutable();
          sentences_.add(builderForValue.build());
          onChanged();
        } else {
          sentencesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
       */
      public Builder addSentences(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence.Builder builderForValue) {
        if (sentencesBuilder_ == null) {
          ensureSentencesIsMutable();
          sentences_.add(index, builderForValue.build());
          onChanged();
        } else {
          sentencesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
       */
      public Builder addAllSentences(
          java.lang.Iterable<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence> values) {
        if (sentencesBuilder_ == null) {
          ensureSentencesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sentences_);
          onChanged();
        } else {
          sentencesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
       */
      public Builder clearSentences() {
        if (sentencesBuilder_ == null) {
          sentences_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          sentencesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
       */
      public Builder removeSentences(int index) {
        if (sentencesBuilder_ == null) {
          ensureSentencesIsMutable();
          sentences_.remove(index);
          onChanged();
        } else {
          sentencesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence.Builder getSentencesBuilder(
          int index) {
        return getSentencesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.SentenceOrBuilder getSentencesOrBuilder(
          int index) {
        if (sentencesBuilder_ == null) {
          return sentences_.get(index);  } else {
          return sentencesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
       */
      public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.SentenceOrBuilder> 
           getSentencesOrBuilderList() {
        if (sentencesBuilder_ != null) {
          return sentencesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sentences_);
        }
      }
      /**
       * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence.Builder addSentencesBuilder() {
        return getSentencesFieldBuilder().addBuilder(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence.getDefaultInstance());
      }
      /**
       * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence.Builder addSentencesBuilder(
          int index) {
        return getSentencesFieldBuilder().addBuilder(
            index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence.getDefaultInstance());
      }
      /**
       * <code>repeated .algebra.Pattern.Sentence sentences = 1;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence.Builder> 
           getSentencesBuilderList() {
        return getSentencesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.SentenceOrBuilder> 
          getSentencesFieldBuilder() {
        if (sentencesBuilder_ == null) {
          sentencesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Sentence.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.SentenceOrBuilder>(
                  sentences_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          sentences_ = null;
        }
        return sentencesBuilder_;
      }

      private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData> metaData_ =
        java.util.Collections.emptyList();
      private void ensureMetaDataIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          metaData_ = new java.util.ArrayList<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData>(metaData_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder> metaDataBuilder_;

      /**
       * <code>repeated .algebra.MetaData meta_data = 2;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData> getMetaDataList() {
        if (metaDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaData_);
        } else {
          return metaDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .algebra.MetaData meta_data = 2;</code>
       */
      public int getMetaDataCount() {
        if (metaDataBuilder_ == null) {
          return metaData_.size();
        } else {
          return metaDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .algebra.MetaData meta_data = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData getMetaData(int index) {
        if (metaDataBuilder_ == null) {
          return metaData_.get(index);
        } else {
          return metaDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .algebra.MetaData meta_data = 2;</code>
       */
      public Builder setMetaData(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData value) {
        if (metaDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaDataIsMutable();
          metaData_.set(index, value);
          onChanged();
        } else {
          metaDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .algebra.MetaData meta_data = 2;</code>
       */
      public Builder setMetaData(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder builderForValue) {
        if (metaDataBuilder_ == null) {
          ensureMetaDataIsMutable();
          metaData_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .algebra.MetaData meta_data = 2;</code>
       */
      public Builder addMetaData(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData value) {
        if (metaDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaDataIsMutable();
          metaData_.add(value);
          onChanged();
        } else {
          metaDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .algebra.MetaData meta_data = 2;</code>
       */
      public Builder addMetaData(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData value) {
        if (metaDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaDataIsMutable();
          metaData_.add(index, value);
          onChanged();
        } else {
          metaDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .algebra.MetaData meta_data = 2;</code>
       */
      public Builder addMetaData(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder builderForValue) {
        if (metaDataBuilder_ == null) {
          ensureMetaDataIsMutable();
          metaData_.add(builderForValue.build());
          onChanged();
        } else {
          metaDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .algebra.MetaData meta_data = 2;</code>
       */
      public Builder addMetaData(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder builderForValue) {
        if (metaDataBuilder_ == null) {
          ensureMetaDataIsMutable();
          metaData_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .algebra.MetaData meta_data = 2;</code>
       */
      public Builder addAllMetaData(
          java.lang.Iterable<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData> values) {
        if (metaDataBuilder_ == null) {
          ensureMetaDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaData_);
          onChanged();
        } else {
          metaDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .algebra.MetaData meta_data = 2;</code>
       */
      public Builder clearMetaData() {
        if (metaDataBuilder_ == null) {
          metaData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          metaDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .algebra.MetaData meta_data = 2;</code>
       */
      public Builder removeMetaData(int index) {
        if (metaDataBuilder_ == null) {
          ensureMetaDataIsMutable();
          metaData_.remove(index);
          onChanged();
        } else {
          metaDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .algebra.MetaData meta_data = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder getMetaDataBuilder(
          int index) {
        return getMetaDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .algebra.MetaData meta_data = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder getMetaDataOrBuilder(
          int index) {
        if (metaDataBuilder_ == null) {
          return metaData_.get(index);  } else {
          return metaDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .algebra.MetaData meta_data = 2;</code>
       */
      public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder> 
           getMetaDataOrBuilderList() {
        if (metaDataBuilder_ != null) {
          return metaDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaData_);
        }
      }
      /**
       * <code>repeated .algebra.MetaData meta_data = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder addMetaDataBuilder() {
        return getMetaDataFieldBuilder().addBuilder(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance());
      }
      /**
       * <code>repeated .algebra.MetaData meta_data = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder addMetaDataBuilder(
          int index) {
        return getMetaDataFieldBuilder().addBuilder(
            index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.getDefaultInstance());
      }
      /**
       * <code>repeated .algebra.MetaData meta_data = 2;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder> 
           getMetaDataBuilderList() {
        return getMetaDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder> 
          getMetaDataFieldBuilder() {
        if (metaDataBuilder_ == null) {
          metaDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaData.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.MetaDataOrBuilder>(
                  metaData_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          metaData_ = null;
        }
        return metaDataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.Pattern)
    }

    // @@protoc_insertion_point(class_scope:algebra.Pattern)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Pattern>
        PARSER = new com.google.protobuf.AbstractParser<Pattern>() {
      @java.lang.Override
      public Pattern parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Pattern> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Pattern> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SampleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.Sample)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The type of sampling
     * </pre>
     *
     * <code>.algebra.Sample.SampleType sample_type = 1;</code>
     * @return Whether the sampleType field is set.
     */
    boolean hasSampleType();
    /**
     * <pre>
     * The type of sampling
     * </pre>
     *
     * <code>.algebra.Sample.SampleType sample_type = 1;</code>
     * @return The sampleType.
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType getSampleType();
    /**
     * <pre>
     * The type of sampling
     * </pre>
     *
     * <code>.algebra.Sample.SampleType sample_type = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleTypeOrBuilder getSampleTypeOrBuilder();

    /**
     * <pre>
     * The seed for random number generator, which is optional
     * </pre>
     *
     * <code>.google.protobuf.Int32Value seed = 2;</code>
     * @return Whether the seed field is set.
     */
    boolean hasSeed();
    /**
     * <pre>
     * The seed for random number generator, which is optional
     * </pre>
     *
     * <code>.google.protobuf.Int32Value seed = 2;</code>
     * @return The seed.
     */
    com.google.protobuf.Int32Value getSeed();
    /**
     * <pre>
     * The seed for random number generator, which is optional
     * </pre>
     *
     * <code>.google.protobuf.Int32Value seed = 2;</code>
     */
    com.google.protobuf.Int32ValueOrBuilder getSeedOrBuilder();

    /**
     * <pre>
     * The variable refer to the sample weight, which is optional
     * </pre>
     *
     * <code>.common.Variable sample_weight = 3;</code>
     * @return Whether the sampleWeight field is set.
     */
    boolean hasSampleWeight();
    /**
     * <pre>
     * The variable refer to the sample weight, which is optional
     * </pre>
     *
     * <code>.common.Variable sample_weight = 3;</code>
     * @return The sampleWeight.
     */
    com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable getSampleWeight();
    /**
     * <pre>
     * The variable refer to the sample weight, which is optional
     * </pre>
     *
     * <code>.common.Variable sample_weight = 3;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder getSampleWeightOrBuilder();
  }
  /**
   * Protobuf type {@code algebra.Sample}
   */
  public static final class Sample extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.Sample)
      SampleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Sample.newBuilder() to construct.
    private Sample(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Sample() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Sample();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sample_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sample_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.Builder.class);
    }

    public interface SampleByRatioOrBuilder extends
        // @@protoc_insertion_point(interface_extends:algebra.Sample.SampleByRatio)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The sample ratio
       * </pre>
       *
       * <code>double ratio = 1;</code>
       * @return The ratio.
       */
      double getRatio();
    }
    /**
     * Protobuf type {@code algebra.Sample.SampleByRatio}
     */
    public static final class SampleByRatio extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:algebra.Sample.SampleByRatio)
        SampleByRatioOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use SampleByRatio.newBuilder() to construct.
      private SampleByRatio(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private SampleByRatio() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new SampleByRatio();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sample_SampleByRatio_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sample_SampleByRatio_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio.Builder.class);
      }

      public static final int RATIO_FIELD_NUMBER = 1;
      private double ratio_ = 0D;
      /**
       * <pre>
       * The sample ratio
       * </pre>
       *
       * <code>double ratio = 1;</code>
       * @return The ratio.
       */
      @java.lang.Override
      public double getRatio() {
        return ratio_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (java.lang.Double.doubleToRawLongBits(ratio_) != 0) {
          output.writeDouble(1, ratio_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (java.lang.Double.doubleToRawLongBits(ratio_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, ratio_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio)) {
          return super.equals(obj);
        }
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio) obj;

        if (java.lang.Double.doubleToLongBits(getRatio())
            != java.lang.Double.doubleToLongBits(
                other.getRatio())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + RATIO_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getRatio()));
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code algebra.Sample.SampleByRatio}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:algebra.Sample.SampleByRatio)
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatioOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sample_SampleByRatio_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sample_SampleByRatio_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio.Builder.class);
        }

        // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          ratio_ = 0D;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sample_SampleByRatio_descriptor;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio getDefaultInstanceForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio.getDefaultInstance();
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio build() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio buildPartial() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.ratio_ = ratio_;
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio) {
            return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio other) {
          if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio.getDefaultInstance()) return this;
          if (other.getRatio() != 0D) {
            setRatio(other.getRatio());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 9: {
                  ratio_ = input.readDouble();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 9
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private double ratio_ ;
        /**
         * <pre>
         * The sample ratio
         * </pre>
         *
         * <code>double ratio = 1;</code>
         * @return The ratio.
         */
        @java.lang.Override
        public double getRatio() {
          return ratio_;
        }
        /**
         * <pre>
         * The sample ratio
         * </pre>
         *
         * <code>double ratio = 1;</code>
         * @param value The ratio to set.
         * @return This builder for chaining.
         */
        public Builder setRatio(double value) {

          ratio_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The sample ratio
         * </pre>
         *
         * <code>double ratio = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearRatio() {
          bitField0_ = (bitField0_ & ~0x00000001);
          ratio_ = 0D;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:algebra.Sample.SampleByRatio)
      }

      // @@protoc_insertion_point(class_scope:algebra.Sample.SampleByRatio)
      private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio();
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<SampleByRatio>
          PARSER = new com.google.protobuf.AbstractParser<SampleByRatio>() {
        @java.lang.Override
        public SampleByRatio parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<SampleByRatio> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<SampleByRatio> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface SampleByNumOrBuilder extends
        // @@protoc_insertion_point(interface_extends:algebra.Sample.SampleByNum)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The sample number
       * </pre>
       *
       * <code>int32 num = 1;</code>
       * @return The num.
       */
      int getNum();
    }
    /**
     * Protobuf type {@code algebra.Sample.SampleByNum}
     */
    public static final class SampleByNum extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:algebra.Sample.SampleByNum)
        SampleByNumOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use SampleByNum.newBuilder() to construct.
      private SampleByNum(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private SampleByNum() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new SampleByNum();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sample_SampleByNum_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sample_SampleByNum_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum.Builder.class);
      }

      public static final int NUM_FIELD_NUMBER = 1;
      private int num_ = 0;
      /**
       * <pre>
       * The sample number
       * </pre>
       *
       * <code>int32 num = 1;</code>
       * @return The num.
       */
      @java.lang.Override
      public int getNum() {
        return num_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (num_ != 0) {
          output.writeInt32(1, num_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (num_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, num_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum)) {
          return super.equals(obj);
        }
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum) obj;

        if (getNum()
            != other.getNum()) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + NUM_FIELD_NUMBER;
        hash = (53 * hash) + getNum();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code algebra.Sample.SampleByNum}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:algebra.Sample.SampleByNum)
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNumOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sample_SampleByNum_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sample_SampleByNum_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum.Builder.class);
        }

        // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          num_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sample_SampleByNum_descriptor;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum getDefaultInstanceForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum.getDefaultInstance();
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum build() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum buildPartial() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.num_ = num_;
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum) {
            return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum other) {
          if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum.getDefaultInstance()) return this;
          if (other.getNum() != 0) {
            setNum(other.getNum());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  num_ = input.readInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int num_ ;
        /**
         * <pre>
         * The sample number
         * </pre>
         *
         * <code>int32 num = 1;</code>
         * @return The num.
         */
        @java.lang.Override
        public int getNum() {
          return num_;
        }
        /**
         * <pre>
         * The sample number
         * </pre>
         *
         * <code>int32 num = 1;</code>
         * @param value The num to set.
         * @return This builder for chaining.
         */
        public Builder setNum(int value) {

          num_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The sample number
         * </pre>
         *
         * <code>int32 num = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearNum() {
          bitField0_ = (bitField0_ & ~0x00000001);
          num_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:algebra.Sample.SampleByNum)
      }

      // @@protoc_insertion_point(class_scope:algebra.Sample.SampleByNum)
      private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum();
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<SampleByNum>
          PARSER = new com.google.protobuf.AbstractParser<SampleByNum>() {
        @java.lang.Override
        public SampleByNum parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<SampleByNum> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<SampleByNum> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface SampleTypeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:algebra.Sample.SampleType)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.algebra.Sample.SampleByRatio sample_by_ratio = 1;</code>
       * @return Whether the sampleByRatio field is set.
       */
      boolean hasSampleByRatio();
      /**
       * <code>.algebra.Sample.SampleByRatio sample_by_ratio = 1;</code>
       * @return The sampleByRatio.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio getSampleByRatio();
      /**
       * <code>.algebra.Sample.SampleByRatio sample_by_ratio = 1;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatioOrBuilder getSampleByRatioOrBuilder();

      /**
       * <code>.algebra.Sample.SampleByNum sample_by_num = 2;</code>
       * @return Whether the sampleByNum field is set.
       */
      boolean hasSampleByNum();
      /**
       * <code>.algebra.Sample.SampleByNum sample_by_num = 2;</code>
       * @return The sampleByNum.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum getSampleByNum();
      /**
       * <code>.algebra.Sample.SampleByNum sample_by_num = 2;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNumOrBuilder getSampleByNumOrBuilder();

      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType.InnerCase getInnerCase();
    }
    /**
     * Protobuf type {@code algebra.Sample.SampleType}
     */
    public static final class SampleType extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:algebra.Sample.SampleType)
        SampleTypeOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use SampleType.newBuilder() to construct.
      private SampleType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private SampleType() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new SampleType();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sample_SampleType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sample_SampleType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType.Builder.class);
      }

      private int innerCase_ = 0;
      @SuppressWarnings("serial")
      private java.lang.Object inner_;
      public enum InnerCase
          implements com.google.protobuf.Internal.EnumLite,
              com.google.protobuf.AbstractMessage.InternalOneOfEnum {
        SAMPLE_BY_RATIO(1),
        SAMPLE_BY_NUM(2),
        INNER_NOT_SET(0);
        private final int value;
        private InnerCase(int value) {
          this.value = value;
        }
        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static InnerCase valueOf(int value) {
          return forNumber(value);
        }

        public static InnerCase forNumber(int value) {
          switch (value) {
            case 1: return SAMPLE_BY_RATIO;
            case 2: return SAMPLE_BY_NUM;
            case 0: return INNER_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public InnerCase
      getInnerCase() {
        return InnerCase.forNumber(
            innerCase_);
      }

      public static final int SAMPLE_BY_RATIO_FIELD_NUMBER = 1;
      /**
       * <code>.algebra.Sample.SampleByRatio sample_by_ratio = 1;</code>
       * @return Whether the sampleByRatio field is set.
       */
      @java.lang.Override
      public boolean hasSampleByRatio() {
        return innerCase_ == 1;
      }
      /**
       * <code>.algebra.Sample.SampleByRatio sample_by_ratio = 1;</code>
       * @return The sampleByRatio.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio getSampleByRatio() {
        if (innerCase_ == 1) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio) inner_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio.getDefaultInstance();
      }
      /**
       * <code>.algebra.Sample.SampleByRatio sample_by_ratio = 1;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatioOrBuilder getSampleByRatioOrBuilder() {
        if (innerCase_ == 1) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio) inner_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio.getDefaultInstance();
      }

      public static final int SAMPLE_BY_NUM_FIELD_NUMBER = 2;
      /**
       * <code>.algebra.Sample.SampleByNum sample_by_num = 2;</code>
       * @return Whether the sampleByNum field is set.
       */
      @java.lang.Override
      public boolean hasSampleByNum() {
        return innerCase_ == 2;
      }
      /**
       * <code>.algebra.Sample.SampleByNum sample_by_num = 2;</code>
       * @return The sampleByNum.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum getSampleByNum() {
        if (innerCase_ == 2) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum) inner_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum.getDefaultInstance();
      }
      /**
       * <code>.algebra.Sample.SampleByNum sample_by_num = 2;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNumOrBuilder getSampleByNumOrBuilder() {
        if (innerCase_ == 2) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum) inner_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum.getDefaultInstance();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (innerCase_ == 1) {
          output.writeMessage(1, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio) inner_);
        }
        if (innerCase_ == 2) {
          output.writeMessage(2, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum) inner_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (innerCase_ == 1) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio) inner_);
        }
        if (innerCase_ == 2) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum) inner_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType)) {
          return super.equals(obj);
        }
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType) obj;

        if (!getInnerCase().equals(other.getInnerCase())) return false;
        switch (innerCase_) {
          case 1:
            if (!getSampleByRatio()
                .equals(other.getSampleByRatio())) return false;
            break;
          case 2:
            if (!getSampleByNum()
                .equals(other.getSampleByNum())) return false;
            break;
          case 0:
          default:
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        switch (innerCase_) {
          case 1:
            hash = (37 * hash) + SAMPLE_BY_RATIO_FIELD_NUMBER;
            hash = (53 * hash) + getSampleByRatio().hashCode();
            break;
          case 2:
            hash = (37 * hash) + SAMPLE_BY_NUM_FIELD_NUMBER;
            hash = (53 * hash) + getSampleByNum().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code algebra.Sample.SampleType}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:algebra.Sample.SampleType)
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleTypeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sample_SampleType_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sample_SampleType_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType.Builder.class);
        }

        // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          if (sampleByRatioBuilder_ != null) {
            sampleByRatioBuilder_.clear();
          }
          if (sampleByNumBuilder_ != null) {
            sampleByNumBuilder_.clear();
          }
          innerCase_ = 0;
          inner_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sample_SampleType_descriptor;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType getDefaultInstanceForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType.getDefaultInstance();
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType build() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType buildPartial() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          buildPartialOneofs(result);
          onBuilt();
          return result;
        }

        private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType result) {
          int from_bitField0_ = bitField0_;
        }

        private void buildPartialOneofs(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType result) {
          result.innerCase_ = innerCase_;
          result.inner_ = this.inner_;
          if (innerCase_ == 1 &&
              sampleByRatioBuilder_ != null) {
            result.inner_ = sampleByRatioBuilder_.build();
          }
          if (innerCase_ == 2 &&
              sampleByNumBuilder_ != null) {
            result.inner_ = sampleByNumBuilder_.build();
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType) {
            return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType other) {
          if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType.getDefaultInstance()) return this;
          switch (other.getInnerCase()) {
            case SAMPLE_BY_RATIO: {
              mergeSampleByRatio(other.getSampleByRatio());
              break;
            }
            case SAMPLE_BY_NUM: {
              mergeSampleByNum(other.getSampleByNum());
              break;
            }
            case INNER_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getSampleByRatioFieldBuilder().getBuilder(),
                      extensionRegistry);
                  innerCase_ = 1;
                  break;
                } // case 10
                case 18: {
                  input.readMessage(
                      getSampleByNumFieldBuilder().getBuilder(),
                      extensionRegistry);
                  innerCase_ = 2;
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int innerCase_ = 0;
        private java.lang.Object inner_;
        public InnerCase
            getInnerCase() {
          return InnerCase.forNumber(
              innerCase_);
        }

        public Builder clearInner() {
          innerCase_ = 0;
          inner_ = null;
          onChanged();
          return this;
        }

        private int bitField0_;

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatioOrBuilder> sampleByRatioBuilder_;
        /**
         * <code>.algebra.Sample.SampleByRatio sample_by_ratio = 1;</code>
         * @return Whether the sampleByRatio field is set.
         */
        @java.lang.Override
        public boolean hasSampleByRatio() {
          return innerCase_ == 1;
        }
        /**
         * <code>.algebra.Sample.SampleByRatio sample_by_ratio = 1;</code>
         * @return The sampleByRatio.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio getSampleByRatio() {
          if (sampleByRatioBuilder_ == null) {
            if (innerCase_ == 1) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio) inner_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio.getDefaultInstance();
          } else {
            if (innerCase_ == 1) {
              return sampleByRatioBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Sample.SampleByRatio sample_by_ratio = 1;</code>
         */
        public Builder setSampleByRatio(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio value) {
          if (sampleByRatioBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            inner_ = value;
            onChanged();
          } else {
            sampleByRatioBuilder_.setMessage(value);
          }
          innerCase_ = 1;
          return this;
        }
        /**
         * <code>.algebra.Sample.SampleByRatio sample_by_ratio = 1;</code>
         */
        public Builder setSampleByRatio(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio.Builder builderForValue) {
          if (sampleByRatioBuilder_ == null) {
            inner_ = builderForValue.build();
            onChanged();
          } else {
            sampleByRatioBuilder_.setMessage(builderForValue.build());
          }
          innerCase_ = 1;
          return this;
        }
        /**
         * <code>.algebra.Sample.SampleByRatio sample_by_ratio = 1;</code>
         */
        public Builder mergeSampleByRatio(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio value) {
          if (sampleByRatioBuilder_ == null) {
            if (innerCase_ == 1 &&
                inner_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio.getDefaultInstance()) {
              inner_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio) inner_)
                  .mergeFrom(value).buildPartial();
            } else {
              inner_ = value;
            }
            onChanged();
          } else {
            if (innerCase_ == 1) {
              sampleByRatioBuilder_.mergeFrom(value);
            } else {
              sampleByRatioBuilder_.setMessage(value);
            }
          }
          innerCase_ = 1;
          return this;
        }
        /**
         * <code>.algebra.Sample.SampleByRatio sample_by_ratio = 1;</code>
         */
        public Builder clearSampleByRatio() {
          if (sampleByRatioBuilder_ == null) {
            if (innerCase_ == 1) {
              innerCase_ = 0;
              inner_ = null;
              onChanged();
            }
          } else {
            if (innerCase_ == 1) {
              innerCase_ = 0;
              inner_ = null;
            }
            sampleByRatioBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.Sample.SampleByRatio sample_by_ratio = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio.Builder getSampleByRatioBuilder() {
          return getSampleByRatioFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.Sample.SampleByRatio sample_by_ratio = 1;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatioOrBuilder getSampleByRatioOrBuilder() {
          if ((innerCase_ == 1) && (sampleByRatioBuilder_ != null)) {
            return sampleByRatioBuilder_.getMessageOrBuilder();
          } else {
            if (innerCase_ == 1) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio) inner_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Sample.SampleByRatio sample_by_ratio = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatioOrBuilder> 
            getSampleByRatioFieldBuilder() {
          if (sampleByRatioBuilder_ == null) {
            if (!(innerCase_ == 1)) {
              inner_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio.getDefaultInstance();
            }
            sampleByRatioBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatioOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByRatio) inner_,
                    getParentForChildren(),
                    isClean());
            inner_ = null;
          }
          innerCase_ = 1;
          onChanged();
          return sampleByRatioBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNumOrBuilder> sampleByNumBuilder_;
        /**
         * <code>.algebra.Sample.SampleByNum sample_by_num = 2;</code>
         * @return Whether the sampleByNum field is set.
         */
        @java.lang.Override
        public boolean hasSampleByNum() {
          return innerCase_ == 2;
        }
        /**
         * <code>.algebra.Sample.SampleByNum sample_by_num = 2;</code>
         * @return The sampleByNum.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum getSampleByNum() {
          if (sampleByNumBuilder_ == null) {
            if (innerCase_ == 2) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum) inner_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum.getDefaultInstance();
          } else {
            if (innerCase_ == 2) {
              return sampleByNumBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Sample.SampleByNum sample_by_num = 2;</code>
         */
        public Builder setSampleByNum(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum value) {
          if (sampleByNumBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            inner_ = value;
            onChanged();
          } else {
            sampleByNumBuilder_.setMessage(value);
          }
          innerCase_ = 2;
          return this;
        }
        /**
         * <code>.algebra.Sample.SampleByNum sample_by_num = 2;</code>
         */
        public Builder setSampleByNum(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum.Builder builderForValue) {
          if (sampleByNumBuilder_ == null) {
            inner_ = builderForValue.build();
            onChanged();
          } else {
            sampleByNumBuilder_.setMessage(builderForValue.build());
          }
          innerCase_ = 2;
          return this;
        }
        /**
         * <code>.algebra.Sample.SampleByNum sample_by_num = 2;</code>
         */
        public Builder mergeSampleByNum(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum value) {
          if (sampleByNumBuilder_ == null) {
            if (innerCase_ == 2 &&
                inner_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum.getDefaultInstance()) {
              inner_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum) inner_)
                  .mergeFrom(value).buildPartial();
            } else {
              inner_ = value;
            }
            onChanged();
          } else {
            if (innerCase_ == 2) {
              sampleByNumBuilder_.mergeFrom(value);
            } else {
              sampleByNumBuilder_.setMessage(value);
            }
          }
          innerCase_ = 2;
          return this;
        }
        /**
         * <code>.algebra.Sample.SampleByNum sample_by_num = 2;</code>
         */
        public Builder clearSampleByNum() {
          if (sampleByNumBuilder_ == null) {
            if (innerCase_ == 2) {
              innerCase_ = 0;
              inner_ = null;
              onChanged();
            }
          } else {
            if (innerCase_ == 2) {
              innerCase_ = 0;
              inner_ = null;
            }
            sampleByNumBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.Sample.SampleByNum sample_by_num = 2;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum.Builder getSampleByNumBuilder() {
          return getSampleByNumFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.Sample.SampleByNum sample_by_num = 2;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNumOrBuilder getSampleByNumOrBuilder() {
          if ((innerCase_ == 2) && (sampleByNumBuilder_ != null)) {
            return sampleByNumBuilder_.getMessageOrBuilder();
          } else {
            if (innerCase_ == 2) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum) inner_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Sample.SampleByNum sample_by_num = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNumOrBuilder> 
            getSampleByNumFieldBuilder() {
          if (sampleByNumBuilder_ == null) {
            if (!(innerCase_ == 2)) {
              inner_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum.getDefaultInstance();
            }
            sampleByNumBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNumOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleByNum) inner_,
                    getParentForChildren(),
                    isClean());
            inner_ = null;
          }
          innerCase_ = 2;
          onChanged();
          return sampleByNumBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:algebra.Sample.SampleType)
      }

      // @@protoc_insertion_point(class_scope:algebra.Sample.SampleType)
      private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType();
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<SampleType>
          PARSER = new com.google.protobuf.AbstractParser<SampleType>() {
        @java.lang.Override
        public SampleType parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<SampleType> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<SampleType> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int SAMPLE_TYPE_FIELD_NUMBER = 1;
    private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType sampleType_;
    /**
     * <pre>
     * The type of sampling
     * </pre>
     *
     * <code>.algebra.Sample.SampleType sample_type = 1;</code>
     * @return Whether the sampleType field is set.
     */
    @java.lang.Override
    public boolean hasSampleType() {
      return sampleType_ != null;
    }
    /**
     * <pre>
     * The type of sampling
     * </pre>
     *
     * <code>.algebra.Sample.SampleType sample_type = 1;</code>
     * @return The sampleType.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType getSampleType() {
      return sampleType_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType.getDefaultInstance() : sampleType_;
    }
    /**
     * <pre>
     * The type of sampling
     * </pre>
     *
     * <code>.algebra.Sample.SampleType sample_type = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleTypeOrBuilder getSampleTypeOrBuilder() {
      return sampleType_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType.getDefaultInstance() : sampleType_;
    }

    public static final int SEED_FIELD_NUMBER = 2;
    private com.google.protobuf.Int32Value seed_;
    /**
     * <pre>
     * The seed for random number generator, which is optional
     * </pre>
     *
     * <code>.google.protobuf.Int32Value seed = 2;</code>
     * @return Whether the seed field is set.
     */
    @java.lang.Override
    public boolean hasSeed() {
      return seed_ != null;
    }
    /**
     * <pre>
     * The seed for random number generator, which is optional
     * </pre>
     *
     * <code>.google.protobuf.Int32Value seed = 2;</code>
     * @return The seed.
     */
    @java.lang.Override
    public com.google.protobuf.Int32Value getSeed() {
      return seed_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : seed_;
    }
    /**
     * <pre>
     * The seed for random number generator, which is optional
     * </pre>
     *
     * <code>.google.protobuf.Int32Value seed = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int32ValueOrBuilder getSeedOrBuilder() {
      return seed_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : seed_;
    }

    public static final int SAMPLE_WEIGHT_FIELD_NUMBER = 3;
    private com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable sampleWeight_;
    /**
     * <pre>
     * The variable refer to the sample weight, which is optional
     * </pre>
     *
     * <code>.common.Variable sample_weight = 3;</code>
     * @return Whether the sampleWeight field is set.
     */
    @java.lang.Override
    public boolean hasSampleWeight() {
      return sampleWeight_ != null;
    }
    /**
     * <pre>
     * The variable refer to the sample weight, which is optional
     * </pre>
     *
     * <code>.common.Variable sample_weight = 3;</code>
     * @return The sampleWeight.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable getSampleWeight() {
      return sampleWeight_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.getDefaultInstance() : sampleWeight_;
    }
    /**
     * <pre>
     * The variable refer to the sample weight, which is optional
     * </pre>
     *
     * <code>.common.Variable sample_weight = 3;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder getSampleWeightOrBuilder() {
      return sampleWeight_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.getDefaultInstance() : sampleWeight_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sampleType_ != null) {
        output.writeMessage(1, getSampleType());
      }
      if (seed_ != null) {
        output.writeMessage(2, getSeed());
      }
      if (sampleWeight_ != null) {
        output.writeMessage(3, getSampleWeight());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sampleType_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSampleType());
      }
      if (seed_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSeed());
      }
      if (sampleWeight_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSampleWeight());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample) obj;

      if (hasSampleType() != other.hasSampleType()) return false;
      if (hasSampleType()) {
        if (!getSampleType()
            .equals(other.getSampleType())) return false;
      }
      if (hasSeed() != other.hasSeed()) return false;
      if (hasSeed()) {
        if (!getSeed()
            .equals(other.getSeed())) return false;
      }
      if (hasSampleWeight() != other.hasSampleWeight()) return false;
      if (hasSampleWeight()) {
        if (!getSampleWeight()
            .equals(other.getSampleWeight())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSampleType()) {
        hash = (37 * hash) + SAMPLE_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getSampleType().hashCode();
      }
      if (hasSeed()) {
        hash = (37 * hash) + SEED_FIELD_NUMBER;
        hash = (53 * hash) + getSeed().hashCode();
      }
      if (hasSampleWeight()) {
        hash = (37 * hash) + SAMPLE_WEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + getSampleWeight().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code algebra.Sample}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.Sample)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SampleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sample_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sample_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        sampleType_ = null;
        if (sampleTypeBuilder_ != null) {
          sampleTypeBuilder_.dispose();
          sampleTypeBuilder_ = null;
        }
        seed_ = null;
        if (seedBuilder_ != null) {
          seedBuilder_.dispose();
          seedBuilder_ = null;
        }
        sampleWeight_ = null;
        if (sampleWeightBuilder_ != null) {
          sampleWeightBuilder_.dispose();
          sampleWeightBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sample_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.sampleType_ = sampleTypeBuilder_ == null
              ? sampleType_
              : sampleTypeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.seed_ = seedBuilder_ == null
              ? seed_
              : seedBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.sampleWeight_ = sampleWeightBuilder_ == null
              ? sampleWeight_
              : sampleWeightBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.getDefaultInstance()) return this;
        if (other.hasSampleType()) {
          mergeSampleType(other.getSampleType());
        }
        if (other.hasSeed()) {
          mergeSeed(other.getSeed());
        }
        if (other.hasSampleWeight()) {
          mergeSampleWeight(other.getSampleWeight());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getSampleTypeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getSeedFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getSampleWeightFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType sampleType_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleTypeOrBuilder> sampleTypeBuilder_;
      /**
       * <pre>
       * The type of sampling
       * </pre>
       *
       * <code>.algebra.Sample.SampleType sample_type = 1;</code>
       * @return Whether the sampleType field is set.
       */
      public boolean hasSampleType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The type of sampling
       * </pre>
       *
       * <code>.algebra.Sample.SampleType sample_type = 1;</code>
       * @return The sampleType.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType getSampleType() {
        if (sampleTypeBuilder_ == null) {
          return sampleType_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType.getDefaultInstance() : sampleType_;
        } else {
          return sampleTypeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The type of sampling
       * </pre>
       *
       * <code>.algebra.Sample.SampleType sample_type = 1;</code>
       */
      public Builder setSampleType(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType value) {
        if (sampleTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sampleType_ = value;
        } else {
          sampleTypeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of sampling
       * </pre>
       *
       * <code>.algebra.Sample.SampleType sample_type = 1;</code>
       */
      public Builder setSampleType(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType.Builder builderForValue) {
        if (sampleTypeBuilder_ == null) {
          sampleType_ = builderForValue.build();
        } else {
          sampleTypeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of sampling
       * </pre>
       *
       * <code>.algebra.Sample.SampleType sample_type = 1;</code>
       */
      public Builder mergeSampleType(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType value) {
        if (sampleTypeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            sampleType_ != null &&
            sampleType_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType.getDefaultInstance()) {
            getSampleTypeBuilder().mergeFrom(value);
          } else {
            sampleType_ = value;
          }
        } else {
          sampleTypeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of sampling
       * </pre>
       *
       * <code>.algebra.Sample.SampleType sample_type = 1;</code>
       */
      public Builder clearSampleType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sampleType_ = null;
        if (sampleTypeBuilder_ != null) {
          sampleTypeBuilder_.dispose();
          sampleTypeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of sampling
       * </pre>
       *
       * <code>.algebra.Sample.SampleType sample_type = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType.Builder getSampleTypeBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSampleTypeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The type of sampling
       * </pre>
       *
       * <code>.algebra.Sample.SampleType sample_type = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleTypeOrBuilder getSampleTypeOrBuilder() {
        if (sampleTypeBuilder_ != null) {
          return sampleTypeBuilder_.getMessageOrBuilder();
        } else {
          return sampleType_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType.getDefaultInstance() : sampleType_;
        }
      }
      /**
       * <pre>
       * The type of sampling
       * </pre>
       *
       * <code>.algebra.Sample.SampleType sample_type = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleTypeOrBuilder> 
          getSampleTypeFieldBuilder() {
        if (sampleTypeBuilder_ == null) {
          sampleTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleType.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.SampleTypeOrBuilder>(
                  getSampleType(),
                  getParentForChildren(),
                  isClean());
          sampleType_ = null;
        }
        return sampleTypeBuilder_;
      }

      private com.google.protobuf.Int32Value seed_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> seedBuilder_;
      /**
       * <pre>
       * The seed for random number generator, which is optional
       * </pre>
       *
       * <code>.google.protobuf.Int32Value seed = 2;</code>
       * @return Whether the seed field is set.
       */
      public boolean hasSeed() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The seed for random number generator, which is optional
       * </pre>
       *
       * <code>.google.protobuf.Int32Value seed = 2;</code>
       * @return The seed.
       */
      public com.google.protobuf.Int32Value getSeed() {
        if (seedBuilder_ == null) {
          return seed_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : seed_;
        } else {
          return seedBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The seed for random number generator, which is optional
       * </pre>
       *
       * <code>.google.protobuf.Int32Value seed = 2;</code>
       */
      public Builder setSeed(com.google.protobuf.Int32Value value) {
        if (seedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          seed_ = value;
        } else {
          seedBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The seed for random number generator, which is optional
       * </pre>
       *
       * <code>.google.protobuf.Int32Value seed = 2;</code>
       */
      public Builder setSeed(
          com.google.protobuf.Int32Value.Builder builderForValue) {
        if (seedBuilder_ == null) {
          seed_ = builderForValue.build();
        } else {
          seedBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The seed for random number generator, which is optional
       * </pre>
       *
       * <code>.google.protobuf.Int32Value seed = 2;</code>
       */
      public Builder mergeSeed(com.google.protobuf.Int32Value value) {
        if (seedBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            seed_ != null &&
            seed_ != com.google.protobuf.Int32Value.getDefaultInstance()) {
            getSeedBuilder().mergeFrom(value);
          } else {
            seed_ = value;
          }
        } else {
          seedBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The seed for random number generator, which is optional
       * </pre>
       *
       * <code>.google.protobuf.Int32Value seed = 2;</code>
       */
      public Builder clearSeed() {
        bitField0_ = (bitField0_ & ~0x00000002);
        seed_ = null;
        if (seedBuilder_ != null) {
          seedBuilder_.dispose();
          seedBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The seed for random number generator, which is optional
       * </pre>
       *
       * <code>.google.protobuf.Int32Value seed = 2;</code>
       */
      public com.google.protobuf.Int32Value.Builder getSeedBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSeedFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The seed for random number generator, which is optional
       * </pre>
       *
       * <code>.google.protobuf.Int32Value seed = 2;</code>
       */
      public com.google.protobuf.Int32ValueOrBuilder getSeedOrBuilder() {
        if (seedBuilder_ != null) {
          return seedBuilder_.getMessageOrBuilder();
        } else {
          return seed_ == null ?
              com.google.protobuf.Int32Value.getDefaultInstance() : seed_;
        }
      }
      /**
       * <pre>
       * The seed for random number generator, which is optional
       * </pre>
       *
       * <code>.google.protobuf.Int32Value seed = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
          getSeedFieldBuilder() {
        if (seedBuilder_ == null) {
          seedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                  getSeed(),
                  getParentForChildren(),
                  isClean());
          seed_ = null;
        }
        return seedBuilder_;
      }

      private com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable sampleWeight_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> sampleWeightBuilder_;
      /**
       * <pre>
       * The variable refer to the sample weight, which is optional
       * </pre>
       *
       * <code>.common.Variable sample_weight = 3;</code>
       * @return Whether the sampleWeight field is set.
       */
      public boolean hasSampleWeight() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The variable refer to the sample weight, which is optional
       * </pre>
       *
       * <code>.common.Variable sample_weight = 3;</code>
       * @return The sampleWeight.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable getSampleWeight() {
        if (sampleWeightBuilder_ == null) {
          return sampleWeight_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.getDefaultInstance() : sampleWeight_;
        } else {
          return sampleWeightBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The variable refer to the sample weight, which is optional
       * </pre>
       *
       * <code>.common.Variable sample_weight = 3;</code>
       */
      public Builder setSampleWeight(com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable value) {
        if (sampleWeightBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sampleWeight_ = value;
        } else {
          sampleWeightBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The variable refer to the sample weight, which is optional
       * </pre>
       *
       * <code>.common.Variable sample_weight = 3;</code>
       */
      public Builder setSampleWeight(
          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder builderForValue) {
        if (sampleWeightBuilder_ == null) {
          sampleWeight_ = builderForValue.build();
        } else {
          sampleWeightBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The variable refer to the sample weight, which is optional
       * </pre>
       *
       * <code>.common.Variable sample_weight = 3;</code>
       */
      public Builder mergeSampleWeight(com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable value) {
        if (sampleWeightBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            sampleWeight_ != null &&
            sampleWeight_ != com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.getDefaultInstance()) {
            getSampleWeightBuilder().mergeFrom(value);
          } else {
            sampleWeight_ = value;
          }
        } else {
          sampleWeightBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The variable refer to the sample weight, which is optional
       * </pre>
       *
       * <code>.common.Variable sample_weight = 3;</code>
       */
      public Builder clearSampleWeight() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sampleWeight_ = null;
        if (sampleWeightBuilder_ != null) {
          sampleWeightBuilder_.dispose();
          sampleWeightBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The variable refer to the sample weight, which is optional
       * </pre>
       *
       * <code>.common.Variable sample_weight = 3;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder getSampleWeightBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getSampleWeightFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The variable refer to the sample weight, which is optional
       * </pre>
       *
       * <code>.common.Variable sample_weight = 3;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder getSampleWeightOrBuilder() {
        if (sampleWeightBuilder_ != null) {
          return sampleWeightBuilder_.getMessageOrBuilder();
        } else {
          return sampleWeight_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.getDefaultInstance() : sampleWeight_;
        }
      }
      /**
       * <pre>
       * The variable refer to the sample weight, which is optional
       * </pre>
       *
       * <code>.common.Variable sample_weight = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder> 
          getSampleWeightFieldBuilder() {
        if (sampleWeightBuilder_ == null) {
          sampleWeightBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.Variable.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.VariableOrBuilder>(
                  getSampleWeight(),
                  getParentForChildren(),
                  isClean());
          sampleWeight_ = null;
        }
        return sampleWeightBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.Sample)
    }

    // @@protoc_insertion_point(class_scope:algebra.Sample)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Sample>
        PARSER = new com.google.protobuf.AbstractParser<Sample>() {
      @java.lang.Override
      public Sample parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Sample> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Sample> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SinkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.Sink)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
     * </pre>
     *
     * <code>repeated .common.NameOrIdKey tags = 1;</code>
     */
    java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey> 
        getTagsList();
    /**
     * <pre>
     * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
     * </pre>
     *
     * <code>repeated .common.NameOrIdKey tags = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey getTags(int index);
    /**
     * <pre>
     * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
     * </pre>
     *
     * <code>repeated .common.NameOrIdKey tags = 1;</code>
     */
    int getTagsCount();
    /**
     * <pre>
     * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
     * </pre>
     *
     * <code>repeated .common.NameOrIdKey tags = 1;</code>
     */
    java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKeyOrBuilder> 
        getTagsOrBuilderList();
    /**
     * <pre>
     * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
     * </pre>
     *
     * <code>repeated .common.NameOrIdKey tags = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKeyOrBuilder getTagsOrBuilder(
        int index);

    /**
     * <pre>
     * Define the target of sink, e.g., to Client as default, to Graph such as Vineyard etc.
     * </pre>
     *
     * <code>.algebra.Sink.SinkTarget sink_target = 2;</code>
     * @return Whether the sinkTarget field is set.
     */
    boolean hasSinkTarget();
    /**
     * <pre>
     * Define the target of sink, e.g., to Client as default, to Graph such as Vineyard etc.
     * </pre>
     *
     * <code>.algebra.Sink.SinkTarget sink_target = 2;</code>
     * @return The sinkTarget.
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget getSinkTarget();
    /**
     * <pre>
     * Define the target of sink, e.g., to Client as default, to Graph such as Vineyard etc.
     * </pre>
     *
     * <code>.algebra.Sink.SinkTarget sink_target = 2;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTargetOrBuilder getSinkTargetOrBuilder();
  }
  /**
   * Protobuf type {@code algebra.Sink}
   */
  public static final class Sink extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.Sink)
      SinkOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Sink.newBuilder() to construct.
    private Sink(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Sink() {
      tags_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Sink();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sink_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sink_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.Builder.class);
    }

    public interface SinkTargetOrBuilder extends
        // @@protoc_insertion_point(interface_extends:algebra.Sink.SinkTarget)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.algebra.SinkDefault sink_default = 1;</code>
       * @return Whether the sinkDefault field is set.
       */
      boolean hasSinkDefault();
      /**
       * <code>.algebra.SinkDefault sink_default = 1;</code>
       * @return The sinkDefault.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault getSinkDefault();
      /**
       * <code>.algebra.SinkDefault sink_default = 1;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefaultOrBuilder getSinkDefaultOrBuilder();

      /**
       * <code>.algebra.SinkVineyard sink_vineyard = 2;</code>
       * @return Whether the sinkVineyard field is set.
       */
      boolean hasSinkVineyard();
      /**
       * <code>.algebra.SinkVineyard sink_vineyard = 2;</code>
       * @return The sinkVineyard.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard getSinkVineyard();
      /**
       * <code>.algebra.SinkVineyard sink_vineyard = 2;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyardOrBuilder getSinkVineyardOrBuilder();

      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget.InnerCase getInnerCase();
    }
    /**
     * Protobuf type {@code algebra.Sink.SinkTarget}
     */
    public static final class SinkTarget extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:algebra.Sink.SinkTarget)
        SinkTargetOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use SinkTarget.newBuilder() to construct.
      private SinkTarget(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private SinkTarget() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new SinkTarget();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sink_SinkTarget_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sink_SinkTarget_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget.Builder.class);
      }

      private int innerCase_ = 0;
      @SuppressWarnings("serial")
      private java.lang.Object inner_;
      public enum InnerCase
          implements com.google.protobuf.Internal.EnumLite,
              com.google.protobuf.AbstractMessage.InternalOneOfEnum {
        SINK_DEFAULT(1),
        SINK_VINEYARD(2),
        INNER_NOT_SET(0);
        private final int value;
        private InnerCase(int value) {
          this.value = value;
        }
        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static InnerCase valueOf(int value) {
          return forNumber(value);
        }

        public static InnerCase forNumber(int value) {
          switch (value) {
            case 1: return SINK_DEFAULT;
            case 2: return SINK_VINEYARD;
            case 0: return INNER_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public InnerCase
      getInnerCase() {
        return InnerCase.forNumber(
            innerCase_);
      }

      public static final int SINK_DEFAULT_FIELD_NUMBER = 1;
      /**
       * <code>.algebra.SinkDefault sink_default = 1;</code>
       * @return Whether the sinkDefault field is set.
       */
      @java.lang.Override
      public boolean hasSinkDefault() {
        return innerCase_ == 1;
      }
      /**
       * <code>.algebra.SinkDefault sink_default = 1;</code>
       * @return The sinkDefault.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault getSinkDefault() {
        if (innerCase_ == 1) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault) inner_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.getDefaultInstance();
      }
      /**
       * <code>.algebra.SinkDefault sink_default = 1;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefaultOrBuilder getSinkDefaultOrBuilder() {
        if (innerCase_ == 1) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault) inner_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.getDefaultInstance();
      }

      public static final int SINK_VINEYARD_FIELD_NUMBER = 2;
      /**
       * <code>.algebra.SinkVineyard sink_vineyard = 2;</code>
       * @return Whether the sinkVineyard field is set.
       */
      @java.lang.Override
      public boolean hasSinkVineyard() {
        return innerCase_ == 2;
      }
      /**
       * <code>.algebra.SinkVineyard sink_vineyard = 2;</code>
       * @return The sinkVineyard.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard getSinkVineyard() {
        if (innerCase_ == 2) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard) inner_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard.getDefaultInstance();
      }
      /**
       * <code>.algebra.SinkVineyard sink_vineyard = 2;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyardOrBuilder getSinkVineyardOrBuilder() {
        if (innerCase_ == 2) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard) inner_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard.getDefaultInstance();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (innerCase_ == 1) {
          output.writeMessage(1, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault) inner_);
        }
        if (innerCase_ == 2) {
          output.writeMessage(2, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard) inner_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (innerCase_ == 1) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault) inner_);
        }
        if (innerCase_ == 2) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard) inner_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget)) {
          return super.equals(obj);
        }
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget) obj;

        if (!getInnerCase().equals(other.getInnerCase())) return false;
        switch (innerCase_) {
          case 1:
            if (!getSinkDefault()
                .equals(other.getSinkDefault())) return false;
            break;
          case 2:
            if (!getSinkVineyard()
                .equals(other.getSinkVineyard())) return false;
            break;
          case 0:
          default:
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        switch (innerCase_) {
          case 1:
            hash = (37 * hash) + SINK_DEFAULT_FIELD_NUMBER;
            hash = (53 * hash) + getSinkDefault().hashCode();
            break;
          case 2:
            hash = (37 * hash) + SINK_VINEYARD_FIELD_NUMBER;
            hash = (53 * hash) + getSinkVineyard().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code algebra.Sink.SinkTarget}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:algebra.Sink.SinkTarget)
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTargetOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sink_SinkTarget_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sink_SinkTarget_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget.Builder.class);
        }

        // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          if (sinkDefaultBuilder_ != null) {
            sinkDefaultBuilder_.clear();
          }
          if (sinkVineyardBuilder_ != null) {
            sinkVineyardBuilder_.clear();
          }
          innerCase_ = 0;
          inner_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sink_SinkTarget_descriptor;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget getDefaultInstanceForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget.getDefaultInstance();
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget build() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget buildPartial() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          buildPartialOneofs(result);
          onBuilt();
          return result;
        }

        private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget result) {
          int from_bitField0_ = bitField0_;
        }

        private void buildPartialOneofs(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget result) {
          result.innerCase_ = innerCase_;
          result.inner_ = this.inner_;
          if (innerCase_ == 1 &&
              sinkDefaultBuilder_ != null) {
            result.inner_ = sinkDefaultBuilder_.build();
          }
          if (innerCase_ == 2 &&
              sinkVineyardBuilder_ != null) {
            result.inner_ = sinkVineyardBuilder_.build();
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget) {
            return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget other) {
          if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget.getDefaultInstance()) return this;
          switch (other.getInnerCase()) {
            case SINK_DEFAULT: {
              mergeSinkDefault(other.getSinkDefault());
              break;
            }
            case SINK_VINEYARD: {
              mergeSinkVineyard(other.getSinkVineyard());
              break;
            }
            case INNER_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getSinkDefaultFieldBuilder().getBuilder(),
                      extensionRegistry);
                  innerCase_ = 1;
                  break;
                } // case 10
                case 18: {
                  input.readMessage(
                      getSinkVineyardFieldBuilder().getBuilder(),
                      extensionRegistry);
                  innerCase_ = 2;
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int innerCase_ = 0;
        private java.lang.Object inner_;
        public InnerCase
            getInnerCase() {
          return InnerCase.forNumber(
              innerCase_);
        }

        public Builder clearInner() {
          innerCase_ = 0;
          inner_ = null;
          onChanged();
          return this;
        }

        private int bitField0_;

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefaultOrBuilder> sinkDefaultBuilder_;
        /**
         * <code>.algebra.SinkDefault sink_default = 1;</code>
         * @return Whether the sinkDefault field is set.
         */
        @java.lang.Override
        public boolean hasSinkDefault() {
          return innerCase_ == 1;
        }
        /**
         * <code>.algebra.SinkDefault sink_default = 1;</code>
         * @return The sinkDefault.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault getSinkDefault() {
          if (sinkDefaultBuilder_ == null) {
            if (innerCase_ == 1) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault) inner_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.getDefaultInstance();
          } else {
            if (innerCase_ == 1) {
              return sinkDefaultBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.SinkDefault sink_default = 1;</code>
         */
        public Builder setSinkDefault(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault value) {
          if (sinkDefaultBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            inner_ = value;
            onChanged();
          } else {
            sinkDefaultBuilder_.setMessage(value);
          }
          innerCase_ = 1;
          return this;
        }
        /**
         * <code>.algebra.SinkDefault sink_default = 1;</code>
         */
        public Builder setSinkDefault(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.Builder builderForValue) {
          if (sinkDefaultBuilder_ == null) {
            inner_ = builderForValue.build();
            onChanged();
          } else {
            sinkDefaultBuilder_.setMessage(builderForValue.build());
          }
          innerCase_ = 1;
          return this;
        }
        /**
         * <code>.algebra.SinkDefault sink_default = 1;</code>
         */
        public Builder mergeSinkDefault(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault value) {
          if (sinkDefaultBuilder_ == null) {
            if (innerCase_ == 1 &&
                inner_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.getDefaultInstance()) {
              inner_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault) inner_)
                  .mergeFrom(value).buildPartial();
            } else {
              inner_ = value;
            }
            onChanged();
          } else {
            if (innerCase_ == 1) {
              sinkDefaultBuilder_.mergeFrom(value);
            } else {
              sinkDefaultBuilder_.setMessage(value);
            }
          }
          innerCase_ = 1;
          return this;
        }
        /**
         * <code>.algebra.SinkDefault sink_default = 1;</code>
         */
        public Builder clearSinkDefault() {
          if (sinkDefaultBuilder_ == null) {
            if (innerCase_ == 1) {
              innerCase_ = 0;
              inner_ = null;
              onChanged();
            }
          } else {
            if (innerCase_ == 1) {
              innerCase_ = 0;
              inner_ = null;
            }
            sinkDefaultBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.SinkDefault sink_default = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.Builder getSinkDefaultBuilder() {
          return getSinkDefaultFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.SinkDefault sink_default = 1;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefaultOrBuilder getSinkDefaultOrBuilder() {
          if ((innerCase_ == 1) && (sinkDefaultBuilder_ != null)) {
            return sinkDefaultBuilder_.getMessageOrBuilder();
          } else {
            if (innerCase_ == 1) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault) inner_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.SinkDefault sink_default = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefaultOrBuilder> 
            getSinkDefaultFieldBuilder() {
          if (sinkDefaultBuilder_ == null) {
            if (!(innerCase_ == 1)) {
              inner_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.getDefaultInstance();
            }
            sinkDefaultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefaultOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault) inner_,
                    getParentForChildren(),
                    isClean());
            inner_ = null;
          }
          innerCase_ = 1;
          onChanged();
          return sinkDefaultBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyardOrBuilder> sinkVineyardBuilder_;
        /**
         * <code>.algebra.SinkVineyard sink_vineyard = 2;</code>
         * @return Whether the sinkVineyard field is set.
         */
        @java.lang.Override
        public boolean hasSinkVineyard() {
          return innerCase_ == 2;
        }
        /**
         * <code>.algebra.SinkVineyard sink_vineyard = 2;</code>
         * @return The sinkVineyard.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard getSinkVineyard() {
          if (sinkVineyardBuilder_ == null) {
            if (innerCase_ == 2) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard) inner_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard.getDefaultInstance();
          } else {
            if (innerCase_ == 2) {
              return sinkVineyardBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.SinkVineyard sink_vineyard = 2;</code>
         */
        public Builder setSinkVineyard(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard value) {
          if (sinkVineyardBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            inner_ = value;
            onChanged();
          } else {
            sinkVineyardBuilder_.setMessage(value);
          }
          innerCase_ = 2;
          return this;
        }
        /**
         * <code>.algebra.SinkVineyard sink_vineyard = 2;</code>
         */
        public Builder setSinkVineyard(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard.Builder builderForValue) {
          if (sinkVineyardBuilder_ == null) {
            inner_ = builderForValue.build();
            onChanged();
          } else {
            sinkVineyardBuilder_.setMessage(builderForValue.build());
          }
          innerCase_ = 2;
          return this;
        }
        /**
         * <code>.algebra.SinkVineyard sink_vineyard = 2;</code>
         */
        public Builder mergeSinkVineyard(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard value) {
          if (sinkVineyardBuilder_ == null) {
            if (innerCase_ == 2 &&
                inner_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard.getDefaultInstance()) {
              inner_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard) inner_)
                  .mergeFrom(value).buildPartial();
            } else {
              inner_ = value;
            }
            onChanged();
          } else {
            if (innerCase_ == 2) {
              sinkVineyardBuilder_.mergeFrom(value);
            } else {
              sinkVineyardBuilder_.setMessage(value);
            }
          }
          innerCase_ = 2;
          return this;
        }
        /**
         * <code>.algebra.SinkVineyard sink_vineyard = 2;</code>
         */
        public Builder clearSinkVineyard() {
          if (sinkVineyardBuilder_ == null) {
            if (innerCase_ == 2) {
              innerCase_ = 0;
              inner_ = null;
              onChanged();
            }
          } else {
            if (innerCase_ == 2) {
              innerCase_ = 0;
              inner_ = null;
            }
            sinkVineyardBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.SinkVineyard sink_vineyard = 2;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard.Builder getSinkVineyardBuilder() {
          return getSinkVineyardFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.SinkVineyard sink_vineyard = 2;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyardOrBuilder getSinkVineyardOrBuilder() {
          if ((innerCase_ == 2) && (sinkVineyardBuilder_ != null)) {
            return sinkVineyardBuilder_.getMessageOrBuilder();
          } else {
            if (innerCase_ == 2) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard) inner_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.SinkVineyard sink_vineyard = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyardOrBuilder> 
            getSinkVineyardFieldBuilder() {
          if (sinkVineyardBuilder_ == null) {
            if (!(innerCase_ == 2)) {
              inner_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard.getDefaultInstance();
            }
            sinkVineyardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyardOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard) inner_,
                    getParentForChildren(),
                    isClean());
            inner_ = null;
          }
          innerCase_ = 2;
          onChanged();
          return sinkVineyardBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:algebra.Sink.SinkTarget)
      }

      // @@protoc_insertion_point(class_scope:algebra.Sink.SinkTarget)
      private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget();
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<SinkTarget>
          PARSER = new com.google.protobuf.AbstractParser<SinkTarget>() {
        @java.lang.Override
        public SinkTarget parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<SinkTarget> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<SinkTarget> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int TAGS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey> tags_;
    /**
     * <pre>
     * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
     * </pre>
     *
     * <code>repeated .common.NameOrIdKey tags = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey> getTagsList() {
      return tags_;
    }
    /**
     * <pre>
     * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
     * </pre>
     *
     * <code>repeated .common.NameOrIdKey tags = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKeyOrBuilder> 
        getTagsOrBuilderList() {
      return tags_;
    }
    /**
     * <pre>
     * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
     * </pre>
     *
     * <code>repeated .common.NameOrIdKey tags = 1;</code>
     */
    @java.lang.Override
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <pre>
     * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
     * </pre>
     *
     * <code>repeated .common.NameOrIdKey tags = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey getTags(int index) {
      return tags_.get(index);
    }
    /**
     * <pre>
     * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
     * </pre>
     *
     * <code>repeated .common.NameOrIdKey tags = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKeyOrBuilder getTagsOrBuilder(
        int index) {
      return tags_.get(index);
    }

    public static final int SINK_TARGET_FIELD_NUMBER = 2;
    private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget sinkTarget_;
    /**
     * <pre>
     * Define the target of sink, e.g., to Client as default, to Graph such as Vineyard etc.
     * </pre>
     *
     * <code>.algebra.Sink.SinkTarget sink_target = 2;</code>
     * @return Whether the sinkTarget field is set.
     */
    @java.lang.Override
    public boolean hasSinkTarget() {
      return sinkTarget_ != null;
    }
    /**
     * <pre>
     * Define the target of sink, e.g., to Client as default, to Graph such as Vineyard etc.
     * </pre>
     *
     * <code>.algebra.Sink.SinkTarget sink_target = 2;</code>
     * @return The sinkTarget.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget getSinkTarget() {
      return sinkTarget_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget.getDefaultInstance() : sinkTarget_;
    }
    /**
     * <pre>
     * Define the target of sink, e.g., to Client as default, to Graph such as Vineyard etc.
     * </pre>
     *
     * <code>.algebra.Sink.SinkTarget sink_target = 2;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTargetOrBuilder getSinkTargetOrBuilder() {
      return sinkTarget_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget.getDefaultInstance() : sinkTarget_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < tags_.size(); i++) {
        output.writeMessage(1, tags_.get(i));
      }
      if (sinkTarget_ != null) {
        output.writeMessage(2, getSinkTarget());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < tags_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, tags_.get(i));
      }
      if (sinkTarget_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSinkTarget());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink) obj;

      if (!getTagsList()
          .equals(other.getTagsList())) return false;
      if (hasSinkTarget() != other.hasSinkTarget()) return false;
      if (hasSinkTarget()) {
        if (!getSinkTarget()
            .equals(other.getSinkTarget())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTagsCount() > 0) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + getTagsList().hashCode();
      }
      if (hasSinkTarget()) {
        hash = (37 * hash) + SINK_TARGET_FIELD_NUMBER;
        hash = (53 * hash) + getSinkTarget().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code algebra.Sink}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.Sink)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sink_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sink_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (tagsBuilder_ == null) {
          tags_ = java.util.Collections.emptyList();
        } else {
          tags_ = null;
          tagsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        sinkTarget_ = null;
        if (sinkTargetBuilder_ != null) {
          sinkTargetBuilder_.dispose();
          sinkTargetBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Sink_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink result) {
        if (tagsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            tags_ = java.util.Collections.unmodifiableList(tags_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.tags_ = tags_;
        } else {
          result.tags_ = tagsBuilder_.build();
        }
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.sinkTarget_ = sinkTargetBuilder_ == null
              ? sinkTarget_
              : sinkTargetBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.getDefaultInstance()) return this;
        if (tagsBuilder_ == null) {
          if (!other.tags_.isEmpty()) {
            if (tags_.isEmpty()) {
              tags_ = other.tags_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTagsIsMutable();
              tags_.addAll(other.tags_);
            }
            onChanged();
          }
        } else {
          if (!other.tags_.isEmpty()) {
            if (tagsBuilder_.isEmpty()) {
              tagsBuilder_.dispose();
              tagsBuilder_ = null;
              tags_ = other.tags_;
              bitField0_ = (bitField0_ & ~0x00000001);
              tagsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTagsFieldBuilder() : null;
            } else {
              tagsBuilder_.addAllMessages(other.tags_);
            }
          }
        }
        if (other.hasSinkTarget()) {
          mergeSinkTarget(other.getSinkTarget());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey m =
                    input.readMessage(
                        com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey.parser(),
                        extensionRegistry);
                if (tagsBuilder_ == null) {
                  ensureTagsIsMutable();
                  tags_.add(m);
                } else {
                  tagsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getSinkTargetFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey> tags_ =
        java.util.Collections.emptyList();
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tags_ = new java.util.ArrayList<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey>(tags_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKeyOrBuilder> tagsBuilder_;

      /**
       * <pre>
       * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
       * </pre>
       *
       * <code>repeated .common.NameOrIdKey tags = 1;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey> getTagsList() {
        if (tagsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tags_);
        } else {
          return tagsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
       * </pre>
       *
       * <code>repeated .common.NameOrIdKey tags = 1;</code>
       */
      public int getTagsCount() {
        if (tagsBuilder_ == null) {
          return tags_.size();
        } else {
          return tagsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
       * </pre>
       *
       * <code>repeated .common.NameOrIdKey tags = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey getTags(int index) {
        if (tagsBuilder_ == null) {
          return tags_.get(index);
        } else {
          return tagsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
       * </pre>
       *
       * <code>repeated .common.NameOrIdKey tags = 1;</code>
       */
      public Builder setTags(
          int index, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey value) {
        if (tagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTagsIsMutable();
          tags_.set(index, value);
          onChanged();
        } else {
          tagsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
       * </pre>
       *
       * <code>repeated .common.NameOrIdKey tags = 1;</code>
       */
      public Builder setTags(
          int index, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey.Builder builderForValue) {
        if (tagsBuilder_ == null) {
          ensureTagsIsMutable();
          tags_.set(index, builderForValue.build());
          onChanged();
        } else {
          tagsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
       * </pre>
       *
       * <code>repeated .common.NameOrIdKey tags = 1;</code>
       */
      public Builder addTags(com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey value) {
        if (tagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTagsIsMutable();
          tags_.add(value);
          onChanged();
        } else {
          tagsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
       * </pre>
       *
       * <code>repeated .common.NameOrIdKey tags = 1;</code>
       */
      public Builder addTags(
          int index, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey value) {
        if (tagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTagsIsMutable();
          tags_.add(index, value);
          onChanged();
        } else {
          tagsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
       * </pre>
       *
       * <code>repeated .common.NameOrIdKey tags = 1;</code>
       */
      public Builder addTags(
          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey.Builder builderForValue) {
        if (tagsBuilder_ == null) {
          ensureTagsIsMutable();
          tags_.add(builderForValue.build());
          onChanged();
        } else {
          tagsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
       * </pre>
       *
       * <code>repeated .common.NameOrIdKey tags = 1;</code>
       */
      public Builder addTags(
          int index, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey.Builder builderForValue) {
        if (tagsBuilder_ == null) {
          ensureTagsIsMutable();
          tags_.add(index, builderForValue.build());
          onChanged();
        } else {
          tagsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
       * </pre>
       *
       * <code>repeated .common.NameOrIdKey tags = 1;</code>
       */
      public Builder addAllTags(
          java.lang.Iterable<? extends com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey> values) {
        if (tagsBuilder_ == null) {
          ensureTagsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tags_);
          onChanged();
        } else {
          tagsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
       * </pre>
       *
       * <code>repeated .common.NameOrIdKey tags = 1;</code>
       */
      public Builder clearTags() {
        if (tagsBuilder_ == null) {
          tags_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          tagsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
       * </pre>
       *
       * <code>repeated .common.NameOrIdKey tags = 1;</code>
       */
      public Builder removeTags(int index) {
        if (tagsBuilder_ == null) {
          ensureTagsIsMutable();
          tags_.remove(index);
          onChanged();
        } else {
          tagsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
       * </pre>
       *
       * <code>repeated .common.NameOrIdKey tags = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey.Builder getTagsBuilder(
          int index) {
        return getTagsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
       * </pre>
       *
       * <code>repeated .common.NameOrIdKey tags = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKeyOrBuilder getTagsOrBuilder(
          int index) {
        if (tagsBuilder_ == null) {
          return tags_.get(index);  } else {
          return tagsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
       * </pre>
       *
       * <code>repeated .common.NameOrIdKey tags = 1;</code>
       */
      public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKeyOrBuilder> 
           getTagsOrBuilderList() {
        if (tagsBuilder_ != null) {
          return tagsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tags_);
        }
      }
      /**
       * <pre>
       * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
       * </pre>
       *
       * <code>repeated .common.NameOrIdKey tags = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey.Builder addTagsBuilder() {
        return getTagsFieldBuilder().addBuilder(
            com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey.getDefaultInstance());
      }
      /**
       * <pre>
       * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
       * </pre>
       *
       * <code>repeated .common.NameOrIdKey tags = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey.Builder addTagsBuilder(
          int index) {
        return getTagsFieldBuilder().addBuilder(
            index, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey.getDefaultInstance());
      }
      /**
       * <pre>
       * Define the tags of columns to sink. If no tags given, sink all **tagged** columns by default.
       * </pre>
       *
       * <code>repeated .common.NameOrIdKey tags = 1;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey.Builder> 
           getTagsBuilderList() {
        return getTagsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKeyOrBuilder> 
          getTagsFieldBuilder() {
        if (tagsBuilder_ == null) {
          tagsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKey.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.NameOrIdKeyOrBuilder>(
                  tags_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          tags_ = null;
        }
        return tagsBuilder_;
      }

      private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget sinkTarget_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTargetOrBuilder> sinkTargetBuilder_;
      /**
       * <pre>
       * Define the target of sink, e.g., to Client as default, to Graph such as Vineyard etc.
       * </pre>
       *
       * <code>.algebra.Sink.SinkTarget sink_target = 2;</code>
       * @return Whether the sinkTarget field is set.
       */
      public boolean hasSinkTarget() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Define the target of sink, e.g., to Client as default, to Graph such as Vineyard etc.
       * </pre>
       *
       * <code>.algebra.Sink.SinkTarget sink_target = 2;</code>
       * @return The sinkTarget.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget getSinkTarget() {
        if (sinkTargetBuilder_ == null) {
          return sinkTarget_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget.getDefaultInstance() : sinkTarget_;
        } else {
          return sinkTargetBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Define the target of sink, e.g., to Client as default, to Graph such as Vineyard etc.
       * </pre>
       *
       * <code>.algebra.Sink.SinkTarget sink_target = 2;</code>
       */
      public Builder setSinkTarget(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget value) {
        if (sinkTargetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sinkTarget_ = value;
        } else {
          sinkTargetBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Define the target of sink, e.g., to Client as default, to Graph such as Vineyard etc.
       * </pre>
       *
       * <code>.algebra.Sink.SinkTarget sink_target = 2;</code>
       */
      public Builder setSinkTarget(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget.Builder builderForValue) {
        if (sinkTargetBuilder_ == null) {
          sinkTarget_ = builderForValue.build();
        } else {
          sinkTargetBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Define the target of sink, e.g., to Client as default, to Graph such as Vineyard etc.
       * </pre>
       *
       * <code>.algebra.Sink.SinkTarget sink_target = 2;</code>
       */
      public Builder mergeSinkTarget(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget value) {
        if (sinkTargetBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            sinkTarget_ != null &&
            sinkTarget_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget.getDefaultInstance()) {
            getSinkTargetBuilder().mergeFrom(value);
          } else {
            sinkTarget_ = value;
          }
        } else {
          sinkTargetBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Define the target of sink, e.g., to Client as default, to Graph such as Vineyard etc.
       * </pre>
       *
       * <code>.algebra.Sink.SinkTarget sink_target = 2;</code>
       */
      public Builder clearSinkTarget() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sinkTarget_ = null;
        if (sinkTargetBuilder_ != null) {
          sinkTargetBuilder_.dispose();
          sinkTargetBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Define the target of sink, e.g., to Client as default, to Graph such as Vineyard etc.
       * </pre>
       *
       * <code>.algebra.Sink.SinkTarget sink_target = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget.Builder getSinkTargetBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSinkTargetFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Define the target of sink, e.g., to Client as default, to Graph such as Vineyard etc.
       * </pre>
       *
       * <code>.algebra.Sink.SinkTarget sink_target = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTargetOrBuilder getSinkTargetOrBuilder() {
        if (sinkTargetBuilder_ != null) {
          return sinkTargetBuilder_.getMessageOrBuilder();
        } else {
          return sinkTarget_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget.getDefaultInstance() : sinkTarget_;
        }
      }
      /**
       * <pre>
       * Define the target of sink, e.g., to Client as default, to Graph such as Vineyard etc.
       * </pre>
       *
       * <code>.algebra.Sink.SinkTarget sink_target = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTargetOrBuilder> 
          getSinkTargetFieldBuilder() {
        if (sinkTargetBuilder_ == null) {
          sinkTargetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTarget.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.SinkTargetOrBuilder>(
                  getSinkTarget(),
                  getParentForChildren(),
                  isClean());
          sinkTarget_ = null;
        }
        return sinkTargetBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.Sink)
    }

    // @@protoc_insertion_point(class_scope:algebra.Sink)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Sink>
        PARSER = new com.google.protobuf.AbstractParser<Sink>() {
      @java.lang.Override
      public Sink parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Sink> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Sink> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SinkDefaultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.SinkDefault)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The mapping of id to name given certain `MetaType`
     * </pre>
     *
     * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
     */
    java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping> 
        getIdNameMappingsList();
    /**
     * <pre>
     * The mapping of id to name given certain `MetaType`
     * </pre>
     *
     * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping getIdNameMappings(int index);
    /**
     * <pre>
     * The mapping of id to name given certain `MetaType`
     * </pre>
     *
     * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
     */
    int getIdNameMappingsCount();
    /**
     * <pre>
     * The mapping of id to name given certain `MetaType`
     * </pre>
     *
     * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
     */
    java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMappingOrBuilder> 
        getIdNameMappingsOrBuilderList();
    /**
     * <pre>
     * The mapping of id to name given certain `MetaType`
     * </pre>
     *
     * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMappingOrBuilder getIdNameMappingsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code algebra.SinkDefault}
   */
  public static final class SinkDefault extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.SinkDefault)
      SinkDefaultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SinkDefault.newBuilder() to construct.
    private SinkDefault(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SinkDefault() {
      idNameMappings_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SinkDefault();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_SinkDefault_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_SinkDefault_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.Builder.class);
    }

    /**
     * Protobuf enum {@code algebra.SinkDefault.MetaType}
     */
    public enum MetaType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>ENTITY = 0;</code>
       */
      ENTITY(0),
      /**
       * <code>RELATION = 1;</code>
       */
      RELATION(1),
      /**
       * <code>COLUMN = 2;</code>
       */
      COLUMN(2),
      /**
       * <code>TAG = 3;</code>
       */
      TAG(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>ENTITY = 0;</code>
       */
      public static final int ENTITY_VALUE = 0;
      /**
       * <code>RELATION = 1;</code>
       */
      public static final int RELATION_VALUE = 1;
      /**
       * <code>COLUMN = 2;</code>
       */
      public static final int COLUMN_VALUE = 2;
      /**
       * <code>TAG = 3;</code>
       */
      public static final int TAG_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MetaType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static MetaType forNumber(int value) {
        switch (value) {
          case 0: return ENTITY;
          case 1: return RELATION;
          case 2: return COLUMN;
          case 3: return TAG;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<MetaType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          MetaType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MetaType>() {
              public MetaType findValueByNumber(int number) {
                return MetaType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.getDescriptor().getEnumTypes().get(0);
      }

      private static final MetaType[] VALUES = values();

      public static MetaType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private MetaType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:algebra.SinkDefault.MetaType)
    }

    public interface IdNameMappingOrBuilder extends
        // @@protoc_insertion_point(interface_extends:algebra.SinkDefault.IdNameMapping)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>int32 id = 1;</code>
       * @return The id.
       */
      int getId();

      /**
       * <code>string name = 2;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <code>string name = 2;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>.algebra.SinkDefault.MetaType meta_type = 3;</code>
       * @return The enum numeric value on the wire for metaType.
       */
      int getMetaTypeValue();
      /**
       * <code>.algebra.SinkDefault.MetaType meta_type = 3;</code>
       * @return The metaType.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.MetaType getMetaType();
    }
    /**
     * Protobuf type {@code algebra.SinkDefault.IdNameMapping}
     */
    public static final class IdNameMapping extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:algebra.SinkDefault.IdNameMapping)
        IdNameMappingOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use IdNameMapping.newBuilder() to construct.
      private IdNameMapping(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private IdNameMapping() {
        name_ = "";
        metaType_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new IdNameMapping();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_SinkDefault_IdNameMapping_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_SinkDefault_IdNameMapping_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping.Builder.class);
      }

      public static final int ID_FIELD_NUMBER = 1;
      private int id_ = 0;
      /**
       * <code>int32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }

      public static final int NAME_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private volatile java.lang.Object name_ = "";
      /**
       * <code>string name = 2;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        }
      }
      /**
       * <code>string name = 2;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int META_TYPE_FIELD_NUMBER = 3;
      private int metaType_ = 0;
      /**
       * <code>.algebra.SinkDefault.MetaType meta_type = 3;</code>
       * @return The enum numeric value on the wire for metaType.
       */
      @java.lang.Override public int getMetaTypeValue() {
        return metaType_;
      }
      /**
       * <code>.algebra.SinkDefault.MetaType meta_type = 3;</code>
       * @return The metaType.
       */
      @java.lang.Override public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.MetaType getMetaType() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.MetaType result = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.MetaType.forNumber(metaType_);
        return result == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.MetaType.UNRECOGNIZED : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (id_ != 0) {
          output.writeInt32(1, id_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
        }
        if (metaType_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.MetaType.ENTITY.getNumber()) {
          output.writeEnum(3, metaType_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (id_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, id_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
        }
        if (metaType_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.MetaType.ENTITY.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, metaType_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping)) {
          return super.equals(obj);
        }
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping) obj;

        if (getId()
            != other.getId()) return false;
        if (!getName()
            .equals(other.getName())) return false;
        if (metaType_ != other.metaType_) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId();
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
        hash = (37 * hash) + META_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + metaType_;
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code algebra.SinkDefault.IdNameMapping}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:algebra.SinkDefault.IdNameMapping)
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMappingOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_SinkDefault_IdNameMapping_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_SinkDefault_IdNameMapping_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping.Builder.class);
        }

        // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          id_ = 0;
          name_ = "";
          metaType_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_SinkDefault_IdNameMapping_descriptor;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping getDefaultInstanceForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping.getDefaultInstance();
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping build() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping buildPartial() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.id_ = id_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.name_ = name_;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.metaType_ = metaType_;
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping) {
            return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping other) {
          if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping.getDefaultInstance()) return this;
          if (other.getId() != 0) {
            setId(other.getId());
          }
          if (!other.getName().isEmpty()) {
            name_ = other.name_;
            bitField0_ |= 0x00000002;
            onChanged();
          }
          if (other.metaType_ != 0) {
            setMetaTypeValue(other.getMetaTypeValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  id_ = input.readInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 18: {
                  name_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                case 24: {
                  metaType_ = input.readEnum();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int id_ ;
        /**
         * <code>int32 id = 1;</code>
         * @return The id.
         */
        @java.lang.Override
        public int getId() {
          return id_;
        }
        /**
         * <code>int32 id = 1;</code>
         * @param value The id to set.
         * @return This builder for chaining.
         */
        public Builder setId(int value) {

          id_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>int32 id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object name_ = "";
        /**
         * <code>string name = 2;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string name = 2;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string name = 2;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>string name = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          name_ = getDefaultInstance().getName();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         * <code>string name = 2;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          name_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }

        private int metaType_ = 0;
        /**
         * <code>.algebra.SinkDefault.MetaType meta_type = 3;</code>
         * @return The enum numeric value on the wire for metaType.
         */
        @java.lang.Override public int getMetaTypeValue() {
          return metaType_;
        }
        /**
         * <code>.algebra.SinkDefault.MetaType meta_type = 3;</code>
         * @param value The enum numeric value on the wire for metaType to set.
         * @return This builder for chaining.
         */
        public Builder setMetaTypeValue(int value) {
          metaType_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>.algebra.SinkDefault.MetaType meta_type = 3;</code>
         * @return The metaType.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.MetaType getMetaType() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.MetaType result = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.MetaType.forNumber(metaType_);
          return result == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.MetaType.UNRECOGNIZED : result;
        }
        /**
         * <code>.algebra.SinkDefault.MetaType meta_type = 3;</code>
         * @param value The metaType to set.
         * @return This builder for chaining.
         */
        public Builder setMetaType(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.MetaType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000004;
          metaType_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.algebra.SinkDefault.MetaType meta_type = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearMetaType() {
          bitField0_ = (bitField0_ & ~0x00000004);
          metaType_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:algebra.SinkDefault.IdNameMapping)
      }

      // @@protoc_insertion_point(class_scope:algebra.SinkDefault.IdNameMapping)
      private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping();
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<IdNameMapping>
          PARSER = new com.google.protobuf.AbstractParser<IdNameMapping>() {
        @java.lang.Override
        public IdNameMapping parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<IdNameMapping> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<IdNameMapping> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int ID_NAME_MAPPINGS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping> idNameMappings_;
    /**
     * <pre>
     * The mapping of id to name given certain `MetaType`
     * </pre>
     *
     * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping> getIdNameMappingsList() {
      return idNameMappings_;
    }
    /**
     * <pre>
     * The mapping of id to name given certain `MetaType`
     * </pre>
     *
     * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMappingOrBuilder> 
        getIdNameMappingsOrBuilderList() {
      return idNameMappings_;
    }
    /**
     * <pre>
     * The mapping of id to name given certain `MetaType`
     * </pre>
     *
     * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
     */
    @java.lang.Override
    public int getIdNameMappingsCount() {
      return idNameMappings_.size();
    }
    /**
     * <pre>
     * The mapping of id to name given certain `MetaType`
     * </pre>
     *
     * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping getIdNameMappings(int index) {
      return idNameMappings_.get(index);
    }
    /**
     * <pre>
     * The mapping of id to name given certain `MetaType`
     * </pre>
     *
     * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMappingOrBuilder getIdNameMappingsOrBuilder(
        int index) {
      return idNameMappings_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < idNameMappings_.size(); i++) {
        output.writeMessage(1, idNameMappings_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < idNameMappings_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, idNameMappings_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault) obj;

      if (!getIdNameMappingsList()
          .equals(other.getIdNameMappingsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getIdNameMappingsCount() > 0) {
        hash = (37 * hash) + ID_NAME_MAPPINGS_FIELD_NUMBER;
        hash = (53 * hash) + getIdNameMappingsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code algebra.SinkDefault}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.SinkDefault)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefaultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_SinkDefault_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_SinkDefault_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (idNameMappingsBuilder_ == null) {
          idNameMappings_ = java.util.Collections.emptyList();
        } else {
          idNameMappings_ = null;
          idNameMappingsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_SinkDefault_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault result) {
        if (idNameMappingsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            idNameMappings_ = java.util.Collections.unmodifiableList(idNameMappings_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.idNameMappings_ = idNameMappings_;
        } else {
          result.idNameMappings_ = idNameMappingsBuilder_.build();
        }
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.getDefaultInstance()) return this;
        if (idNameMappingsBuilder_ == null) {
          if (!other.idNameMappings_.isEmpty()) {
            if (idNameMappings_.isEmpty()) {
              idNameMappings_ = other.idNameMappings_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureIdNameMappingsIsMutable();
              idNameMappings_.addAll(other.idNameMappings_);
            }
            onChanged();
          }
        } else {
          if (!other.idNameMappings_.isEmpty()) {
            if (idNameMappingsBuilder_.isEmpty()) {
              idNameMappingsBuilder_.dispose();
              idNameMappingsBuilder_ = null;
              idNameMappings_ = other.idNameMappings_;
              bitField0_ = (bitField0_ & ~0x00000001);
              idNameMappingsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getIdNameMappingsFieldBuilder() : null;
            } else {
              idNameMappingsBuilder_.addAllMessages(other.idNameMappings_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping m =
                    input.readMessage(
                        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping.parser(),
                        extensionRegistry);
                if (idNameMappingsBuilder_ == null) {
                  ensureIdNameMappingsIsMutable();
                  idNameMappings_.add(m);
                } else {
                  idNameMappingsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping> idNameMappings_ =
        java.util.Collections.emptyList();
      private void ensureIdNameMappingsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          idNameMappings_ = new java.util.ArrayList<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping>(idNameMappings_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMappingOrBuilder> idNameMappingsBuilder_;

      /**
       * <pre>
       * The mapping of id to name given certain `MetaType`
       * </pre>
       *
       * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping> getIdNameMappingsList() {
        if (idNameMappingsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(idNameMappings_);
        } else {
          return idNameMappingsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The mapping of id to name given certain `MetaType`
       * </pre>
       *
       * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
       */
      public int getIdNameMappingsCount() {
        if (idNameMappingsBuilder_ == null) {
          return idNameMappings_.size();
        } else {
          return idNameMappingsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The mapping of id to name given certain `MetaType`
       * </pre>
       *
       * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping getIdNameMappings(int index) {
        if (idNameMappingsBuilder_ == null) {
          return idNameMappings_.get(index);
        } else {
          return idNameMappingsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The mapping of id to name given certain `MetaType`
       * </pre>
       *
       * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
       */
      public Builder setIdNameMappings(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping value) {
        if (idNameMappingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIdNameMappingsIsMutable();
          idNameMappings_.set(index, value);
          onChanged();
        } else {
          idNameMappingsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The mapping of id to name given certain `MetaType`
       * </pre>
       *
       * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
       */
      public Builder setIdNameMappings(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping.Builder builderForValue) {
        if (idNameMappingsBuilder_ == null) {
          ensureIdNameMappingsIsMutable();
          idNameMappings_.set(index, builderForValue.build());
          onChanged();
        } else {
          idNameMappingsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The mapping of id to name given certain `MetaType`
       * </pre>
       *
       * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
       */
      public Builder addIdNameMappings(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping value) {
        if (idNameMappingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIdNameMappingsIsMutable();
          idNameMappings_.add(value);
          onChanged();
        } else {
          idNameMappingsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The mapping of id to name given certain `MetaType`
       * </pre>
       *
       * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
       */
      public Builder addIdNameMappings(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping value) {
        if (idNameMappingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIdNameMappingsIsMutable();
          idNameMappings_.add(index, value);
          onChanged();
        } else {
          idNameMappingsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The mapping of id to name given certain `MetaType`
       * </pre>
       *
       * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
       */
      public Builder addIdNameMappings(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping.Builder builderForValue) {
        if (idNameMappingsBuilder_ == null) {
          ensureIdNameMappingsIsMutable();
          idNameMappings_.add(builderForValue.build());
          onChanged();
        } else {
          idNameMappingsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The mapping of id to name given certain `MetaType`
       * </pre>
       *
       * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
       */
      public Builder addIdNameMappings(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping.Builder builderForValue) {
        if (idNameMappingsBuilder_ == null) {
          ensureIdNameMappingsIsMutable();
          idNameMappings_.add(index, builderForValue.build());
          onChanged();
        } else {
          idNameMappingsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The mapping of id to name given certain `MetaType`
       * </pre>
       *
       * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
       */
      public Builder addAllIdNameMappings(
          java.lang.Iterable<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping> values) {
        if (idNameMappingsBuilder_ == null) {
          ensureIdNameMappingsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, idNameMappings_);
          onChanged();
        } else {
          idNameMappingsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The mapping of id to name given certain `MetaType`
       * </pre>
       *
       * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
       */
      public Builder clearIdNameMappings() {
        if (idNameMappingsBuilder_ == null) {
          idNameMappings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          idNameMappingsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The mapping of id to name given certain `MetaType`
       * </pre>
       *
       * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
       */
      public Builder removeIdNameMappings(int index) {
        if (idNameMappingsBuilder_ == null) {
          ensureIdNameMappingsIsMutable();
          idNameMappings_.remove(index);
          onChanged();
        } else {
          idNameMappingsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The mapping of id to name given certain `MetaType`
       * </pre>
       *
       * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping.Builder getIdNameMappingsBuilder(
          int index) {
        return getIdNameMappingsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The mapping of id to name given certain `MetaType`
       * </pre>
       *
       * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMappingOrBuilder getIdNameMappingsOrBuilder(
          int index) {
        if (idNameMappingsBuilder_ == null) {
          return idNameMappings_.get(index);  } else {
          return idNameMappingsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The mapping of id to name given certain `MetaType`
       * </pre>
       *
       * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
       */
      public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMappingOrBuilder> 
           getIdNameMappingsOrBuilderList() {
        if (idNameMappingsBuilder_ != null) {
          return idNameMappingsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(idNameMappings_);
        }
      }
      /**
       * <pre>
       * The mapping of id to name given certain `MetaType`
       * </pre>
       *
       * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping.Builder addIdNameMappingsBuilder() {
        return getIdNameMappingsFieldBuilder().addBuilder(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping.getDefaultInstance());
      }
      /**
       * <pre>
       * The mapping of id to name given certain `MetaType`
       * </pre>
       *
       * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping.Builder addIdNameMappingsBuilder(
          int index) {
        return getIdNameMappingsFieldBuilder().addBuilder(
            index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping.getDefaultInstance());
      }
      /**
       * <pre>
       * The mapping of id to name given certain `MetaType`
       * </pre>
       *
       * <code>repeated .algebra.SinkDefault.IdNameMapping id_name_mappings = 1;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping.Builder> 
           getIdNameMappingsBuilderList() {
        return getIdNameMappingsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMappingOrBuilder> 
          getIdNameMappingsFieldBuilder() {
        if (idNameMappingsBuilder_ == null) {
          idNameMappingsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMapping.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault.IdNameMappingOrBuilder>(
                  idNameMappings_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          idNameMappings_ = null;
        }
        return idNameMappingsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.SinkDefault)
    }

    // @@protoc_insertion_point(class_scope:algebra.SinkDefault)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SinkDefault>
        PARSER = new com.google.protobuf.AbstractParser<SinkDefault>() {
      @java.lang.Override
      public SinkDefault parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SinkDefault> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SinkDefault> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkDefault getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SinkVineyardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.SinkVineyard)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string graph_name = 1;</code>
     * @return The graphName.
     */
    java.lang.String getGraphName();
    /**
     * <code>string graph_name = 1;</code>
     * @return The bytes for graphName.
     */
    com.google.protobuf.ByteString
        getGraphNameBytes();

    /**
     * <code>.schema.Schema graph_schema = 2;</code>
     * @return Whether the graphSchema field is set.
     */
    boolean hasGraphSchema();
    /**
     * <code>.schema.Schema graph_schema = 2;</code>
     * @return The graphSchema.
     */
    com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.Schema getGraphSchema();
    /**
     * <code>.schema.Schema graph_schema = 2;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.SchemaOrBuilder getGraphSchemaOrBuilder();
  }
  /**
   * Protobuf type {@code algebra.SinkVineyard}
   */
  public static final class SinkVineyard extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.SinkVineyard)
      SinkVineyardOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SinkVineyard.newBuilder() to construct.
    private SinkVineyard(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SinkVineyard() {
      graphName_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SinkVineyard();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_SinkVineyard_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_SinkVineyard_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard.Builder.class);
    }

    public static final int GRAPH_NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object graphName_ = "";
    /**
     * <code>string graph_name = 1;</code>
     * @return The graphName.
     */
    @java.lang.Override
    public java.lang.String getGraphName() {
      java.lang.Object ref = graphName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        graphName_ = s;
        return s;
      }
    }
    /**
     * <code>string graph_name = 1;</code>
     * @return The bytes for graphName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGraphNameBytes() {
      java.lang.Object ref = graphName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        graphName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GRAPH_SCHEMA_FIELD_NUMBER = 2;
    private com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.Schema graphSchema_;
    /**
     * <code>.schema.Schema graph_schema = 2;</code>
     * @return Whether the graphSchema field is set.
     */
    @java.lang.Override
    public boolean hasGraphSchema() {
      return graphSchema_ != null;
    }
    /**
     * <code>.schema.Schema graph_schema = 2;</code>
     * @return The graphSchema.
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.Schema getGraphSchema() {
      return graphSchema_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.Schema.getDefaultInstance() : graphSchema_;
    }
    /**
     * <code>.schema.Schema graph_schema = 2;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.SchemaOrBuilder getGraphSchemaOrBuilder() {
      return graphSchema_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.Schema.getDefaultInstance() : graphSchema_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(graphName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, graphName_);
      }
      if (graphSchema_ != null) {
        output.writeMessage(2, getGraphSchema());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(graphName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, graphName_);
      }
      if (graphSchema_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getGraphSchema());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard) obj;

      if (!getGraphName()
          .equals(other.getGraphName())) return false;
      if (hasGraphSchema() != other.hasGraphSchema()) return false;
      if (hasGraphSchema()) {
        if (!getGraphSchema()
            .equals(other.getGraphSchema())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + GRAPH_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getGraphName().hashCode();
      if (hasGraphSchema()) {
        hash = (37 * hash) + GRAPH_SCHEMA_FIELD_NUMBER;
        hash = (53 * hash) + getGraphSchema().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code algebra.SinkVineyard}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.SinkVineyard)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_SinkVineyard_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_SinkVineyard_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        graphName_ = "";
        graphSchema_ = null;
        if (graphSchemaBuilder_ != null) {
          graphSchemaBuilder_.dispose();
          graphSchemaBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_SinkVineyard_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.graphName_ = graphName_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.graphSchema_ = graphSchemaBuilder_ == null
              ? graphSchema_
              : graphSchemaBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard.getDefaultInstance()) return this;
        if (!other.getGraphName().isEmpty()) {
          graphName_ = other.graphName_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasGraphSchema()) {
          mergeGraphSchema(other.getGraphSchema());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                graphName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getGraphSchemaFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object graphName_ = "";
      /**
       * <code>string graph_name = 1;</code>
       * @return The graphName.
       */
      public java.lang.String getGraphName() {
        java.lang.Object ref = graphName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          graphName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string graph_name = 1;</code>
       * @return The bytes for graphName.
       */
      public com.google.protobuf.ByteString
          getGraphNameBytes() {
        java.lang.Object ref = graphName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          graphName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string graph_name = 1;</code>
       * @param value The graphName to set.
       * @return This builder for chaining.
       */
      public Builder setGraphName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        graphName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string graph_name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearGraphName() {
        graphName_ = getDefaultInstance().getGraphName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string graph_name = 1;</code>
       * @param value The bytes for graphName to set.
       * @return This builder for chaining.
       */
      public Builder setGraphNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        graphName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.Schema graphSchema_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.Schema, com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.Schema.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.SchemaOrBuilder> graphSchemaBuilder_;
      /**
       * <code>.schema.Schema graph_schema = 2;</code>
       * @return Whether the graphSchema field is set.
       */
      public boolean hasGraphSchema() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.schema.Schema graph_schema = 2;</code>
       * @return The graphSchema.
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.Schema getGraphSchema() {
        if (graphSchemaBuilder_ == null) {
          return graphSchema_ == null ? com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.Schema.getDefaultInstance() : graphSchema_;
        } else {
          return graphSchemaBuilder_.getMessage();
        }
      }
      /**
       * <code>.schema.Schema graph_schema = 2;</code>
       */
      public Builder setGraphSchema(com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.Schema value) {
        if (graphSchemaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          graphSchema_ = value;
        } else {
          graphSchemaBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.schema.Schema graph_schema = 2;</code>
       */
      public Builder setGraphSchema(
          com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.Schema.Builder builderForValue) {
        if (graphSchemaBuilder_ == null) {
          graphSchema_ = builderForValue.build();
        } else {
          graphSchemaBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.schema.Schema graph_schema = 2;</code>
       */
      public Builder mergeGraphSchema(com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.Schema value) {
        if (graphSchemaBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            graphSchema_ != null &&
            graphSchema_ != com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.Schema.getDefaultInstance()) {
            getGraphSchemaBuilder().mergeFrom(value);
          } else {
            graphSchema_ = value;
          }
        } else {
          graphSchemaBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.schema.Schema graph_schema = 2;</code>
       */
      public Builder clearGraphSchema() {
        bitField0_ = (bitField0_ & ~0x00000002);
        graphSchema_ = null;
        if (graphSchemaBuilder_ != null) {
          graphSchemaBuilder_.dispose();
          graphSchemaBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.schema.Schema graph_schema = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.Schema.Builder getGraphSchemaBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getGraphSchemaFieldBuilder().getBuilder();
      }
      /**
       * <code>.schema.Schema graph_schema = 2;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.SchemaOrBuilder getGraphSchemaOrBuilder() {
        if (graphSchemaBuilder_ != null) {
          return graphSchemaBuilder_.getMessageOrBuilder();
        } else {
          return graphSchema_ == null ?
              com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.Schema.getDefaultInstance() : graphSchema_;
        }
      }
      /**
       * <code>.schema.Schema graph_schema = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.Schema, com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.Schema.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.SchemaOrBuilder> 
          getGraphSchemaFieldBuilder() {
        if (graphSchemaBuilder_ == null) {
          graphSchemaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.Schema, com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.Schema.Builder, com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.SchemaOrBuilder>(
                  getGraphSchema(),
                  getParentForChildren(),
                  isClean());
          graphSchema_ = null;
        }
        return graphSchemaBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.SinkVineyard)
    }

    // @@protoc_insertion_point(class_scope:algebra.SinkVineyard)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SinkVineyard>
        PARSER = new com.google.protobuf.AbstractParser<SinkVineyard>() {
      @java.lang.Override
      public SinkVineyard parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SinkVineyard> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SinkVineyard> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkVineyard getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RootOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.Root)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * A dummy node to delegate a source opr for multiple scan cases.
   * </pre>
   *
   * Protobuf type {@code algebra.Root}
   */
  public static final class Root extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.Root)
      RootOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Root.newBuilder() to construct.
    private Root(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Root() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Root();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Root_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Root_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A dummy node to delegate a source opr for multiple scan cases.
     * </pre>
     *
     * Protobuf type {@code algebra.Root}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.Root)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RootOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Root_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Root_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Root_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.Root)
    }

    // @@protoc_insertion_point(class_scope:algebra.Root)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Root>
        PARSER = new com.google.protobuf.AbstractParser<Root>() {
      @java.lang.Override
      public Root parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Root> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Root> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BranchOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.Branch)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * A node for auxiliary suggesting branches when dealing with logical plan with nested branches
   * </pre>
   *
   * Protobuf type {@code algebra.Branch}
   */
  public static final class Branch extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.Branch)
      BranchOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Branch.newBuilder() to construct.
    private Branch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Branch() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Branch();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Branch_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Branch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A node for auxiliary suggesting branches when dealing with logical plan with nested branches
     * </pre>
     *
     * Protobuf type {@code algebra.Branch}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.Branch)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.BranchOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Branch_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Branch_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_Branch_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.Branch)
    }

    // @@protoc_insertion_point(class_scope:algebra.Branch)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Branch>
        PARSER = new com.google.protobuf.AbstractParser<Branch>() {
      @java.lang.Override
      public Branch parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Branch> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Branch> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LogicalPlanOrBuilder extends
      // @@protoc_insertion_point(interface_extends:algebra.LogicalPlan)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A array of nodes
     * </pre>
     *
     * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
     */
    java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node> 
        getNodesList();
    /**
     * <pre>
     * A array of nodes
     * </pre>
     *
     * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node getNodes(int index);
    /**
     * <pre>
     * A array of nodes
     * </pre>
     *
     * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
     */
    int getNodesCount();
    /**
     * <pre>
     * A array of nodes
     * </pre>
     *
     * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
     */
    java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.NodeOrBuilder> 
        getNodesOrBuilderList();
    /**
     * <pre>
     * A array of nodes
     * </pre>
     *
     * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
     */
    com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.NodeOrBuilder getNodesOrBuilder(
        int index);

    /**
     * <pre>
     *&#47; The root nodes' array indices
     * </pre>
     *
     * <code>repeated int32 roots = 2;</code>
     * @return A list containing the roots.
     */
    java.util.List<java.lang.Integer> getRootsList();
    /**
     * <pre>
     *&#47; The root nodes' array indices
     * </pre>
     *
     * <code>repeated int32 roots = 2;</code>
     * @return The count of roots.
     */
    int getRootsCount();
    /**
     * <pre>
     *&#47; The root nodes' array indices
     * </pre>
     *
     * <code>repeated int32 roots = 2;</code>
     * @param index The index of the element to return.
     * @return The roots at the given index.
     */
    int getRoots(int index);
  }
  /**
   * <pre>
   * A logical plan of graph relation algebra forms a DAG, where each node is an operator and the
   * edge indicates the execution flow.
   * </pre>
   *
   * Protobuf type {@code algebra.LogicalPlan}
   */
  public static final class LogicalPlan extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:algebra.LogicalPlan)
      LogicalPlanOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LogicalPlan.newBuilder() to construct.
    private LogicalPlan(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LogicalPlan() {
      nodes_ = java.util.Collections.emptyList();
      roots_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LogicalPlan();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_LogicalPlan_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_LogicalPlan_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Builder.class);
    }

    public interface OperatorOrBuilder extends
        // @@protoc_insertion_point(interface_extends:algebra.LogicalPlan.Operator)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.algebra.Project project = 1;</code>
       * @return Whether the project field is set.
       */
      boolean hasProject();
      /**
       * <code>.algebra.Project project = 1;</code>
       * @return The project.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project getProject();
      /**
       * <code>.algebra.Project project = 1;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ProjectOrBuilder getProjectOrBuilder();

      /**
       * <code>.algebra.Select select = 2;</code>
       * @return Whether the select field is set.
       */
      boolean hasSelect();
      /**
       * <code>.algebra.Select select = 2;</code>
       * @return The select.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select getSelect();
      /**
       * <code>.algebra.Select select = 2;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SelectOrBuilder getSelectOrBuilder();

      /**
       * <code>.algebra.Join join = 3;</code>
       * @return Whether the join field is set.
       */
      boolean hasJoin();
      /**
       * <code>.algebra.Join join = 3;</code>
       * @return The join.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join getJoin();
      /**
       * <code>.algebra.Join join = 3;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.JoinOrBuilder getJoinOrBuilder();

      /**
       * <code>.algebra.Union union = 4;</code>
       * @return Whether the union field is set.
       */
      boolean hasUnion();
      /**
       * <code>.algebra.Union union = 4;</code>
       * @return The union.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union getUnion();
      /**
       * <code>.algebra.Union union = 4;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.UnionOrBuilder getUnionOrBuilder();

      /**
       * <code>.algebra.GroupBy group_by = 5;</code>
       * @return Whether the groupBy field is set.
       */
      boolean hasGroupBy();
      /**
       * <code>.algebra.GroupBy group_by = 5;</code>
       * @return The groupBy.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy getGroupBy();
      /**
       * <code>.algebra.GroupBy group_by = 5;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupByOrBuilder getGroupByOrBuilder();

      /**
       * <code>.algebra.OrderBy order_by = 6;</code>
       * @return Whether the orderBy field is set.
       */
      boolean hasOrderBy();
      /**
       * <code>.algebra.OrderBy order_by = 6;</code>
       * @return The orderBy.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy getOrderBy();
      /**
       * <code>.algebra.OrderBy order_by = 6;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderByOrBuilder getOrderByOrBuilder();

      /**
       * <code>.algebra.Dedup dedup = 7;</code>
       * @return Whether the dedup field is set.
       */
      boolean hasDedup();
      /**
       * <code>.algebra.Dedup dedup = 7;</code>
       * @return The dedup.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup getDedup();
      /**
       * <code>.algebra.Dedup dedup = 7;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.DedupOrBuilder getDedupOrBuilder();

      /**
       * <code>.algebra.Unfold unfold = 8;</code>
       * @return Whether the unfold field is set.
       */
      boolean hasUnfold();
      /**
       * <code>.algebra.Unfold unfold = 8;</code>
       * @return The unfold.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold getUnfold();
      /**
       * <code>.algebra.Unfold unfold = 8;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.UnfoldOrBuilder getUnfoldOrBuilder();

      /**
       * <code>.algebra.Apply apply = 9;</code>
       * @return Whether the apply field is set.
       */
      boolean hasApply();
      /**
       * <code>.algebra.Apply apply = 9;</code>
       * @return The apply.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply getApply();
      /**
       * <code>.algebra.Apply apply = 9;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ApplyOrBuilder getApplyOrBuilder();

      /**
       * <code>.algebra.SegmentApply seg_apply = 10;</code>
       * @return Whether the segApply field is set.
       */
      boolean hasSegApply();
      /**
       * <code>.algebra.SegmentApply seg_apply = 10;</code>
       * @return The segApply.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply getSegApply();
      /**
       * <code>.algebra.SegmentApply seg_apply = 10;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApplyOrBuilder getSegApplyOrBuilder();

      /**
       * <code>.algebra.Scan scan = 11;</code>
       * @return Whether the scan field is set.
       */
      boolean hasScan();
      /**
       * <code>.algebra.Scan scan = 11;</code>
       * @return The scan.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan getScan();
      /**
       * <code>.algebra.Scan scan = 11;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ScanOrBuilder getScanOrBuilder();

      /**
       * <code>.algebra.Limit limit = 12;</code>
       * @return Whether the limit field is set.
       */
      boolean hasLimit();
      /**
       * <code>.algebra.Limit limit = 12;</code>
       * @return The limit.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit getLimit();
      /**
       * <code>.algebra.Limit limit = 12;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LimitOrBuilder getLimitOrBuilder();

      /**
       * <code>.algebra.As as = 14;</code>
       * @return Whether the as field is set.
       */
      boolean hasAs();
      /**
       * <code>.algebra.As as = 14;</code>
       * @return The as.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As getAs();
      /**
       * <code>.algebra.As as = 14;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.AsOrBuilder getAsOrBuilder();

      /**
       * <code>.algebra.Intersect intersect = 15;</code>
       * @return Whether the intersect field is set.
       */
      boolean hasIntersect();
      /**
       * <code>.algebra.Intersect intersect = 15;</code>
       * @return The intersect.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect getIntersect();
      /**
       * <code>.algebra.Intersect intersect = 15;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IntersectOrBuilder getIntersectOrBuilder();

      /**
       * <code>.algebra.Sink sink = 16;</code>
       * @return Whether the sink field is set.
       */
      boolean hasSink();
      /**
       * <code>.algebra.Sink sink = 16;</code>
       * @return The sink.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink getSink();
      /**
       * <code>.algebra.Sink sink = 16;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkOrBuilder getSinkOrBuilder();

      /**
       * <code>.algebra.Root root = 17;</code>
       * @return Whether the root field is set.
       */
      boolean hasRoot();
      /**
       * <code>.algebra.Root root = 17;</code>
       * @return The root.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root getRoot();
      /**
       * <code>.algebra.Root root = 17;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RootOrBuilder getRootOrBuilder();

      /**
       * <code>.algebra.Sample sample = 18;</code>
       * @return Whether the sample field is set.
       */
      boolean hasSample();
      /**
       * <code>.algebra.Sample sample = 18;</code>
       * @return The sample.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample getSample();
      /**
       * <code>.algebra.Sample sample = 18;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SampleOrBuilder getSampleOrBuilder();

      /**
       * <code>.algebra.Branch branch = 19;</code>
       * @return Whether the branch field is set.
       */
      boolean hasBranch();
      /**
       * <code>.algebra.Branch branch = 19;</code>
       * @return The branch.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch getBranch();
      /**
       * <code>.algebra.Branch branch = 19;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.BranchOrBuilder getBranchOrBuilder();

      /**
       * <pre>
       * Saving the room for relational operators
       * </pre>
       *
       * <code>.algebra.GetV vertex = 30;</code>
       * @return Whether the vertex field is set.
       */
      boolean hasVertex();
      /**
       * <pre>
       * Saving the room for relational operators
       * </pre>
       *
       * <code>.algebra.GetV vertex = 30;</code>
       * @return The vertex.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV getVertex();
      /**
       * <pre>
       * Saving the room for relational operators
       * </pre>
       *
       * <code>.algebra.GetV vertex = 30;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetVOrBuilder getVertexOrBuilder();

      /**
       * <code>.algebra.EdgeExpand edge = 31;</code>
       * @return Whether the edge field is set.
       */
      boolean hasEdge();
      /**
       * <code>.algebra.EdgeExpand edge = 31;</code>
       * @return The edge.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand getEdge();
      /**
       * <code>.algebra.EdgeExpand edge = 31;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpandOrBuilder getEdgeOrBuilder();

      /**
       * <code>.algebra.PathExpand path = 32;</code>
       * @return Whether the path field is set.
       */
      boolean hasPath();
      /**
       * <code>.algebra.PathExpand path = 32;</code>
       * @return The path.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand getPath();
      /**
       * <code>.algebra.PathExpand path = 32;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpandOrBuilder getPathOrBuilder();

      /**
       * <code>.algebra.Pattern pattern = 35;</code>
       * @return Whether the pattern field is set.
       */
      boolean hasPattern();
      /**
       * <code>.algebra.Pattern pattern = 35;</code>
       * @return The pattern.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern getPattern();
      /**
       * <code>.algebra.Pattern pattern = 35;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PatternOrBuilder getPatternOrBuilder();

      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator.OprCase getOprCase();
    }
    /**
     * Protobuf type {@code algebra.LogicalPlan.Operator}
     */
    public static final class Operator extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:algebra.LogicalPlan.Operator)
        OperatorOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Operator.newBuilder() to construct.
      private Operator(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Operator() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Operator();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_LogicalPlan_Operator_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_LogicalPlan_Operator_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator.Builder.class);
      }

      private int oprCase_ = 0;
      @SuppressWarnings("serial")
      private java.lang.Object opr_;
      public enum OprCase
          implements com.google.protobuf.Internal.EnumLite,
              com.google.protobuf.AbstractMessage.InternalOneOfEnum {
        PROJECT(1),
        SELECT(2),
        JOIN(3),
        UNION(4),
        GROUP_BY(5),
        ORDER_BY(6),
        DEDUP(7),
        UNFOLD(8),
        APPLY(9),
        SEG_APPLY(10),
        SCAN(11),
        LIMIT(12),
        AS(14),
        INTERSECT(15),
        SINK(16),
        ROOT(17),
        SAMPLE(18),
        BRANCH(19),
        VERTEX(30),
        EDGE(31),
        PATH(32),
        PATTERN(35),
        OPR_NOT_SET(0);
        private final int value;
        private OprCase(int value) {
          this.value = value;
        }
        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static OprCase valueOf(int value) {
          return forNumber(value);
        }

        public static OprCase forNumber(int value) {
          switch (value) {
            case 1: return PROJECT;
            case 2: return SELECT;
            case 3: return JOIN;
            case 4: return UNION;
            case 5: return GROUP_BY;
            case 6: return ORDER_BY;
            case 7: return DEDUP;
            case 8: return UNFOLD;
            case 9: return APPLY;
            case 10: return SEG_APPLY;
            case 11: return SCAN;
            case 12: return LIMIT;
            case 14: return AS;
            case 15: return INTERSECT;
            case 16: return SINK;
            case 17: return ROOT;
            case 18: return SAMPLE;
            case 19: return BRANCH;
            case 30: return VERTEX;
            case 31: return EDGE;
            case 32: return PATH;
            case 35: return PATTERN;
            case 0: return OPR_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public OprCase
      getOprCase() {
        return OprCase.forNumber(
            oprCase_);
      }

      public static final int PROJECT_FIELD_NUMBER = 1;
      /**
       * <code>.algebra.Project project = 1;</code>
       * @return Whether the project field is set.
       */
      @java.lang.Override
      public boolean hasProject() {
        return oprCase_ == 1;
      }
      /**
       * <code>.algebra.Project project = 1;</code>
       * @return The project.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project getProject() {
        if (oprCase_ == 1) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.getDefaultInstance();
      }
      /**
       * <code>.algebra.Project project = 1;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ProjectOrBuilder getProjectOrBuilder() {
        if (oprCase_ == 1) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.getDefaultInstance();
      }

      public static final int SELECT_FIELD_NUMBER = 2;
      /**
       * <code>.algebra.Select select = 2;</code>
       * @return Whether the select field is set.
       */
      @java.lang.Override
      public boolean hasSelect() {
        return oprCase_ == 2;
      }
      /**
       * <code>.algebra.Select select = 2;</code>
       * @return The select.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select getSelect() {
        if (oprCase_ == 2) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.getDefaultInstance();
      }
      /**
       * <code>.algebra.Select select = 2;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SelectOrBuilder getSelectOrBuilder() {
        if (oprCase_ == 2) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.getDefaultInstance();
      }

      public static final int JOIN_FIELD_NUMBER = 3;
      /**
       * <code>.algebra.Join join = 3;</code>
       * @return Whether the join field is set.
       */
      @java.lang.Override
      public boolean hasJoin() {
        return oprCase_ == 3;
      }
      /**
       * <code>.algebra.Join join = 3;</code>
       * @return The join.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join getJoin() {
        if (oprCase_ == 3) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.getDefaultInstance();
      }
      /**
       * <code>.algebra.Join join = 3;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.JoinOrBuilder getJoinOrBuilder() {
        if (oprCase_ == 3) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.getDefaultInstance();
      }

      public static final int UNION_FIELD_NUMBER = 4;
      /**
       * <code>.algebra.Union union = 4;</code>
       * @return Whether the union field is set.
       */
      @java.lang.Override
      public boolean hasUnion() {
        return oprCase_ == 4;
      }
      /**
       * <code>.algebra.Union union = 4;</code>
       * @return The union.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union getUnion() {
        if (oprCase_ == 4) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union.getDefaultInstance();
      }
      /**
       * <code>.algebra.Union union = 4;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.UnionOrBuilder getUnionOrBuilder() {
        if (oprCase_ == 4) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union.getDefaultInstance();
      }

      public static final int GROUP_BY_FIELD_NUMBER = 5;
      /**
       * <code>.algebra.GroupBy group_by = 5;</code>
       * @return Whether the groupBy field is set.
       */
      @java.lang.Override
      public boolean hasGroupBy() {
        return oprCase_ == 5;
      }
      /**
       * <code>.algebra.GroupBy group_by = 5;</code>
       * @return The groupBy.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy getGroupBy() {
        if (oprCase_ == 5) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.getDefaultInstance();
      }
      /**
       * <code>.algebra.GroupBy group_by = 5;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupByOrBuilder getGroupByOrBuilder() {
        if (oprCase_ == 5) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.getDefaultInstance();
      }

      public static final int ORDER_BY_FIELD_NUMBER = 6;
      /**
       * <code>.algebra.OrderBy order_by = 6;</code>
       * @return Whether the orderBy field is set.
       */
      @java.lang.Override
      public boolean hasOrderBy() {
        return oprCase_ == 6;
      }
      /**
       * <code>.algebra.OrderBy order_by = 6;</code>
       * @return The orderBy.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy getOrderBy() {
        if (oprCase_ == 6) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.getDefaultInstance();
      }
      /**
       * <code>.algebra.OrderBy order_by = 6;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderByOrBuilder getOrderByOrBuilder() {
        if (oprCase_ == 6) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.getDefaultInstance();
      }

      public static final int DEDUP_FIELD_NUMBER = 7;
      /**
       * <code>.algebra.Dedup dedup = 7;</code>
       * @return Whether the dedup field is set.
       */
      @java.lang.Override
      public boolean hasDedup() {
        return oprCase_ == 7;
      }
      /**
       * <code>.algebra.Dedup dedup = 7;</code>
       * @return The dedup.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup getDedup() {
        if (oprCase_ == 7) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup.getDefaultInstance();
      }
      /**
       * <code>.algebra.Dedup dedup = 7;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.DedupOrBuilder getDedupOrBuilder() {
        if (oprCase_ == 7) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup.getDefaultInstance();
      }

      public static final int UNFOLD_FIELD_NUMBER = 8;
      /**
       * <code>.algebra.Unfold unfold = 8;</code>
       * @return Whether the unfold field is set.
       */
      @java.lang.Override
      public boolean hasUnfold() {
        return oprCase_ == 8;
      }
      /**
       * <code>.algebra.Unfold unfold = 8;</code>
       * @return The unfold.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold getUnfold() {
        if (oprCase_ == 8) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold.getDefaultInstance();
      }
      /**
       * <code>.algebra.Unfold unfold = 8;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.UnfoldOrBuilder getUnfoldOrBuilder() {
        if (oprCase_ == 8) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold.getDefaultInstance();
      }

      public static final int APPLY_FIELD_NUMBER = 9;
      /**
       * <code>.algebra.Apply apply = 9;</code>
       * @return Whether the apply field is set.
       */
      @java.lang.Override
      public boolean hasApply() {
        return oprCase_ == 9;
      }
      /**
       * <code>.algebra.Apply apply = 9;</code>
       * @return The apply.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply getApply() {
        if (oprCase_ == 9) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.getDefaultInstance();
      }
      /**
       * <code>.algebra.Apply apply = 9;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ApplyOrBuilder getApplyOrBuilder() {
        if (oprCase_ == 9) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.getDefaultInstance();
      }

      public static final int SEG_APPLY_FIELD_NUMBER = 10;
      /**
       * <code>.algebra.SegmentApply seg_apply = 10;</code>
       * @return Whether the segApply field is set.
       */
      @java.lang.Override
      public boolean hasSegApply() {
        return oprCase_ == 10;
      }
      /**
       * <code>.algebra.SegmentApply seg_apply = 10;</code>
       * @return The segApply.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply getSegApply() {
        if (oprCase_ == 10) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply.getDefaultInstance();
      }
      /**
       * <code>.algebra.SegmentApply seg_apply = 10;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApplyOrBuilder getSegApplyOrBuilder() {
        if (oprCase_ == 10) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply.getDefaultInstance();
      }

      public static final int SCAN_FIELD_NUMBER = 11;
      /**
       * <code>.algebra.Scan scan = 11;</code>
       * @return Whether the scan field is set.
       */
      @java.lang.Override
      public boolean hasScan() {
        return oprCase_ == 11;
      }
      /**
       * <code>.algebra.Scan scan = 11;</code>
       * @return The scan.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan getScan() {
        if (oprCase_ == 11) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.getDefaultInstance();
      }
      /**
       * <code>.algebra.Scan scan = 11;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ScanOrBuilder getScanOrBuilder() {
        if (oprCase_ == 11) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.getDefaultInstance();
      }

      public static final int LIMIT_FIELD_NUMBER = 12;
      /**
       * <code>.algebra.Limit limit = 12;</code>
       * @return Whether the limit field is set.
       */
      @java.lang.Override
      public boolean hasLimit() {
        return oprCase_ == 12;
      }
      /**
       * <code>.algebra.Limit limit = 12;</code>
       * @return The limit.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit getLimit() {
        if (oprCase_ == 12) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit.getDefaultInstance();
      }
      /**
       * <code>.algebra.Limit limit = 12;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LimitOrBuilder getLimitOrBuilder() {
        if (oprCase_ == 12) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit.getDefaultInstance();
      }

      public static final int AS_FIELD_NUMBER = 14;
      /**
       * <code>.algebra.As as = 14;</code>
       * @return Whether the as field is set.
       */
      @java.lang.Override
      public boolean hasAs() {
        return oprCase_ == 14;
      }
      /**
       * <code>.algebra.As as = 14;</code>
       * @return The as.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As getAs() {
        if (oprCase_ == 14) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As.getDefaultInstance();
      }
      /**
       * <code>.algebra.As as = 14;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.AsOrBuilder getAsOrBuilder() {
        if (oprCase_ == 14) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As.getDefaultInstance();
      }

      public static final int INTERSECT_FIELD_NUMBER = 15;
      /**
       * <code>.algebra.Intersect intersect = 15;</code>
       * @return Whether the intersect field is set.
       */
      @java.lang.Override
      public boolean hasIntersect() {
        return oprCase_ == 15;
      }
      /**
       * <code>.algebra.Intersect intersect = 15;</code>
       * @return The intersect.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect getIntersect() {
        if (oprCase_ == 15) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect.getDefaultInstance();
      }
      /**
       * <code>.algebra.Intersect intersect = 15;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IntersectOrBuilder getIntersectOrBuilder() {
        if (oprCase_ == 15) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect.getDefaultInstance();
      }

      public static final int SINK_FIELD_NUMBER = 16;
      /**
       * <code>.algebra.Sink sink = 16;</code>
       * @return Whether the sink field is set.
       */
      @java.lang.Override
      public boolean hasSink() {
        return oprCase_ == 16;
      }
      /**
       * <code>.algebra.Sink sink = 16;</code>
       * @return The sink.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink getSink() {
        if (oprCase_ == 16) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.getDefaultInstance();
      }
      /**
       * <code>.algebra.Sink sink = 16;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkOrBuilder getSinkOrBuilder() {
        if (oprCase_ == 16) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.getDefaultInstance();
      }

      public static final int ROOT_FIELD_NUMBER = 17;
      /**
       * <code>.algebra.Root root = 17;</code>
       * @return Whether the root field is set.
       */
      @java.lang.Override
      public boolean hasRoot() {
        return oprCase_ == 17;
      }
      /**
       * <code>.algebra.Root root = 17;</code>
       * @return The root.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root getRoot() {
        if (oprCase_ == 17) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root.getDefaultInstance();
      }
      /**
       * <code>.algebra.Root root = 17;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RootOrBuilder getRootOrBuilder() {
        if (oprCase_ == 17) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root.getDefaultInstance();
      }

      public static final int SAMPLE_FIELD_NUMBER = 18;
      /**
       * <code>.algebra.Sample sample = 18;</code>
       * @return Whether the sample field is set.
       */
      @java.lang.Override
      public boolean hasSample() {
        return oprCase_ == 18;
      }
      /**
       * <code>.algebra.Sample sample = 18;</code>
       * @return The sample.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample getSample() {
        if (oprCase_ == 18) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.getDefaultInstance();
      }
      /**
       * <code>.algebra.Sample sample = 18;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SampleOrBuilder getSampleOrBuilder() {
        if (oprCase_ == 18) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.getDefaultInstance();
      }

      public static final int BRANCH_FIELD_NUMBER = 19;
      /**
       * <code>.algebra.Branch branch = 19;</code>
       * @return Whether the branch field is set.
       */
      @java.lang.Override
      public boolean hasBranch() {
        return oprCase_ == 19;
      }
      /**
       * <code>.algebra.Branch branch = 19;</code>
       * @return The branch.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch getBranch() {
        if (oprCase_ == 19) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch.getDefaultInstance();
      }
      /**
       * <code>.algebra.Branch branch = 19;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.BranchOrBuilder getBranchOrBuilder() {
        if (oprCase_ == 19) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch.getDefaultInstance();
      }

      public static final int VERTEX_FIELD_NUMBER = 30;
      /**
       * <pre>
       * Saving the room for relational operators
       * </pre>
       *
       * <code>.algebra.GetV vertex = 30;</code>
       * @return Whether the vertex field is set.
       */
      @java.lang.Override
      public boolean hasVertex() {
        return oprCase_ == 30;
      }
      /**
       * <pre>
       * Saving the room for relational operators
       * </pre>
       *
       * <code>.algebra.GetV vertex = 30;</code>
       * @return The vertex.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV getVertex() {
        if (oprCase_ == 30) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.getDefaultInstance();
      }
      /**
       * <pre>
       * Saving the room for relational operators
       * </pre>
       *
       * <code>.algebra.GetV vertex = 30;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetVOrBuilder getVertexOrBuilder() {
        if (oprCase_ == 30) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.getDefaultInstance();
      }

      public static final int EDGE_FIELD_NUMBER = 31;
      /**
       * <code>.algebra.EdgeExpand edge = 31;</code>
       * @return Whether the edge field is set.
       */
      @java.lang.Override
      public boolean hasEdge() {
        return oprCase_ == 31;
      }
      /**
       * <code>.algebra.EdgeExpand edge = 31;</code>
       * @return The edge.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand getEdge() {
        if (oprCase_ == 31) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.getDefaultInstance();
      }
      /**
       * <code>.algebra.EdgeExpand edge = 31;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpandOrBuilder getEdgeOrBuilder() {
        if (oprCase_ == 31) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.getDefaultInstance();
      }

      public static final int PATH_FIELD_NUMBER = 32;
      /**
       * <code>.algebra.PathExpand path = 32;</code>
       * @return Whether the path field is set.
       */
      @java.lang.Override
      public boolean hasPath() {
        return oprCase_ == 32;
      }
      /**
       * <code>.algebra.PathExpand path = 32;</code>
       * @return The path.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand getPath() {
        if (oprCase_ == 32) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.getDefaultInstance();
      }
      /**
       * <code>.algebra.PathExpand path = 32;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpandOrBuilder getPathOrBuilder() {
        if (oprCase_ == 32) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.getDefaultInstance();
      }

      public static final int PATTERN_FIELD_NUMBER = 35;
      /**
       * <code>.algebra.Pattern pattern = 35;</code>
       * @return Whether the pattern field is set.
       */
      @java.lang.Override
      public boolean hasPattern() {
        return oprCase_ == 35;
      }
      /**
       * <code>.algebra.Pattern pattern = 35;</code>
       * @return The pattern.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern getPattern() {
        if (oprCase_ == 35) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.getDefaultInstance();
      }
      /**
       * <code>.algebra.Pattern pattern = 35;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PatternOrBuilder getPatternOrBuilder() {
        if (oprCase_ == 35) {
           return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern) opr_;
        }
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.getDefaultInstance();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (oprCase_ == 1) {
          output.writeMessage(1, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project) opr_);
        }
        if (oprCase_ == 2) {
          output.writeMessage(2, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select) opr_);
        }
        if (oprCase_ == 3) {
          output.writeMessage(3, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join) opr_);
        }
        if (oprCase_ == 4) {
          output.writeMessage(4, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union) opr_);
        }
        if (oprCase_ == 5) {
          output.writeMessage(5, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy) opr_);
        }
        if (oprCase_ == 6) {
          output.writeMessage(6, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy) opr_);
        }
        if (oprCase_ == 7) {
          output.writeMessage(7, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup) opr_);
        }
        if (oprCase_ == 8) {
          output.writeMessage(8, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold) opr_);
        }
        if (oprCase_ == 9) {
          output.writeMessage(9, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply) opr_);
        }
        if (oprCase_ == 10) {
          output.writeMessage(10, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply) opr_);
        }
        if (oprCase_ == 11) {
          output.writeMessage(11, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan) opr_);
        }
        if (oprCase_ == 12) {
          output.writeMessage(12, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit) opr_);
        }
        if (oprCase_ == 14) {
          output.writeMessage(14, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As) opr_);
        }
        if (oprCase_ == 15) {
          output.writeMessage(15, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect) opr_);
        }
        if (oprCase_ == 16) {
          output.writeMessage(16, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink) opr_);
        }
        if (oprCase_ == 17) {
          output.writeMessage(17, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root) opr_);
        }
        if (oprCase_ == 18) {
          output.writeMessage(18, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample) opr_);
        }
        if (oprCase_ == 19) {
          output.writeMessage(19, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch) opr_);
        }
        if (oprCase_ == 30) {
          output.writeMessage(30, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV) opr_);
        }
        if (oprCase_ == 31) {
          output.writeMessage(31, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand) opr_);
        }
        if (oprCase_ == 32) {
          output.writeMessage(32, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand) opr_);
        }
        if (oprCase_ == 35) {
          output.writeMessage(35, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern) opr_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (oprCase_ == 1) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project) opr_);
        }
        if (oprCase_ == 2) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select) opr_);
        }
        if (oprCase_ == 3) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join) opr_);
        }
        if (oprCase_ == 4) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union) opr_);
        }
        if (oprCase_ == 5) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy) opr_);
        }
        if (oprCase_ == 6) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy) opr_);
        }
        if (oprCase_ == 7) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup) opr_);
        }
        if (oprCase_ == 8) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold) opr_);
        }
        if (oprCase_ == 9) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply) opr_);
        }
        if (oprCase_ == 10) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply) opr_);
        }
        if (oprCase_ == 11) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan) opr_);
        }
        if (oprCase_ == 12) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(12, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit) opr_);
        }
        if (oprCase_ == 14) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(14, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As) opr_);
        }
        if (oprCase_ == 15) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(15, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect) opr_);
        }
        if (oprCase_ == 16) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(16, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink) opr_);
        }
        if (oprCase_ == 17) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(17, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root) opr_);
        }
        if (oprCase_ == 18) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(18, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample) opr_);
        }
        if (oprCase_ == 19) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(19, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch) opr_);
        }
        if (oprCase_ == 30) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV) opr_);
        }
        if (oprCase_ == 31) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(31, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand) opr_);
        }
        if (oprCase_ == 32) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(32, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand) opr_);
        }
        if (oprCase_ == 35) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(35, (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern) opr_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator)) {
          return super.equals(obj);
        }
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator) obj;

        if (!getOprCase().equals(other.getOprCase())) return false;
        switch (oprCase_) {
          case 1:
            if (!getProject()
                .equals(other.getProject())) return false;
            break;
          case 2:
            if (!getSelect()
                .equals(other.getSelect())) return false;
            break;
          case 3:
            if (!getJoin()
                .equals(other.getJoin())) return false;
            break;
          case 4:
            if (!getUnion()
                .equals(other.getUnion())) return false;
            break;
          case 5:
            if (!getGroupBy()
                .equals(other.getGroupBy())) return false;
            break;
          case 6:
            if (!getOrderBy()
                .equals(other.getOrderBy())) return false;
            break;
          case 7:
            if (!getDedup()
                .equals(other.getDedup())) return false;
            break;
          case 8:
            if (!getUnfold()
                .equals(other.getUnfold())) return false;
            break;
          case 9:
            if (!getApply()
                .equals(other.getApply())) return false;
            break;
          case 10:
            if (!getSegApply()
                .equals(other.getSegApply())) return false;
            break;
          case 11:
            if (!getScan()
                .equals(other.getScan())) return false;
            break;
          case 12:
            if (!getLimit()
                .equals(other.getLimit())) return false;
            break;
          case 14:
            if (!getAs()
                .equals(other.getAs())) return false;
            break;
          case 15:
            if (!getIntersect()
                .equals(other.getIntersect())) return false;
            break;
          case 16:
            if (!getSink()
                .equals(other.getSink())) return false;
            break;
          case 17:
            if (!getRoot()
                .equals(other.getRoot())) return false;
            break;
          case 18:
            if (!getSample()
                .equals(other.getSample())) return false;
            break;
          case 19:
            if (!getBranch()
                .equals(other.getBranch())) return false;
            break;
          case 30:
            if (!getVertex()
                .equals(other.getVertex())) return false;
            break;
          case 31:
            if (!getEdge()
                .equals(other.getEdge())) return false;
            break;
          case 32:
            if (!getPath()
                .equals(other.getPath())) return false;
            break;
          case 35:
            if (!getPattern()
                .equals(other.getPattern())) return false;
            break;
          case 0:
          default:
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        switch (oprCase_) {
          case 1:
            hash = (37 * hash) + PROJECT_FIELD_NUMBER;
            hash = (53 * hash) + getProject().hashCode();
            break;
          case 2:
            hash = (37 * hash) + SELECT_FIELD_NUMBER;
            hash = (53 * hash) + getSelect().hashCode();
            break;
          case 3:
            hash = (37 * hash) + JOIN_FIELD_NUMBER;
            hash = (53 * hash) + getJoin().hashCode();
            break;
          case 4:
            hash = (37 * hash) + UNION_FIELD_NUMBER;
            hash = (53 * hash) + getUnion().hashCode();
            break;
          case 5:
            hash = (37 * hash) + GROUP_BY_FIELD_NUMBER;
            hash = (53 * hash) + getGroupBy().hashCode();
            break;
          case 6:
            hash = (37 * hash) + ORDER_BY_FIELD_NUMBER;
            hash = (53 * hash) + getOrderBy().hashCode();
            break;
          case 7:
            hash = (37 * hash) + DEDUP_FIELD_NUMBER;
            hash = (53 * hash) + getDedup().hashCode();
            break;
          case 8:
            hash = (37 * hash) + UNFOLD_FIELD_NUMBER;
            hash = (53 * hash) + getUnfold().hashCode();
            break;
          case 9:
            hash = (37 * hash) + APPLY_FIELD_NUMBER;
            hash = (53 * hash) + getApply().hashCode();
            break;
          case 10:
            hash = (37 * hash) + SEG_APPLY_FIELD_NUMBER;
            hash = (53 * hash) + getSegApply().hashCode();
            break;
          case 11:
            hash = (37 * hash) + SCAN_FIELD_NUMBER;
            hash = (53 * hash) + getScan().hashCode();
            break;
          case 12:
            hash = (37 * hash) + LIMIT_FIELD_NUMBER;
            hash = (53 * hash) + getLimit().hashCode();
            break;
          case 14:
            hash = (37 * hash) + AS_FIELD_NUMBER;
            hash = (53 * hash) + getAs().hashCode();
            break;
          case 15:
            hash = (37 * hash) + INTERSECT_FIELD_NUMBER;
            hash = (53 * hash) + getIntersect().hashCode();
            break;
          case 16:
            hash = (37 * hash) + SINK_FIELD_NUMBER;
            hash = (53 * hash) + getSink().hashCode();
            break;
          case 17:
            hash = (37 * hash) + ROOT_FIELD_NUMBER;
            hash = (53 * hash) + getRoot().hashCode();
            break;
          case 18:
            hash = (37 * hash) + SAMPLE_FIELD_NUMBER;
            hash = (53 * hash) + getSample().hashCode();
            break;
          case 19:
            hash = (37 * hash) + BRANCH_FIELD_NUMBER;
            hash = (53 * hash) + getBranch().hashCode();
            break;
          case 30:
            hash = (37 * hash) + VERTEX_FIELD_NUMBER;
            hash = (53 * hash) + getVertex().hashCode();
            break;
          case 31:
            hash = (37 * hash) + EDGE_FIELD_NUMBER;
            hash = (53 * hash) + getEdge().hashCode();
            break;
          case 32:
            hash = (37 * hash) + PATH_FIELD_NUMBER;
            hash = (53 * hash) + getPath().hashCode();
            break;
          case 35:
            hash = (37 * hash) + PATTERN_FIELD_NUMBER;
            hash = (53 * hash) + getPattern().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code algebra.LogicalPlan.Operator}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:algebra.LogicalPlan.Operator)
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.OperatorOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_LogicalPlan_Operator_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_LogicalPlan_Operator_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator.Builder.class);
        }

        // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          if (projectBuilder_ != null) {
            projectBuilder_.clear();
          }
          if (selectBuilder_ != null) {
            selectBuilder_.clear();
          }
          if (joinBuilder_ != null) {
            joinBuilder_.clear();
          }
          if (unionBuilder_ != null) {
            unionBuilder_.clear();
          }
          if (groupByBuilder_ != null) {
            groupByBuilder_.clear();
          }
          if (orderByBuilder_ != null) {
            orderByBuilder_.clear();
          }
          if (dedupBuilder_ != null) {
            dedupBuilder_.clear();
          }
          if (unfoldBuilder_ != null) {
            unfoldBuilder_.clear();
          }
          if (applyBuilder_ != null) {
            applyBuilder_.clear();
          }
          if (segApplyBuilder_ != null) {
            segApplyBuilder_.clear();
          }
          if (scanBuilder_ != null) {
            scanBuilder_.clear();
          }
          if (limitBuilder_ != null) {
            limitBuilder_.clear();
          }
          if (asBuilder_ != null) {
            asBuilder_.clear();
          }
          if (intersectBuilder_ != null) {
            intersectBuilder_.clear();
          }
          if (sinkBuilder_ != null) {
            sinkBuilder_.clear();
          }
          if (rootBuilder_ != null) {
            rootBuilder_.clear();
          }
          if (sampleBuilder_ != null) {
            sampleBuilder_.clear();
          }
          if (branchBuilder_ != null) {
            branchBuilder_.clear();
          }
          if (vertexBuilder_ != null) {
            vertexBuilder_.clear();
          }
          if (edgeBuilder_ != null) {
            edgeBuilder_.clear();
          }
          if (pathBuilder_ != null) {
            pathBuilder_.clear();
          }
          if (patternBuilder_ != null) {
            patternBuilder_.clear();
          }
          oprCase_ = 0;
          opr_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_LogicalPlan_Operator_descriptor;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator getDefaultInstanceForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator.getDefaultInstance();
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator build() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator buildPartial() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          buildPartialOneofs(result);
          onBuilt();
          return result;
        }

        private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator result) {
          int from_bitField0_ = bitField0_;
        }

        private void buildPartialOneofs(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator result) {
          result.oprCase_ = oprCase_;
          result.opr_ = this.opr_;
          if (oprCase_ == 1 &&
              projectBuilder_ != null) {
            result.opr_ = projectBuilder_.build();
          }
          if (oprCase_ == 2 &&
              selectBuilder_ != null) {
            result.opr_ = selectBuilder_.build();
          }
          if (oprCase_ == 3 &&
              joinBuilder_ != null) {
            result.opr_ = joinBuilder_.build();
          }
          if (oprCase_ == 4 &&
              unionBuilder_ != null) {
            result.opr_ = unionBuilder_.build();
          }
          if (oprCase_ == 5 &&
              groupByBuilder_ != null) {
            result.opr_ = groupByBuilder_.build();
          }
          if (oprCase_ == 6 &&
              orderByBuilder_ != null) {
            result.opr_ = orderByBuilder_.build();
          }
          if (oprCase_ == 7 &&
              dedupBuilder_ != null) {
            result.opr_ = dedupBuilder_.build();
          }
          if (oprCase_ == 8 &&
              unfoldBuilder_ != null) {
            result.opr_ = unfoldBuilder_.build();
          }
          if (oprCase_ == 9 &&
              applyBuilder_ != null) {
            result.opr_ = applyBuilder_.build();
          }
          if (oprCase_ == 10 &&
              segApplyBuilder_ != null) {
            result.opr_ = segApplyBuilder_.build();
          }
          if (oprCase_ == 11 &&
              scanBuilder_ != null) {
            result.opr_ = scanBuilder_.build();
          }
          if (oprCase_ == 12 &&
              limitBuilder_ != null) {
            result.opr_ = limitBuilder_.build();
          }
          if (oprCase_ == 14 &&
              asBuilder_ != null) {
            result.opr_ = asBuilder_.build();
          }
          if (oprCase_ == 15 &&
              intersectBuilder_ != null) {
            result.opr_ = intersectBuilder_.build();
          }
          if (oprCase_ == 16 &&
              sinkBuilder_ != null) {
            result.opr_ = sinkBuilder_.build();
          }
          if (oprCase_ == 17 &&
              rootBuilder_ != null) {
            result.opr_ = rootBuilder_.build();
          }
          if (oprCase_ == 18 &&
              sampleBuilder_ != null) {
            result.opr_ = sampleBuilder_.build();
          }
          if (oprCase_ == 19 &&
              branchBuilder_ != null) {
            result.opr_ = branchBuilder_.build();
          }
          if (oprCase_ == 30 &&
              vertexBuilder_ != null) {
            result.opr_ = vertexBuilder_.build();
          }
          if (oprCase_ == 31 &&
              edgeBuilder_ != null) {
            result.opr_ = edgeBuilder_.build();
          }
          if (oprCase_ == 32 &&
              pathBuilder_ != null) {
            result.opr_ = pathBuilder_.build();
          }
          if (oprCase_ == 35 &&
              patternBuilder_ != null) {
            result.opr_ = patternBuilder_.build();
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator) {
            return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator other) {
          if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator.getDefaultInstance()) return this;
          switch (other.getOprCase()) {
            case PROJECT: {
              mergeProject(other.getProject());
              break;
            }
            case SELECT: {
              mergeSelect(other.getSelect());
              break;
            }
            case JOIN: {
              mergeJoin(other.getJoin());
              break;
            }
            case UNION: {
              mergeUnion(other.getUnion());
              break;
            }
            case GROUP_BY: {
              mergeGroupBy(other.getGroupBy());
              break;
            }
            case ORDER_BY: {
              mergeOrderBy(other.getOrderBy());
              break;
            }
            case DEDUP: {
              mergeDedup(other.getDedup());
              break;
            }
            case UNFOLD: {
              mergeUnfold(other.getUnfold());
              break;
            }
            case APPLY: {
              mergeApply(other.getApply());
              break;
            }
            case SEG_APPLY: {
              mergeSegApply(other.getSegApply());
              break;
            }
            case SCAN: {
              mergeScan(other.getScan());
              break;
            }
            case LIMIT: {
              mergeLimit(other.getLimit());
              break;
            }
            case AS: {
              mergeAs(other.getAs());
              break;
            }
            case INTERSECT: {
              mergeIntersect(other.getIntersect());
              break;
            }
            case SINK: {
              mergeSink(other.getSink());
              break;
            }
            case ROOT: {
              mergeRoot(other.getRoot());
              break;
            }
            case SAMPLE: {
              mergeSample(other.getSample());
              break;
            }
            case BRANCH: {
              mergeBranch(other.getBranch());
              break;
            }
            case VERTEX: {
              mergeVertex(other.getVertex());
              break;
            }
            case EDGE: {
              mergeEdge(other.getEdge());
              break;
            }
            case PATH: {
              mergePath(other.getPath());
              break;
            }
            case PATTERN: {
              mergePattern(other.getPattern());
              break;
            }
            case OPR_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getProjectFieldBuilder().getBuilder(),
                      extensionRegistry);
                  oprCase_ = 1;
                  break;
                } // case 10
                case 18: {
                  input.readMessage(
                      getSelectFieldBuilder().getBuilder(),
                      extensionRegistry);
                  oprCase_ = 2;
                  break;
                } // case 18
                case 26: {
                  input.readMessage(
                      getJoinFieldBuilder().getBuilder(),
                      extensionRegistry);
                  oprCase_ = 3;
                  break;
                } // case 26
                case 34: {
                  input.readMessage(
                      getUnionFieldBuilder().getBuilder(),
                      extensionRegistry);
                  oprCase_ = 4;
                  break;
                } // case 34
                case 42: {
                  input.readMessage(
                      getGroupByFieldBuilder().getBuilder(),
                      extensionRegistry);
                  oprCase_ = 5;
                  break;
                } // case 42
                case 50: {
                  input.readMessage(
                      getOrderByFieldBuilder().getBuilder(),
                      extensionRegistry);
                  oprCase_ = 6;
                  break;
                } // case 50
                case 58: {
                  input.readMessage(
                      getDedupFieldBuilder().getBuilder(),
                      extensionRegistry);
                  oprCase_ = 7;
                  break;
                } // case 58
                case 66: {
                  input.readMessage(
                      getUnfoldFieldBuilder().getBuilder(),
                      extensionRegistry);
                  oprCase_ = 8;
                  break;
                } // case 66
                case 74: {
                  input.readMessage(
                      getApplyFieldBuilder().getBuilder(),
                      extensionRegistry);
                  oprCase_ = 9;
                  break;
                } // case 74
                case 82: {
                  input.readMessage(
                      getSegApplyFieldBuilder().getBuilder(),
                      extensionRegistry);
                  oprCase_ = 10;
                  break;
                } // case 82
                case 90: {
                  input.readMessage(
                      getScanFieldBuilder().getBuilder(),
                      extensionRegistry);
                  oprCase_ = 11;
                  break;
                } // case 90
                case 98: {
                  input.readMessage(
                      getLimitFieldBuilder().getBuilder(),
                      extensionRegistry);
                  oprCase_ = 12;
                  break;
                } // case 98
                case 114: {
                  input.readMessage(
                      getAsFieldBuilder().getBuilder(),
                      extensionRegistry);
                  oprCase_ = 14;
                  break;
                } // case 114
                case 122: {
                  input.readMessage(
                      getIntersectFieldBuilder().getBuilder(),
                      extensionRegistry);
                  oprCase_ = 15;
                  break;
                } // case 122
                case 130: {
                  input.readMessage(
                      getSinkFieldBuilder().getBuilder(),
                      extensionRegistry);
                  oprCase_ = 16;
                  break;
                } // case 130
                case 138: {
                  input.readMessage(
                      getRootFieldBuilder().getBuilder(),
                      extensionRegistry);
                  oprCase_ = 17;
                  break;
                } // case 138
                case 146: {
                  input.readMessage(
                      getSampleFieldBuilder().getBuilder(),
                      extensionRegistry);
                  oprCase_ = 18;
                  break;
                } // case 146
                case 154: {
                  input.readMessage(
                      getBranchFieldBuilder().getBuilder(),
                      extensionRegistry);
                  oprCase_ = 19;
                  break;
                } // case 154
                case 242: {
                  input.readMessage(
                      getVertexFieldBuilder().getBuilder(),
                      extensionRegistry);
                  oprCase_ = 30;
                  break;
                } // case 242
                case 250: {
                  input.readMessage(
                      getEdgeFieldBuilder().getBuilder(),
                      extensionRegistry);
                  oprCase_ = 31;
                  break;
                } // case 250
                case 258: {
                  input.readMessage(
                      getPathFieldBuilder().getBuilder(),
                      extensionRegistry);
                  oprCase_ = 32;
                  break;
                } // case 258
                case 282: {
                  input.readMessage(
                      getPatternFieldBuilder().getBuilder(),
                      extensionRegistry);
                  oprCase_ = 35;
                  break;
                } // case 282
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int oprCase_ = 0;
        private java.lang.Object opr_;
        public OprCase
            getOprCase() {
          return OprCase.forNumber(
              oprCase_);
        }

        public Builder clearOpr() {
          oprCase_ = 0;
          opr_ = null;
          onChanged();
          return this;
        }

        private int bitField0_;

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ProjectOrBuilder> projectBuilder_;
        /**
         * <code>.algebra.Project project = 1;</code>
         * @return Whether the project field is set.
         */
        @java.lang.Override
        public boolean hasProject() {
          return oprCase_ == 1;
        }
        /**
         * <code>.algebra.Project project = 1;</code>
         * @return The project.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project getProject() {
          if (projectBuilder_ == null) {
            if (oprCase_ == 1) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.getDefaultInstance();
          } else {
            if (oprCase_ == 1) {
              return projectBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Project project = 1;</code>
         */
        public Builder setProject(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project value) {
          if (projectBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            opr_ = value;
            onChanged();
          } else {
            projectBuilder_.setMessage(value);
          }
          oprCase_ = 1;
          return this;
        }
        /**
         * <code>.algebra.Project project = 1;</code>
         */
        public Builder setProject(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.Builder builderForValue) {
          if (projectBuilder_ == null) {
            opr_ = builderForValue.build();
            onChanged();
          } else {
            projectBuilder_.setMessage(builderForValue.build());
          }
          oprCase_ = 1;
          return this;
        }
        /**
         * <code>.algebra.Project project = 1;</code>
         */
        public Builder mergeProject(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project value) {
          if (projectBuilder_ == null) {
            if (oprCase_ == 1 &&
                opr_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.getDefaultInstance()) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project) opr_)
                  .mergeFrom(value).buildPartial();
            } else {
              opr_ = value;
            }
            onChanged();
          } else {
            if (oprCase_ == 1) {
              projectBuilder_.mergeFrom(value);
            } else {
              projectBuilder_.setMessage(value);
            }
          }
          oprCase_ = 1;
          return this;
        }
        /**
         * <code>.algebra.Project project = 1;</code>
         */
        public Builder clearProject() {
          if (projectBuilder_ == null) {
            if (oprCase_ == 1) {
              oprCase_ = 0;
              opr_ = null;
              onChanged();
            }
          } else {
            if (oprCase_ == 1) {
              oprCase_ = 0;
              opr_ = null;
            }
            projectBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.Project project = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.Builder getProjectBuilder() {
          return getProjectFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.Project project = 1;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ProjectOrBuilder getProjectOrBuilder() {
          if ((oprCase_ == 1) && (projectBuilder_ != null)) {
            return projectBuilder_.getMessageOrBuilder();
          } else {
            if (oprCase_ == 1) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Project project = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ProjectOrBuilder> 
            getProjectFieldBuilder() {
          if (projectBuilder_ == null) {
            if (!(oprCase_ == 1)) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.getDefaultInstance();
            }
            projectBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ProjectOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Project) opr_,
                    getParentForChildren(),
                    isClean());
            opr_ = null;
          }
          oprCase_ = 1;
          onChanged();
          return projectBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SelectOrBuilder> selectBuilder_;
        /**
         * <code>.algebra.Select select = 2;</code>
         * @return Whether the select field is set.
         */
        @java.lang.Override
        public boolean hasSelect() {
          return oprCase_ == 2;
        }
        /**
         * <code>.algebra.Select select = 2;</code>
         * @return The select.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select getSelect() {
          if (selectBuilder_ == null) {
            if (oprCase_ == 2) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.getDefaultInstance();
          } else {
            if (oprCase_ == 2) {
              return selectBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Select select = 2;</code>
         */
        public Builder setSelect(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select value) {
          if (selectBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            opr_ = value;
            onChanged();
          } else {
            selectBuilder_.setMessage(value);
          }
          oprCase_ = 2;
          return this;
        }
        /**
         * <code>.algebra.Select select = 2;</code>
         */
        public Builder setSelect(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.Builder builderForValue) {
          if (selectBuilder_ == null) {
            opr_ = builderForValue.build();
            onChanged();
          } else {
            selectBuilder_.setMessage(builderForValue.build());
          }
          oprCase_ = 2;
          return this;
        }
        /**
         * <code>.algebra.Select select = 2;</code>
         */
        public Builder mergeSelect(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select value) {
          if (selectBuilder_ == null) {
            if (oprCase_ == 2 &&
                opr_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.getDefaultInstance()) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select) opr_)
                  .mergeFrom(value).buildPartial();
            } else {
              opr_ = value;
            }
            onChanged();
          } else {
            if (oprCase_ == 2) {
              selectBuilder_.mergeFrom(value);
            } else {
              selectBuilder_.setMessage(value);
            }
          }
          oprCase_ = 2;
          return this;
        }
        /**
         * <code>.algebra.Select select = 2;</code>
         */
        public Builder clearSelect() {
          if (selectBuilder_ == null) {
            if (oprCase_ == 2) {
              oprCase_ = 0;
              opr_ = null;
              onChanged();
            }
          } else {
            if (oprCase_ == 2) {
              oprCase_ = 0;
              opr_ = null;
            }
            selectBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.Select select = 2;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.Builder getSelectBuilder() {
          return getSelectFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.Select select = 2;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SelectOrBuilder getSelectOrBuilder() {
          if ((oprCase_ == 2) && (selectBuilder_ != null)) {
            return selectBuilder_.getMessageOrBuilder();
          } else {
            if (oprCase_ == 2) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Select select = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SelectOrBuilder> 
            getSelectFieldBuilder() {
          if (selectBuilder_ == null) {
            if (!(oprCase_ == 2)) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.getDefaultInstance();
            }
            selectBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SelectOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Select) opr_,
                    getParentForChildren(),
                    isClean());
            opr_ = null;
          }
          oprCase_ = 2;
          onChanged();
          return selectBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.JoinOrBuilder> joinBuilder_;
        /**
         * <code>.algebra.Join join = 3;</code>
         * @return Whether the join field is set.
         */
        @java.lang.Override
        public boolean hasJoin() {
          return oprCase_ == 3;
        }
        /**
         * <code>.algebra.Join join = 3;</code>
         * @return The join.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join getJoin() {
          if (joinBuilder_ == null) {
            if (oprCase_ == 3) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.getDefaultInstance();
          } else {
            if (oprCase_ == 3) {
              return joinBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Join join = 3;</code>
         */
        public Builder setJoin(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join value) {
          if (joinBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            opr_ = value;
            onChanged();
          } else {
            joinBuilder_.setMessage(value);
          }
          oprCase_ = 3;
          return this;
        }
        /**
         * <code>.algebra.Join join = 3;</code>
         */
        public Builder setJoin(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.Builder builderForValue) {
          if (joinBuilder_ == null) {
            opr_ = builderForValue.build();
            onChanged();
          } else {
            joinBuilder_.setMessage(builderForValue.build());
          }
          oprCase_ = 3;
          return this;
        }
        /**
         * <code>.algebra.Join join = 3;</code>
         */
        public Builder mergeJoin(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join value) {
          if (joinBuilder_ == null) {
            if (oprCase_ == 3 &&
                opr_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.getDefaultInstance()) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join) opr_)
                  .mergeFrom(value).buildPartial();
            } else {
              opr_ = value;
            }
            onChanged();
          } else {
            if (oprCase_ == 3) {
              joinBuilder_.mergeFrom(value);
            } else {
              joinBuilder_.setMessage(value);
            }
          }
          oprCase_ = 3;
          return this;
        }
        /**
         * <code>.algebra.Join join = 3;</code>
         */
        public Builder clearJoin() {
          if (joinBuilder_ == null) {
            if (oprCase_ == 3) {
              oprCase_ = 0;
              opr_ = null;
              onChanged();
            }
          } else {
            if (oprCase_ == 3) {
              oprCase_ = 0;
              opr_ = null;
            }
            joinBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.Join join = 3;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.Builder getJoinBuilder() {
          return getJoinFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.Join join = 3;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.JoinOrBuilder getJoinOrBuilder() {
          if ((oprCase_ == 3) && (joinBuilder_ != null)) {
            return joinBuilder_.getMessageOrBuilder();
          } else {
            if (oprCase_ == 3) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Join join = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.JoinOrBuilder> 
            getJoinFieldBuilder() {
          if (joinBuilder_ == null) {
            if (!(oprCase_ == 3)) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.getDefaultInstance();
            }
            joinBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.JoinOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Join) opr_,
                    getParentForChildren(),
                    isClean());
            opr_ = null;
          }
          oprCase_ = 3;
          onChanged();
          return joinBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.UnionOrBuilder> unionBuilder_;
        /**
         * <code>.algebra.Union union = 4;</code>
         * @return Whether the union field is set.
         */
        @java.lang.Override
        public boolean hasUnion() {
          return oprCase_ == 4;
        }
        /**
         * <code>.algebra.Union union = 4;</code>
         * @return The union.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union getUnion() {
          if (unionBuilder_ == null) {
            if (oprCase_ == 4) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union.getDefaultInstance();
          } else {
            if (oprCase_ == 4) {
              return unionBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Union union = 4;</code>
         */
        public Builder setUnion(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union value) {
          if (unionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            opr_ = value;
            onChanged();
          } else {
            unionBuilder_.setMessage(value);
          }
          oprCase_ = 4;
          return this;
        }
        /**
         * <code>.algebra.Union union = 4;</code>
         */
        public Builder setUnion(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union.Builder builderForValue) {
          if (unionBuilder_ == null) {
            opr_ = builderForValue.build();
            onChanged();
          } else {
            unionBuilder_.setMessage(builderForValue.build());
          }
          oprCase_ = 4;
          return this;
        }
        /**
         * <code>.algebra.Union union = 4;</code>
         */
        public Builder mergeUnion(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union value) {
          if (unionBuilder_ == null) {
            if (oprCase_ == 4 &&
                opr_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union.getDefaultInstance()) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union) opr_)
                  .mergeFrom(value).buildPartial();
            } else {
              opr_ = value;
            }
            onChanged();
          } else {
            if (oprCase_ == 4) {
              unionBuilder_.mergeFrom(value);
            } else {
              unionBuilder_.setMessage(value);
            }
          }
          oprCase_ = 4;
          return this;
        }
        /**
         * <code>.algebra.Union union = 4;</code>
         */
        public Builder clearUnion() {
          if (unionBuilder_ == null) {
            if (oprCase_ == 4) {
              oprCase_ = 0;
              opr_ = null;
              onChanged();
            }
          } else {
            if (oprCase_ == 4) {
              oprCase_ = 0;
              opr_ = null;
            }
            unionBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.Union union = 4;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union.Builder getUnionBuilder() {
          return getUnionFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.Union union = 4;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.UnionOrBuilder getUnionOrBuilder() {
          if ((oprCase_ == 4) && (unionBuilder_ != null)) {
            return unionBuilder_.getMessageOrBuilder();
          } else {
            if (oprCase_ == 4) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Union union = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.UnionOrBuilder> 
            getUnionFieldBuilder() {
          if (unionBuilder_ == null) {
            if (!(oprCase_ == 4)) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union.getDefaultInstance();
            }
            unionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.UnionOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Union) opr_,
                    getParentForChildren(),
                    isClean());
            opr_ = null;
          }
          oprCase_ = 4;
          onChanged();
          return unionBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupByOrBuilder> groupByBuilder_;
        /**
         * <code>.algebra.GroupBy group_by = 5;</code>
         * @return Whether the groupBy field is set.
         */
        @java.lang.Override
        public boolean hasGroupBy() {
          return oprCase_ == 5;
        }
        /**
         * <code>.algebra.GroupBy group_by = 5;</code>
         * @return The groupBy.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy getGroupBy() {
          if (groupByBuilder_ == null) {
            if (oprCase_ == 5) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.getDefaultInstance();
          } else {
            if (oprCase_ == 5) {
              return groupByBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.GroupBy group_by = 5;</code>
         */
        public Builder setGroupBy(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy value) {
          if (groupByBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            opr_ = value;
            onChanged();
          } else {
            groupByBuilder_.setMessage(value);
          }
          oprCase_ = 5;
          return this;
        }
        /**
         * <code>.algebra.GroupBy group_by = 5;</code>
         */
        public Builder setGroupBy(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.Builder builderForValue) {
          if (groupByBuilder_ == null) {
            opr_ = builderForValue.build();
            onChanged();
          } else {
            groupByBuilder_.setMessage(builderForValue.build());
          }
          oprCase_ = 5;
          return this;
        }
        /**
         * <code>.algebra.GroupBy group_by = 5;</code>
         */
        public Builder mergeGroupBy(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy value) {
          if (groupByBuilder_ == null) {
            if (oprCase_ == 5 &&
                opr_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.getDefaultInstance()) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy) opr_)
                  .mergeFrom(value).buildPartial();
            } else {
              opr_ = value;
            }
            onChanged();
          } else {
            if (oprCase_ == 5) {
              groupByBuilder_.mergeFrom(value);
            } else {
              groupByBuilder_.setMessage(value);
            }
          }
          oprCase_ = 5;
          return this;
        }
        /**
         * <code>.algebra.GroupBy group_by = 5;</code>
         */
        public Builder clearGroupBy() {
          if (groupByBuilder_ == null) {
            if (oprCase_ == 5) {
              oprCase_ = 0;
              opr_ = null;
              onChanged();
            }
          } else {
            if (oprCase_ == 5) {
              oprCase_ = 0;
              opr_ = null;
            }
            groupByBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.GroupBy group_by = 5;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.Builder getGroupByBuilder() {
          return getGroupByFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.GroupBy group_by = 5;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupByOrBuilder getGroupByOrBuilder() {
          if ((oprCase_ == 5) && (groupByBuilder_ != null)) {
            return groupByBuilder_.getMessageOrBuilder();
          } else {
            if (oprCase_ == 5) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.GroupBy group_by = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupByOrBuilder> 
            getGroupByFieldBuilder() {
          if (groupByBuilder_ == null) {
            if (!(oprCase_ == 5)) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.getDefaultInstance();
            }
            groupByBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupByOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GroupBy) opr_,
                    getParentForChildren(),
                    isClean());
            opr_ = null;
          }
          oprCase_ = 5;
          onChanged();
          return groupByBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderByOrBuilder> orderByBuilder_;
        /**
         * <code>.algebra.OrderBy order_by = 6;</code>
         * @return Whether the orderBy field is set.
         */
        @java.lang.Override
        public boolean hasOrderBy() {
          return oprCase_ == 6;
        }
        /**
         * <code>.algebra.OrderBy order_by = 6;</code>
         * @return The orderBy.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy getOrderBy() {
          if (orderByBuilder_ == null) {
            if (oprCase_ == 6) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.getDefaultInstance();
          } else {
            if (oprCase_ == 6) {
              return orderByBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.OrderBy order_by = 6;</code>
         */
        public Builder setOrderBy(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy value) {
          if (orderByBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            opr_ = value;
            onChanged();
          } else {
            orderByBuilder_.setMessage(value);
          }
          oprCase_ = 6;
          return this;
        }
        /**
         * <code>.algebra.OrderBy order_by = 6;</code>
         */
        public Builder setOrderBy(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.Builder builderForValue) {
          if (orderByBuilder_ == null) {
            opr_ = builderForValue.build();
            onChanged();
          } else {
            orderByBuilder_.setMessage(builderForValue.build());
          }
          oprCase_ = 6;
          return this;
        }
        /**
         * <code>.algebra.OrderBy order_by = 6;</code>
         */
        public Builder mergeOrderBy(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy value) {
          if (orderByBuilder_ == null) {
            if (oprCase_ == 6 &&
                opr_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.getDefaultInstance()) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy) opr_)
                  .mergeFrom(value).buildPartial();
            } else {
              opr_ = value;
            }
            onChanged();
          } else {
            if (oprCase_ == 6) {
              orderByBuilder_.mergeFrom(value);
            } else {
              orderByBuilder_.setMessage(value);
            }
          }
          oprCase_ = 6;
          return this;
        }
        /**
         * <code>.algebra.OrderBy order_by = 6;</code>
         */
        public Builder clearOrderBy() {
          if (orderByBuilder_ == null) {
            if (oprCase_ == 6) {
              oprCase_ = 0;
              opr_ = null;
              onChanged();
            }
          } else {
            if (oprCase_ == 6) {
              oprCase_ = 0;
              opr_ = null;
            }
            orderByBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.OrderBy order_by = 6;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.Builder getOrderByBuilder() {
          return getOrderByFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.OrderBy order_by = 6;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderByOrBuilder getOrderByOrBuilder() {
          if ((oprCase_ == 6) && (orderByBuilder_ != null)) {
            return orderByBuilder_.getMessageOrBuilder();
          } else {
            if (oprCase_ == 6) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.OrderBy order_by = 6;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderByOrBuilder> 
            getOrderByFieldBuilder() {
          if (orderByBuilder_ == null) {
            if (!(oprCase_ == 6)) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.getDefaultInstance();
            }
            orderByBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderByOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.OrderBy) opr_,
                    getParentForChildren(),
                    isClean());
            opr_ = null;
          }
          oprCase_ = 6;
          onChanged();
          return orderByBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.DedupOrBuilder> dedupBuilder_;
        /**
         * <code>.algebra.Dedup dedup = 7;</code>
         * @return Whether the dedup field is set.
         */
        @java.lang.Override
        public boolean hasDedup() {
          return oprCase_ == 7;
        }
        /**
         * <code>.algebra.Dedup dedup = 7;</code>
         * @return The dedup.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup getDedup() {
          if (dedupBuilder_ == null) {
            if (oprCase_ == 7) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup.getDefaultInstance();
          } else {
            if (oprCase_ == 7) {
              return dedupBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Dedup dedup = 7;</code>
         */
        public Builder setDedup(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup value) {
          if (dedupBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            opr_ = value;
            onChanged();
          } else {
            dedupBuilder_.setMessage(value);
          }
          oprCase_ = 7;
          return this;
        }
        /**
         * <code>.algebra.Dedup dedup = 7;</code>
         */
        public Builder setDedup(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup.Builder builderForValue) {
          if (dedupBuilder_ == null) {
            opr_ = builderForValue.build();
            onChanged();
          } else {
            dedupBuilder_.setMessage(builderForValue.build());
          }
          oprCase_ = 7;
          return this;
        }
        /**
         * <code>.algebra.Dedup dedup = 7;</code>
         */
        public Builder mergeDedup(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup value) {
          if (dedupBuilder_ == null) {
            if (oprCase_ == 7 &&
                opr_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup.getDefaultInstance()) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup) opr_)
                  .mergeFrom(value).buildPartial();
            } else {
              opr_ = value;
            }
            onChanged();
          } else {
            if (oprCase_ == 7) {
              dedupBuilder_.mergeFrom(value);
            } else {
              dedupBuilder_.setMessage(value);
            }
          }
          oprCase_ = 7;
          return this;
        }
        /**
         * <code>.algebra.Dedup dedup = 7;</code>
         */
        public Builder clearDedup() {
          if (dedupBuilder_ == null) {
            if (oprCase_ == 7) {
              oprCase_ = 0;
              opr_ = null;
              onChanged();
            }
          } else {
            if (oprCase_ == 7) {
              oprCase_ = 0;
              opr_ = null;
            }
            dedupBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.Dedup dedup = 7;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup.Builder getDedupBuilder() {
          return getDedupFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.Dedup dedup = 7;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.DedupOrBuilder getDedupOrBuilder() {
          if ((oprCase_ == 7) && (dedupBuilder_ != null)) {
            return dedupBuilder_.getMessageOrBuilder();
          } else {
            if (oprCase_ == 7) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Dedup dedup = 7;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.DedupOrBuilder> 
            getDedupFieldBuilder() {
          if (dedupBuilder_ == null) {
            if (!(oprCase_ == 7)) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup.getDefaultInstance();
            }
            dedupBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.DedupOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Dedup) opr_,
                    getParentForChildren(),
                    isClean());
            opr_ = null;
          }
          oprCase_ = 7;
          onChanged();
          return dedupBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.UnfoldOrBuilder> unfoldBuilder_;
        /**
         * <code>.algebra.Unfold unfold = 8;</code>
         * @return Whether the unfold field is set.
         */
        @java.lang.Override
        public boolean hasUnfold() {
          return oprCase_ == 8;
        }
        /**
         * <code>.algebra.Unfold unfold = 8;</code>
         * @return The unfold.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold getUnfold() {
          if (unfoldBuilder_ == null) {
            if (oprCase_ == 8) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold.getDefaultInstance();
          } else {
            if (oprCase_ == 8) {
              return unfoldBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Unfold unfold = 8;</code>
         */
        public Builder setUnfold(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold value) {
          if (unfoldBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            opr_ = value;
            onChanged();
          } else {
            unfoldBuilder_.setMessage(value);
          }
          oprCase_ = 8;
          return this;
        }
        /**
         * <code>.algebra.Unfold unfold = 8;</code>
         */
        public Builder setUnfold(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold.Builder builderForValue) {
          if (unfoldBuilder_ == null) {
            opr_ = builderForValue.build();
            onChanged();
          } else {
            unfoldBuilder_.setMessage(builderForValue.build());
          }
          oprCase_ = 8;
          return this;
        }
        /**
         * <code>.algebra.Unfold unfold = 8;</code>
         */
        public Builder mergeUnfold(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold value) {
          if (unfoldBuilder_ == null) {
            if (oprCase_ == 8 &&
                opr_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold.getDefaultInstance()) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold) opr_)
                  .mergeFrom(value).buildPartial();
            } else {
              opr_ = value;
            }
            onChanged();
          } else {
            if (oprCase_ == 8) {
              unfoldBuilder_.mergeFrom(value);
            } else {
              unfoldBuilder_.setMessage(value);
            }
          }
          oprCase_ = 8;
          return this;
        }
        /**
         * <code>.algebra.Unfold unfold = 8;</code>
         */
        public Builder clearUnfold() {
          if (unfoldBuilder_ == null) {
            if (oprCase_ == 8) {
              oprCase_ = 0;
              opr_ = null;
              onChanged();
            }
          } else {
            if (oprCase_ == 8) {
              oprCase_ = 0;
              opr_ = null;
            }
            unfoldBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.Unfold unfold = 8;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold.Builder getUnfoldBuilder() {
          return getUnfoldFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.Unfold unfold = 8;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.UnfoldOrBuilder getUnfoldOrBuilder() {
          if ((oprCase_ == 8) && (unfoldBuilder_ != null)) {
            return unfoldBuilder_.getMessageOrBuilder();
          } else {
            if (oprCase_ == 8) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Unfold unfold = 8;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.UnfoldOrBuilder> 
            getUnfoldFieldBuilder() {
          if (unfoldBuilder_ == null) {
            if (!(oprCase_ == 8)) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold.getDefaultInstance();
            }
            unfoldBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.UnfoldOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Unfold) opr_,
                    getParentForChildren(),
                    isClean());
            opr_ = null;
          }
          oprCase_ = 8;
          onChanged();
          return unfoldBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ApplyOrBuilder> applyBuilder_;
        /**
         * <code>.algebra.Apply apply = 9;</code>
         * @return Whether the apply field is set.
         */
        @java.lang.Override
        public boolean hasApply() {
          return oprCase_ == 9;
        }
        /**
         * <code>.algebra.Apply apply = 9;</code>
         * @return The apply.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply getApply() {
          if (applyBuilder_ == null) {
            if (oprCase_ == 9) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.getDefaultInstance();
          } else {
            if (oprCase_ == 9) {
              return applyBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Apply apply = 9;</code>
         */
        public Builder setApply(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply value) {
          if (applyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            opr_ = value;
            onChanged();
          } else {
            applyBuilder_.setMessage(value);
          }
          oprCase_ = 9;
          return this;
        }
        /**
         * <code>.algebra.Apply apply = 9;</code>
         */
        public Builder setApply(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.Builder builderForValue) {
          if (applyBuilder_ == null) {
            opr_ = builderForValue.build();
            onChanged();
          } else {
            applyBuilder_.setMessage(builderForValue.build());
          }
          oprCase_ = 9;
          return this;
        }
        /**
         * <code>.algebra.Apply apply = 9;</code>
         */
        public Builder mergeApply(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply value) {
          if (applyBuilder_ == null) {
            if (oprCase_ == 9 &&
                opr_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.getDefaultInstance()) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply) opr_)
                  .mergeFrom(value).buildPartial();
            } else {
              opr_ = value;
            }
            onChanged();
          } else {
            if (oprCase_ == 9) {
              applyBuilder_.mergeFrom(value);
            } else {
              applyBuilder_.setMessage(value);
            }
          }
          oprCase_ = 9;
          return this;
        }
        /**
         * <code>.algebra.Apply apply = 9;</code>
         */
        public Builder clearApply() {
          if (applyBuilder_ == null) {
            if (oprCase_ == 9) {
              oprCase_ = 0;
              opr_ = null;
              onChanged();
            }
          } else {
            if (oprCase_ == 9) {
              oprCase_ = 0;
              opr_ = null;
            }
            applyBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.Apply apply = 9;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.Builder getApplyBuilder() {
          return getApplyFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.Apply apply = 9;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ApplyOrBuilder getApplyOrBuilder() {
          if ((oprCase_ == 9) && (applyBuilder_ != null)) {
            return applyBuilder_.getMessageOrBuilder();
          } else {
            if (oprCase_ == 9) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Apply apply = 9;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ApplyOrBuilder> 
            getApplyFieldBuilder() {
          if (applyBuilder_ == null) {
            if (!(oprCase_ == 9)) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.getDefaultInstance();
            }
            applyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ApplyOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Apply) opr_,
                    getParentForChildren(),
                    isClean());
            opr_ = null;
          }
          oprCase_ = 9;
          onChanged();
          return applyBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApplyOrBuilder> segApplyBuilder_;
        /**
         * <code>.algebra.SegmentApply seg_apply = 10;</code>
         * @return Whether the segApply field is set.
         */
        @java.lang.Override
        public boolean hasSegApply() {
          return oprCase_ == 10;
        }
        /**
         * <code>.algebra.SegmentApply seg_apply = 10;</code>
         * @return The segApply.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply getSegApply() {
          if (segApplyBuilder_ == null) {
            if (oprCase_ == 10) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply.getDefaultInstance();
          } else {
            if (oprCase_ == 10) {
              return segApplyBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.SegmentApply seg_apply = 10;</code>
         */
        public Builder setSegApply(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply value) {
          if (segApplyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            opr_ = value;
            onChanged();
          } else {
            segApplyBuilder_.setMessage(value);
          }
          oprCase_ = 10;
          return this;
        }
        /**
         * <code>.algebra.SegmentApply seg_apply = 10;</code>
         */
        public Builder setSegApply(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply.Builder builderForValue) {
          if (segApplyBuilder_ == null) {
            opr_ = builderForValue.build();
            onChanged();
          } else {
            segApplyBuilder_.setMessage(builderForValue.build());
          }
          oprCase_ = 10;
          return this;
        }
        /**
         * <code>.algebra.SegmentApply seg_apply = 10;</code>
         */
        public Builder mergeSegApply(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply value) {
          if (segApplyBuilder_ == null) {
            if (oprCase_ == 10 &&
                opr_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply.getDefaultInstance()) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply) opr_)
                  .mergeFrom(value).buildPartial();
            } else {
              opr_ = value;
            }
            onChanged();
          } else {
            if (oprCase_ == 10) {
              segApplyBuilder_.mergeFrom(value);
            } else {
              segApplyBuilder_.setMessage(value);
            }
          }
          oprCase_ = 10;
          return this;
        }
        /**
         * <code>.algebra.SegmentApply seg_apply = 10;</code>
         */
        public Builder clearSegApply() {
          if (segApplyBuilder_ == null) {
            if (oprCase_ == 10) {
              oprCase_ = 0;
              opr_ = null;
              onChanged();
            }
          } else {
            if (oprCase_ == 10) {
              oprCase_ = 0;
              opr_ = null;
            }
            segApplyBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.SegmentApply seg_apply = 10;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply.Builder getSegApplyBuilder() {
          return getSegApplyFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.SegmentApply seg_apply = 10;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApplyOrBuilder getSegApplyOrBuilder() {
          if ((oprCase_ == 10) && (segApplyBuilder_ != null)) {
            return segApplyBuilder_.getMessageOrBuilder();
          } else {
            if (oprCase_ == 10) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.SegmentApply seg_apply = 10;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApplyOrBuilder> 
            getSegApplyFieldBuilder() {
          if (segApplyBuilder_ == null) {
            if (!(oprCase_ == 10)) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply.getDefaultInstance();
            }
            segApplyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApplyOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SegmentApply) opr_,
                    getParentForChildren(),
                    isClean());
            opr_ = null;
          }
          oprCase_ = 10;
          onChanged();
          return segApplyBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ScanOrBuilder> scanBuilder_;
        /**
         * <code>.algebra.Scan scan = 11;</code>
         * @return Whether the scan field is set.
         */
        @java.lang.Override
        public boolean hasScan() {
          return oprCase_ == 11;
        }
        /**
         * <code>.algebra.Scan scan = 11;</code>
         * @return The scan.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan getScan() {
          if (scanBuilder_ == null) {
            if (oprCase_ == 11) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.getDefaultInstance();
          } else {
            if (oprCase_ == 11) {
              return scanBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Scan scan = 11;</code>
         */
        public Builder setScan(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan value) {
          if (scanBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            opr_ = value;
            onChanged();
          } else {
            scanBuilder_.setMessage(value);
          }
          oprCase_ = 11;
          return this;
        }
        /**
         * <code>.algebra.Scan scan = 11;</code>
         */
        public Builder setScan(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.Builder builderForValue) {
          if (scanBuilder_ == null) {
            opr_ = builderForValue.build();
            onChanged();
          } else {
            scanBuilder_.setMessage(builderForValue.build());
          }
          oprCase_ = 11;
          return this;
        }
        /**
         * <code>.algebra.Scan scan = 11;</code>
         */
        public Builder mergeScan(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan value) {
          if (scanBuilder_ == null) {
            if (oprCase_ == 11 &&
                opr_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.getDefaultInstance()) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan) opr_)
                  .mergeFrom(value).buildPartial();
            } else {
              opr_ = value;
            }
            onChanged();
          } else {
            if (oprCase_ == 11) {
              scanBuilder_.mergeFrom(value);
            } else {
              scanBuilder_.setMessage(value);
            }
          }
          oprCase_ = 11;
          return this;
        }
        /**
         * <code>.algebra.Scan scan = 11;</code>
         */
        public Builder clearScan() {
          if (scanBuilder_ == null) {
            if (oprCase_ == 11) {
              oprCase_ = 0;
              opr_ = null;
              onChanged();
            }
          } else {
            if (oprCase_ == 11) {
              oprCase_ = 0;
              opr_ = null;
            }
            scanBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.Scan scan = 11;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.Builder getScanBuilder() {
          return getScanFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.Scan scan = 11;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ScanOrBuilder getScanOrBuilder() {
          if ((oprCase_ == 11) && (scanBuilder_ != null)) {
            return scanBuilder_.getMessageOrBuilder();
          } else {
            if (oprCase_ == 11) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Scan scan = 11;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ScanOrBuilder> 
            getScanFieldBuilder() {
          if (scanBuilder_ == null) {
            if (!(oprCase_ == 11)) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.getDefaultInstance();
            }
            scanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.ScanOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Scan) opr_,
                    getParentForChildren(),
                    isClean());
            opr_ = null;
          }
          oprCase_ = 11;
          onChanged();
          return scanBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LimitOrBuilder> limitBuilder_;
        /**
         * <code>.algebra.Limit limit = 12;</code>
         * @return Whether the limit field is set.
         */
        @java.lang.Override
        public boolean hasLimit() {
          return oprCase_ == 12;
        }
        /**
         * <code>.algebra.Limit limit = 12;</code>
         * @return The limit.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit getLimit() {
          if (limitBuilder_ == null) {
            if (oprCase_ == 12) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit.getDefaultInstance();
          } else {
            if (oprCase_ == 12) {
              return limitBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Limit limit = 12;</code>
         */
        public Builder setLimit(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit value) {
          if (limitBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            opr_ = value;
            onChanged();
          } else {
            limitBuilder_.setMessage(value);
          }
          oprCase_ = 12;
          return this;
        }
        /**
         * <code>.algebra.Limit limit = 12;</code>
         */
        public Builder setLimit(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit.Builder builderForValue) {
          if (limitBuilder_ == null) {
            opr_ = builderForValue.build();
            onChanged();
          } else {
            limitBuilder_.setMessage(builderForValue.build());
          }
          oprCase_ = 12;
          return this;
        }
        /**
         * <code>.algebra.Limit limit = 12;</code>
         */
        public Builder mergeLimit(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit value) {
          if (limitBuilder_ == null) {
            if (oprCase_ == 12 &&
                opr_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit.getDefaultInstance()) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit) opr_)
                  .mergeFrom(value).buildPartial();
            } else {
              opr_ = value;
            }
            onChanged();
          } else {
            if (oprCase_ == 12) {
              limitBuilder_.mergeFrom(value);
            } else {
              limitBuilder_.setMessage(value);
            }
          }
          oprCase_ = 12;
          return this;
        }
        /**
         * <code>.algebra.Limit limit = 12;</code>
         */
        public Builder clearLimit() {
          if (limitBuilder_ == null) {
            if (oprCase_ == 12) {
              oprCase_ = 0;
              opr_ = null;
              onChanged();
            }
          } else {
            if (oprCase_ == 12) {
              oprCase_ = 0;
              opr_ = null;
            }
            limitBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.Limit limit = 12;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit.Builder getLimitBuilder() {
          return getLimitFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.Limit limit = 12;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LimitOrBuilder getLimitOrBuilder() {
          if ((oprCase_ == 12) && (limitBuilder_ != null)) {
            return limitBuilder_.getMessageOrBuilder();
          } else {
            if (oprCase_ == 12) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Limit limit = 12;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LimitOrBuilder> 
            getLimitFieldBuilder() {
          if (limitBuilder_ == null) {
            if (!(oprCase_ == 12)) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit.getDefaultInstance();
            }
            limitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LimitOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Limit) opr_,
                    getParentForChildren(),
                    isClean());
            opr_ = null;
          }
          oprCase_ = 12;
          onChanged();
          return limitBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.AsOrBuilder> asBuilder_;
        /**
         * <code>.algebra.As as = 14;</code>
         * @return Whether the as field is set.
         */
        @java.lang.Override
        public boolean hasAs() {
          return oprCase_ == 14;
        }
        /**
         * <code>.algebra.As as = 14;</code>
         * @return The as.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As getAs() {
          if (asBuilder_ == null) {
            if (oprCase_ == 14) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As.getDefaultInstance();
          } else {
            if (oprCase_ == 14) {
              return asBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.As as = 14;</code>
         */
        public Builder setAs(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As value) {
          if (asBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            opr_ = value;
            onChanged();
          } else {
            asBuilder_.setMessage(value);
          }
          oprCase_ = 14;
          return this;
        }
        /**
         * <code>.algebra.As as = 14;</code>
         */
        public Builder setAs(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As.Builder builderForValue) {
          if (asBuilder_ == null) {
            opr_ = builderForValue.build();
            onChanged();
          } else {
            asBuilder_.setMessage(builderForValue.build());
          }
          oprCase_ = 14;
          return this;
        }
        /**
         * <code>.algebra.As as = 14;</code>
         */
        public Builder mergeAs(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As value) {
          if (asBuilder_ == null) {
            if (oprCase_ == 14 &&
                opr_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As.getDefaultInstance()) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As) opr_)
                  .mergeFrom(value).buildPartial();
            } else {
              opr_ = value;
            }
            onChanged();
          } else {
            if (oprCase_ == 14) {
              asBuilder_.mergeFrom(value);
            } else {
              asBuilder_.setMessage(value);
            }
          }
          oprCase_ = 14;
          return this;
        }
        /**
         * <code>.algebra.As as = 14;</code>
         */
        public Builder clearAs() {
          if (asBuilder_ == null) {
            if (oprCase_ == 14) {
              oprCase_ = 0;
              opr_ = null;
              onChanged();
            }
          } else {
            if (oprCase_ == 14) {
              oprCase_ = 0;
              opr_ = null;
            }
            asBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.As as = 14;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As.Builder getAsBuilder() {
          return getAsFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.As as = 14;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.AsOrBuilder getAsOrBuilder() {
          if ((oprCase_ == 14) && (asBuilder_ != null)) {
            return asBuilder_.getMessageOrBuilder();
          } else {
            if (oprCase_ == 14) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.As as = 14;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.AsOrBuilder> 
            getAsFieldBuilder() {
          if (asBuilder_ == null) {
            if (!(oprCase_ == 14)) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As.getDefaultInstance();
            }
            asBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.AsOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.As) opr_,
                    getParentForChildren(),
                    isClean());
            opr_ = null;
          }
          oprCase_ = 14;
          onChanged();
          return asBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IntersectOrBuilder> intersectBuilder_;
        /**
         * <code>.algebra.Intersect intersect = 15;</code>
         * @return Whether the intersect field is set.
         */
        @java.lang.Override
        public boolean hasIntersect() {
          return oprCase_ == 15;
        }
        /**
         * <code>.algebra.Intersect intersect = 15;</code>
         * @return The intersect.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect getIntersect() {
          if (intersectBuilder_ == null) {
            if (oprCase_ == 15) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect.getDefaultInstance();
          } else {
            if (oprCase_ == 15) {
              return intersectBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Intersect intersect = 15;</code>
         */
        public Builder setIntersect(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect value) {
          if (intersectBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            opr_ = value;
            onChanged();
          } else {
            intersectBuilder_.setMessage(value);
          }
          oprCase_ = 15;
          return this;
        }
        /**
         * <code>.algebra.Intersect intersect = 15;</code>
         */
        public Builder setIntersect(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect.Builder builderForValue) {
          if (intersectBuilder_ == null) {
            opr_ = builderForValue.build();
            onChanged();
          } else {
            intersectBuilder_.setMessage(builderForValue.build());
          }
          oprCase_ = 15;
          return this;
        }
        /**
         * <code>.algebra.Intersect intersect = 15;</code>
         */
        public Builder mergeIntersect(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect value) {
          if (intersectBuilder_ == null) {
            if (oprCase_ == 15 &&
                opr_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect.getDefaultInstance()) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect) opr_)
                  .mergeFrom(value).buildPartial();
            } else {
              opr_ = value;
            }
            onChanged();
          } else {
            if (oprCase_ == 15) {
              intersectBuilder_.mergeFrom(value);
            } else {
              intersectBuilder_.setMessage(value);
            }
          }
          oprCase_ = 15;
          return this;
        }
        /**
         * <code>.algebra.Intersect intersect = 15;</code>
         */
        public Builder clearIntersect() {
          if (intersectBuilder_ == null) {
            if (oprCase_ == 15) {
              oprCase_ = 0;
              opr_ = null;
              onChanged();
            }
          } else {
            if (oprCase_ == 15) {
              oprCase_ = 0;
              opr_ = null;
            }
            intersectBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.Intersect intersect = 15;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect.Builder getIntersectBuilder() {
          return getIntersectFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.Intersect intersect = 15;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IntersectOrBuilder getIntersectOrBuilder() {
          if ((oprCase_ == 15) && (intersectBuilder_ != null)) {
            return intersectBuilder_.getMessageOrBuilder();
          } else {
            if (oprCase_ == 15) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Intersect intersect = 15;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IntersectOrBuilder> 
            getIntersectFieldBuilder() {
          if (intersectBuilder_ == null) {
            if (!(oprCase_ == 15)) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect.getDefaultInstance();
            }
            intersectBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.IntersectOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Intersect) opr_,
                    getParentForChildren(),
                    isClean());
            opr_ = null;
          }
          oprCase_ = 15;
          onChanged();
          return intersectBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkOrBuilder> sinkBuilder_;
        /**
         * <code>.algebra.Sink sink = 16;</code>
         * @return Whether the sink field is set.
         */
        @java.lang.Override
        public boolean hasSink() {
          return oprCase_ == 16;
        }
        /**
         * <code>.algebra.Sink sink = 16;</code>
         * @return The sink.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink getSink() {
          if (sinkBuilder_ == null) {
            if (oprCase_ == 16) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.getDefaultInstance();
          } else {
            if (oprCase_ == 16) {
              return sinkBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Sink sink = 16;</code>
         */
        public Builder setSink(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink value) {
          if (sinkBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            opr_ = value;
            onChanged();
          } else {
            sinkBuilder_.setMessage(value);
          }
          oprCase_ = 16;
          return this;
        }
        /**
         * <code>.algebra.Sink sink = 16;</code>
         */
        public Builder setSink(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.Builder builderForValue) {
          if (sinkBuilder_ == null) {
            opr_ = builderForValue.build();
            onChanged();
          } else {
            sinkBuilder_.setMessage(builderForValue.build());
          }
          oprCase_ = 16;
          return this;
        }
        /**
         * <code>.algebra.Sink sink = 16;</code>
         */
        public Builder mergeSink(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink value) {
          if (sinkBuilder_ == null) {
            if (oprCase_ == 16 &&
                opr_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.getDefaultInstance()) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink) opr_)
                  .mergeFrom(value).buildPartial();
            } else {
              opr_ = value;
            }
            onChanged();
          } else {
            if (oprCase_ == 16) {
              sinkBuilder_.mergeFrom(value);
            } else {
              sinkBuilder_.setMessage(value);
            }
          }
          oprCase_ = 16;
          return this;
        }
        /**
         * <code>.algebra.Sink sink = 16;</code>
         */
        public Builder clearSink() {
          if (sinkBuilder_ == null) {
            if (oprCase_ == 16) {
              oprCase_ = 0;
              opr_ = null;
              onChanged();
            }
          } else {
            if (oprCase_ == 16) {
              oprCase_ = 0;
              opr_ = null;
            }
            sinkBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.Sink sink = 16;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.Builder getSinkBuilder() {
          return getSinkFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.Sink sink = 16;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkOrBuilder getSinkOrBuilder() {
          if ((oprCase_ == 16) && (sinkBuilder_ != null)) {
            return sinkBuilder_.getMessageOrBuilder();
          } else {
            if (oprCase_ == 16) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Sink sink = 16;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkOrBuilder> 
            getSinkFieldBuilder() {
          if (sinkBuilder_ == null) {
            if (!(oprCase_ == 16)) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.getDefaultInstance();
            }
            sinkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SinkOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sink) opr_,
                    getParentForChildren(),
                    isClean());
            opr_ = null;
          }
          oprCase_ = 16;
          onChanged();
          return sinkBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RootOrBuilder> rootBuilder_;
        /**
         * <code>.algebra.Root root = 17;</code>
         * @return Whether the root field is set.
         */
        @java.lang.Override
        public boolean hasRoot() {
          return oprCase_ == 17;
        }
        /**
         * <code>.algebra.Root root = 17;</code>
         * @return The root.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root getRoot() {
          if (rootBuilder_ == null) {
            if (oprCase_ == 17) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root.getDefaultInstance();
          } else {
            if (oprCase_ == 17) {
              return rootBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Root root = 17;</code>
         */
        public Builder setRoot(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root value) {
          if (rootBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            opr_ = value;
            onChanged();
          } else {
            rootBuilder_.setMessage(value);
          }
          oprCase_ = 17;
          return this;
        }
        /**
         * <code>.algebra.Root root = 17;</code>
         */
        public Builder setRoot(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root.Builder builderForValue) {
          if (rootBuilder_ == null) {
            opr_ = builderForValue.build();
            onChanged();
          } else {
            rootBuilder_.setMessage(builderForValue.build());
          }
          oprCase_ = 17;
          return this;
        }
        /**
         * <code>.algebra.Root root = 17;</code>
         */
        public Builder mergeRoot(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root value) {
          if (rootBuilder_ == null) {
            if (oprCase_ == 17 &&
                opr_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root.getDefaultInstance()) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root) opr_)
                  .mergeFrom(value).buildPartial();
            } else {
              opr_ = value;
            }
            onChanged();
          } else {
            if (oprCase_ == 17) {
              rootBuilder_.mergeFrom(value);
            } else {
              rootBuilder_.setMessage(value);
            }
          }
          oprCase_ = 17;
          return this;
        }
        /**
         * <code>.algebra.Root root = 17;</code>
         */
        public Builder clearRoot() {
          if (rootBuilder_ == null) {
            if (oprCase_ == 17) {
              oprCase_ = 0;
              opr_ = null;
              onChanged();
            }
          } else {
            if (oprCase_ == 17) {
              oprCase_ = 0;
              opr_ = null;
            }
            rootBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.Root root = 17;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root.Builder getRootBuilder() {
          return getRootFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.Root root = 17;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RootOrBuilder getRootOrBuilder() {
          if ((oprCase_ == 17) && (rootBuilder_ != null)) {
            return rootBuilder_.getMessageOrBuilder();
          } else {
            if (oprCase_ == 17) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Root root = 17;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RootOrBuilder> 
            getRootFieldBuilder() {
          if (rootBuilder_ == null) {
            if (!(oprCase_ == 17)) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root.getDefaultInstance();
            }
            rootBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.RootOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Root) opr_,
                    getParentForChildren(),
                    isClean());
            opr_ = null;
          }
          oprCase_ = 17;
          onChanged();
          return rootBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SampleOrBuilder> sampleBuilder_;
        /**
         * <code>.algebra.Sample sample = 18;</code>
         * @return Whether the sample field is set.
         */
        @java.lang.Override
        public boolean hasSample() {
          return oprCase_ == 18;
        }
        /**
         * <code>.algebra.Sample sample = 18;</code>
         * @return The sample.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample getSample() {
          if (sampleBuilder_ == null) {
            if (oprCase_ == 18) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.getDefaultInstance();
          } else {
            if (oprCase_ == 18) {
              return sampleBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Sample sample = 18;</code>
         */
        public Builder setSample(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample value) {
          if (sampleBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            opr_ = value;
            onChanged();
          } else {
            sampleBuilder_.setMessage(value);
          }
          oprCase_ = 18;
          return this;
        }
        /**
         * <code>.algebra.Sample sample = 18;</code>
         */
        public Builder setSample(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.Builder builderForValue) {
          if (sampleBuilder_ == null) {
            opr_ = builderForValue.build();
            onChanged();
          } else {
            sampleBuilder_.setMessage(builderForValue.build());
          }
          oprCase_ = 18;
          return this;
        }
        /**
         * <code>.algebra.Sample sample = 18;</code>
         */
        public Builder mergeSample(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample value) {
          if (sampleBuilder_ == null) {
            if (oprCase_ == 18 &&
                opr_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.getDefaultInstance()) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample) opr_)
                  .mergeFrom(value).buildPartial();
            } else {
              opr_ = value;
            }
            onChanged();
          } else {
            if (oprCase_ == 18) {
              sampleBuilder_.mergeFrom(value);
            } else {
              sampleBuilder_.setMessage(value);
            }
          }
          oprCase_ = 18;
          return this;
        }
        /**
         * <code>.algebra.Sample sample = 18;</code>
         */
        public Builder clearSample() {
          if (sampleBuilder_ == null) {
            if (oprCase_ == 18) {
              oprCase_ = 0;
              opr_ = null;
              onChanged();
            }
          } else {
            if (oprCase_ == 18) {
              oprCase_ = 0;
              opr_ = null;
            }
            sampleBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.Sample sample = 18;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.Builder getSampleBuilder() {
          return getSampleFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.Sample sample = 18;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SampleOrBuilder getSampleOrBuilder() {
          if ((oprCase_ == 18) && (sampleBuilder_ != null)) {
            return sampleBuilder_.getMessageOrBuilder();
          } else {
            if (oprCase_ == 18) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Sample sample = 18;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SampleOrBuilder> 
            getSampleFieldBuilder() {
          if (sampleBuilder_ == null) {
            if (!(oprCase_ == 18)) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.getDefaultInstance();
            }
            sampleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.SampleOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Sample) opr_,
                    getParentForChildren(),
                    isClean());
            opr_ = null;
          }
          oprCase_ = 18;
          onChanged();
          return sampleBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.BranchOrBuilder> branchBuilder_;
        /**
         * <code>.algebra.Branch branch = 19;</code>
         * @return Whether the branch field is set.
         */
        @java.lang.Override
        public boolean hasBranch() {
          return oprCase_ == 19;
        }
        /**
         * <code>.algebra.Branch branch = 19;</code>
         * @return The branch.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch getBranch() {
          if (branchBuilder_ == null) {
            if (oprCase_ == 19) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch.getDefaultInstance();
          } else {
            if (oprCase_ == 19) {
              return branchBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Branch branch = 19;</code>
         */
        public Builder setBranch(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch value) {
          if (branchBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            opr_ = value;
            onChanged();
          } else {
            branchBuilder_.setMessage(value);
          }
          oprCase_ = 19;
          return this;
        }
        /**
         * <code>.algebra.Branch branch = 19;</code>
         */
        public Builder setBranch(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch.Builder builderForValue) {
          if (branchBuilder_ == null) {
            opr_ = builderForValue.build();
            onChanged();
          } else {
            branchBuilder_.setMessage(builderForValue.build());
          }
          oprCase_ = 19;
          return this;
        }
        /**
         * <code>.algebra.Branch branch = 19;</code>
         */
        public Builder mergeBranch(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch value) {
          if (branchBuilder_ == null) {
            if (oprCase_ == 19 &&
                opr_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch.getDefaultInstance()) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch) opr_)
                  .mergeFrom(value).buildPartial();
            } else {
              opr_ = value;
            }
            onChanged();
          } else {
            if (oprCase_ == 19) {
              branchBuilder_.mergeFrom(value);
            } else {
              branchBuilder_.setMessage(value);
            }
          }
          oprCase_ = 19;
          return this;
        }
        /**
         * <code>.algebra.Branch branch = 19;</code>
         */
        public Builder clearBranch() {
          if (branchBuilder_ == null) {
            if (oprCase_ == 19) {
              oprCase_ = 0;
              opr_ = null;
              onChanged();
            }
          } else {
            if (oprCase_ == 19) {
              oprCase_ = 0;
              opr_ = null;
            }
            branchBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.Branch branch = 19;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch.Builder getBranchBuilder() {
          return getBranchFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.Branch branch = 19;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.BranchOrBuilder getBranchOrBuilder() {
          if ((oprCase_ == 19) && (branchBuilder_ != null)) {
            return branchBuilder_.getMessageOrBuilder();
          } else {
            if (oprCase_ == 19) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Branch branch = 19;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.BranchOrBuilder> 
            getBranchFieldBuilder() {
          if (branchBuilder_ == null) {
            if (!(oprCase_ == 19)) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch.getDefaultInstance();
            }
            branchBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.BranchOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Branch) opr_,
                    getParentForChildren(),
                    isClean());
            opr_ = null;
          }
          oprCase_ = 19;
          onChanged();
          return branchBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetVOrBuilder> vertexBuilder_;
        /**
         * <pre>
         * Saving the room for relational operators
         * </pre>
         *
         * <code>.algebra.GetV vertex = 30;</code>
         * @return Whether the vertex field is set.
         */
        @java.lang.Override
        public boolean hasVertex() {
          return oprCase_ == 30;
        }
        /**
         * <pre>
         * Saving the room for relational operators
         * </pre>
         *
         * <code>.algebra.GetV vertex = 30;</code>
         * @return The vertex.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV getVertex() {
          if (vertexBuilder_ == null) {
            if (oprCase_ == 30) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.getDefaultInstance();
          } else {
            if (oprCase_ == 30) {
              return vertexBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * Saving the room for relational operators
         * </pre>
         *
         * <code>.algebra.GetV vertex = 30;</code>
         */
        public Builder setVertex(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV value) {
          if (vertexBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            opr_ = value;
            onChanged();
          } else {
            vertexBuilder_.setMessage(value);
          }
          oprCase_ = 30;
          return this;
        }
        /**
         * <pre>
         * Saving the room for relational operators
         * </pre>
         *
         * <code>.algebra.GetV vertex = 30;</code>
         */
        public Builder setVertex(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.Builder builderForValue) {
          if (vertexBuilder_ == null) {
            opr_ = builderForValue.build();
            onChanged();
          } else {
            vertexBuilder_.setMessage(builderForValue.build());
          }
          oprCase_ = 30;
          return this;
        }
        /**
         * <pre>
         * Saving the room for relational operators
         * </pre>
         *
         * <code>.algebra.GetV vertex = 30;</code>
         */
        public Builder mergeVertex(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV value) {
          if (vertexBuilder_ == null) {
            if (oprCase_ == 30 &&
                opr_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.getDefaultInstance()) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV) opr_)
                  .mergeFrom(value).buildPartial();
            } else {
              opr_ = value;
            }
            onChanged();
          } else {
            if (oprCase_ == 30) {
              vertexBuilder_.mergeFrom(value);
            } else {
              vertexBuilder_.setMessage(value);
            }
          }
          oprCase_ = 30;
          return this;
        }
        /**
         * <pre>
         * Saving the room for relational operators
         * </pre>
         *
         * <code>.algebra.GetV vertex = 30;</code>
         */
        public Builder clearVertex() {
          if (vertexBuilder_ == null) {
            if (oprCase_ == 30) {
              oprCase_ = 0;
              opr_ = null;
              onChanged();
            }
          } else {
            if (oprCase_ == 30) {
              oprCase_ = 0;
              opr_ = null;
            }
            vertexBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Saving the room for relational operators
         * </pre>
         *
         * <code>.algebra.GetV vertex = 30;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.Builder getVertexBuilder() {
          return getVertexFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Saving the room for relational operators
         * </pre>
         *
         * <code>.algebra.GetV vertex = 30;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetVOrBuilder getVertexOrBuilder() {
          if ((oprCase_ == 30) && (vertexBuilder_ != null)) {
            return vertexBuilder_.getMessageOrBuilder();
          } else {
            if (oprCase_ == 30) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * Saving the room for relational operators
         * </pre>
         *
         * <code>.algebra.GetV vertex = 30;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetVOrBuilder> 
            getVertexFieldBuilder() {
          if (vertexBuilder_ == null) {
            if (!(oprCase_ == 30)) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.getDefaultInstance();
            }
            vertexBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetVOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.GetV) opr_,
                    getParentForChildren(),
                    isClean());
            opr_ = null;
          }
          oprCase_ = 30;
          onChanged();
          return vertexBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpandOrBuilder> edgeBuilder_;
        /**
         * <code>.algebra.EdgeExpand edge = 31;</code>
         * @return Whether the edge field is set.
         */
        @java.lang.Override
        public boolean hasEdge() {
          return oprCase_ == 31;
        }
        /**
         * <code>.algebra.EdgeExpand edge = 31;</code>
         * @return The edge.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand getEdge() {
          if (edgeBuilder_ == null) {
            if (oprCase_ == 31) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.getDefaultInstance();
          } else {
            if (oprCase_ == 31) {
              return edgeBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.EdgeExpand edge = 31;</code>
         */
        public Builder setEdge(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand value) {
          if (edgeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            opr_ = value;
            onChanged();
          } else {
            edgeBuilder_.setMessage(value);
          }
          oprCase_ = 31;
          return this;
        }
        /**
         * <code>.algebra.EdgeExpand edge = 31;</code>
         */
        public Builder setEdge(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Builder builderForValue) {
          if (edgeBuilder_ == null) {
            opr_ = builderForValue.build();
            onChanged();
          } else {
            edgeBuilder_.setMessage(builderForValue.build());
          }
          oprCase_ = 31;
          return this;
        }
        /**
         * <code>.algebra.EdgeExpand edge = 31;</code>
         */
        public Builder mergeEdge(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand value) {
          if (edgeBuilder_ == null) {
            if (oprCase_ == 31 &&
                opr_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.getDefaultInstance()) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand) opr_)
                  .mergeFrom(value).buildPartial();
            } else {
              opr_ = value;
            }
            onChanged();
          } else {
            if (oprCase_ == 31) {
              edgeBuilder_.mergeFrom(value);
            } else {
              edgeBuilder_.setMessage(value);
            }
          }
          oprCase_ = 31;
          return this;
        }
        /**
         * <code>.algebra.EdgeExpand edge = 31;</code>
         */
        public Builder clearEdge() {
          if (edgeBuilder_ == null) {
            if (oprCase_ == 31) {
              oprCase_ = 0;
              opr_ = null;
              onChanged();
            }
          } else {
            if (oprCase_ == 31) {
              oprCase_ = 0;
              opr_ = null;
            }
            edgeBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.EdgeExpand edge = 31;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Builder getEdgeBuilder() {
          return getEdgeFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.EdgeExpand edge = 31;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpandOrBuilder getEdgeOrBuilder() {
          if ((oprCase_ == 31) && (edgeBuilder_ != null)) {
            return edgeBuilder_.getMessageOrBuilder();
          } else {
            if (oprCase_ == 31) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.EdgeExpand edge = 31;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpandOrBuilder> 
            getEdgeFieldBuilder() {
          if (edgeBuilder_ == null) {
            if (!(oprCase_ == 31)) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.getDefaultInstance();
            }
            edgeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpandOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.EdgeExpand) opr_,
                    getParentForChildren(),
                    isClean());
            opr_ = null;
          }
          oprCase_ = 31;
          onChanged();
          return edgeBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpandOrBuilder> pathBuilder_;
        /**
         * <code>.algebra.PathExpand path = 32;</code>
         * @return Whether the path field is set.
         */
        @java.lang.Override
        public boolean hasPath() {
          return oprCase_ == 32;
        }
        /**
         * <code>.algebra.PathExpand path = 32;</code>
         * @return The path.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand getPath() {
          if (pathBuilder_ == null) {
            if (oprCase_ == 32) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.getDefaultInstance();
          } else {
            if (oprCase_ == 32) {
              return pathBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.PathExpand path = 32;</code>
         */
        public Builder setPath(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand value) {
          if (pathBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            opr_ = value;
            onChanged();
          } else {
            pathBuilder_.setMessage(value);
          }
          oprCase_ = 32;
          return this;
        }
        /**
         * <code>.algebra.PathExpand path = 32;</code>
         */
        public Builder setPath(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.Builder builderForValue) {
          if (pathBuilder_ == null) {
            opr_ = builderForValue.build();
            onChanged();
          } else {
            pathBuilder_.setMessage(builderForValue.build());
          }
          oprCase_ = 32;
          return this;
        }
        /**
         * <code>.algebra.PathExpand path = 32;</code>
         */
        public Builder mergePath(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand value) {
          if (pathBuilder_ == null) {
            if (oprCase_ == 32 &&
                opr_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.getDefaultInstance()) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand) opr_)
                  .mergeFrom(value).buildPartial();
            } else {
              opr_ = value;
            }
            onChanged();
          } else {
            if (oprCase_ == 32) {
              pathBuilder_.mergeFrom(value);
            } else {
              pathBuilder_.setMessage(value);
            }
          }
          oprCase_ = 32;
          return this;
        }
        /**
         * <code>.algebra.PathExpand path = 32;</code>
         */
        public Builder clearPath() {
          if (pathBuilder_ == null) {
            if (oprCase_ == 32) {
              oprCase_ = 0;
              opr_ = null;
              onChanged();
            }
          } else {
            if (oprCase_ == 32) {
              oprCase_ = 0;
              opr_ = null;
            }
            pathBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.PathExpand path = 32;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.Builder getPathBuilder() {
          return getPathFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.PathExpand path = 32;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpandOrBuilder getPathOrBuilder() {
          if ((oprCase_ == 32) && (pathBuilder_ != null)) {
            return pathBuilder_.getMessageOrBuilder();
          } else {
            if (oprCase_ == 32) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.PathExpand path = 32;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpandOrBuilder> 
            getPathFieldBuilder() {
          if (pathBuilder_ == null) {
            if (!(oprCase_ == 32)) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.getDefaultInstance();
            }
            pathBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpandOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PathExpand) opr_,
                    getParentForChildren(),
                    isClean());
            opr_ = null;
          }
          oprCase_ = 32;
          onChanged();
          return pathBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PatternOrBuilder> patternBuilder_;
        /**
         * <code>.algebra.Pattern pattern = 35;</code>
         * @return Whether the pattern field is set.
         */
        @java.lang.Override
        public boolean hasPattern() {
          return oprCase_ == 35;
        }
        /**
         * <code>.algebra.Pattern pattern = 35;</code>
         * @return The pattern.
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern getPattern() {
          if (patternBuilder_ == null) {
            if (oprCase_ == 35) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.getDefaultInstance();
          } else {
            if (oprCase_ == 35) {
              return patternBuilder_.getMessage();
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Pattern pattern = 35;</code>
         */
        public Builder setPattern(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern value) {
          if (patternBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            opr_ = value;
            onChanged();
          } else {
            patternBuilder_.setMessage(value);
          }
          oprCase_ = 35;
          return this;
        }
        /**
         * <code>.algebra.Pattern pattern = 35;</code>
         */
        public Builder setPattern(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Builder builderForValue) {
          if (patternBuilder_ == null) {
            opr_ = builderForValue.build();
            onChanged();
          } else {
            patternBuilder_.setMessage(builderForValue.build());
          }
          oprCase_ = 35;
          return this;
        }
        /**
         * <code>.algebra.Pattern pattern = 35;</code>
         */
        public Builder mergePattern(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern value) {
          if (patternBuilder_ == null) {
            if (oprCase_ == 35 &&
                opr_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.getDefaultInstance()) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.newBuilder((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern) opr_)
                  .mergeFrom(value).buildPartial();
            } else {
              opr_ = value;
            }
            onChanged();
          } else {
            if (oprCase_ == 35) {
              patternBuilder_.mergeFrom(value);
            } else {
              patternBuilder_.setMessage(value);
            }
          }
          oprCase_ = 35;
          return this;
        }
        /**
         * <code>.algebra.Pattern pattern = 35;</code>
         */
        public Builder clearPattern() {
          if (patternBuilder_ == null) {
            if (oprCase_ == 35) {
              oprCase_ = 0;
              opr_ = null;
              onChanged();
            }
          } else {
            if (oprCase_ == 35) {
              oprCase_ = 0;
              opr_ = null;
            }
            patternBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.algebra.Pattern pattern = 35;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Builder getPatternBuilder() {
          return getPatternFieldBuilder().getBuilder();
        }
        /**
         * <code>.algebra.Pattern pattern = 35;</code>
         */
        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PatternOrBuilder getPatternOrBuilder() {
          if ((oprCase_ == 35) && (patternBuilder_ != null)) {
            return patternBuilder_.getMessageOrBuilder();
          } else {
            if (oprCase_ == 35) {
              return (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern) opr_;
            }
            return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.getDefaultInstance();
          }
        }
        /**
         * <code>.algebra.Pattern pattern = 35;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PatternOrBuilder> 
            getPatternFieldBuilder() {
          if (patternBuilder_ == null) {
            if (!(oprCase_ == 35)) {
              opr_ = com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.getDefaultInstance();
            }
            patternBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.PatternOrBuilder>(
                    (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.Pattern) opr_,
                    getParentForChildren(),
                    isClean());
            opr_ = null;
          }
          oprCase_ = 35;
          onChanged();
          return patternBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:algebra.LogicalPlan.Operator)
      }

      // @@protoc_insertion_point(class_scope:algebra.LogicalPlan.Operator)
      private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator();
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Operator>
          PARSER = new com.google.protobuf.AbstractParser<Operator>() {
        @java.lang.Override
        public Operator parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Operator> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Operator> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface NodeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:algebra.LogicalPlan.Node)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The node's operator
       * </pre>
       *
       * <code>.algebra.LogicalPlan.Operator opr = 1;</code>
       * @return Whether the opr field is set.
       */
      boolean hasOpr();
      /**
       * <pre>
       * The node's operator
       * </pre>
       *
       * <code>.algebra.LogicalPlan.Operator opr = 1;</code>
       * @return The opr.
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator getOpr();
      /**
       * <pre>
       * The node's operator
       * </pre>
       *
       * <code>.algebra.LogicalPlan.Operator opr = 1;</code>
       */
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.OperatorOrBuilder getOprOrBuilder();

      /**
       * <pre>
       * The children operators' identifiers, where the id refers to its array index in the plan
       * </pre>
       *
       * <code>repeated int32 children = 2;</code>
       * @return A list containing the children.
       */
      java.util.List<java.lang.Integer> getChildrenList();
      /**
       * <pre>
       * The children operators' identifiers, where the id refers to its array index in the plan
       * </pre>
       *
       * <code>repeated int32 children = 2;</code>
       * @return The count of children.
       */
      int getChildrenCount();
      /**
       * <pre>
       * The children operators' identifiers, where the id refers to its array index in the plan
       * </pre>
       *
       * <code>repeated int32 children = 2;</code>
       * @param index The index of the element to return.
       * @return The children at the given index.
       */
      int getChildren(int index);
    }
    /**
     * Protobuf type {@code algebra.LogicalPlan.Node}
     */
    public static final class Node extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:algebra.LogicalPlan.Node)
        NodeOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Node.newBuilder() to construct.
      private Node(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Node() {
        children_ = emptyIntList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Node();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_LogicalPlan_Node_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_LogicalPlan_Node_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node.Builder.class);
      }

      public static final int OPR_FIELD_NUMBER = 1;
      private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator opr_;
      /**
       * <pre>
       * The node's operator
       * </pre>
       *
       * <code>.algebra.LogicalPlan.Operator opr = 1;</code>
       * @return Whether the opr field is set.
       */
      @java.lang.Override
      public boolean hasOpr() {
        return opr_ != null;
      }
      /**
       * <pre>
       * The node's operator
       * </pre>
       *
       * <code>.algebra.LogicalPlan.Operator opr = 1;</code>
       * @return The opr.
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator getOpr() {
        return opr_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator.getDefaultInstance() : opr_;
      }
      /**
       * <pre>
       * The node's operator
       * </pre>
       *
       * <code>.algebra.LogicalPlan.Operator opr = 1;</code>
       */
      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.OperatorOrBuilder getOprOrBuilder() {
        return opr_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator.getDefaultInstance() : opr_;
      }

      public static final int CHILDREN_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.IntList children_;
      /**
       * <pre>
       * The children operators' identifiers, where the id refers to its array index in the plan
       * </pre>
       *
       * <code>repeated int32 children = 2;</code>
       * @return A list containing the children.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getChildrenList() {
        return children_;
      }
      /**
       * <pre>
       * The children operators' identifiers, where the id refers to its array index in the plan
       * </pre>
       *
       * <code>repeated int32 children = 2;</code>
       * @return The count of children.
       */
      public int getChildrenCount() {
        return children_.size();
      }
      /**
       * <pre>
       * The children operators' identifiers, where the id refers to its array index in the plan
       * </pre>
       *
       * <code>repeated int32 children = 2;</code>
       * @param index The index of the element to return.
       * @return The children at the given index.
       */
      public int getChildren(int index) {
        return children_.getInt(index);
      }
      private int childrenMemoizedSerializedSize = -1;

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (opr_ != null) {
          output.writeMessage(1, getOpr());
        }
        if (getChildrenList().size() > 0) {
          output.writeUInt32NoTag(18);
          output.writeUInt32NoTag(childrenMemoizedSerializedSize);
        }
        for (int i = 0; i < children_.size(); i++) {
          output.writeInt32NoTag(children_.getInt(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (opr_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getOpr());
        }
        {
          int dataSize = 0;
          for (int i = 0; i < children_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(children_.getInt(i));
          }
          size += dataSize;
          if (!getChildrenList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          childrenMemoizedSerializedSize = dataSize;
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node)) {
          return super.equals(obj);
        }
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node) obj;

        if (hasOpr() != other.hasOpr()) return false;
        if (hasOpr()) {
          if (!getOpr()
              .equals(other.getOpr())) return false;
        }
        if (!getChildrenList()
            .equals(other.getChildrenList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasOpr()) {
          hash = (37 * hash) + OPR_FIELD_NUMBER;
          hash = (53 * hash) + getOpr().hashCode();
        }
        if (getChildrenCount() > 0) {
          hash = (37 * hash) + CHILDREN_FIELD_NUMBER;
          hash = (53 * hash) + getChildrenList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code algebra.LogicalPlan.Node}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:algebra.LogicalPlan.Node)
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.NodeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_LogicalPlan_Node_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_LogicalPlan_Node_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node.Builder.class);
        }

        // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          opr_ = null;
          if (oprBuilder_ != null) {
            oprBuilder_.dispose();
            oprBuilder_ = null;
          }
          children_ = emptyIntList();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_LogicalPlan_Node_descriptor;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node getDefaultInstanceForType() {
          return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node.getDefaultInstance();
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node build() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node buildPartial() {
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node result) {
          if (((bitField0_ & 0x00000002) != 0)) {
            children_.makeImmutable();
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.children_ = children_;
        }

        private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.opr_ = oprBuilder_ == null
                ? opr_
                : oprBuilder_.build();
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node) {
            return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node other) {
          if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node.getDefaultInstance()) return this;
          if (other.hasOpr()) {
            mergeOpr(other.getOpr());
          }
          if (!other.children_.isEmpty()) {
            if (children_.isEmpty()) {
              children_ = other.children_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureChildrenIsMutable();
              children_.addAll(other.children_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getOprFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 16: {
                  int v = input.readInt32();
                  ensureChildrenIsMutable();
                  children_.addInt(v);
                  break;
                } // case 16
                case 18: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensureChildrenIsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    children_.addInt(input.readInt32());
                  }
                  input.popLimit(limit);
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator opr_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.OperatorOrBuilder> oprBuilder_;
        /**
         * <pre>
         * The node's operator
         * </pre>
         *
         * <code>.algebra.LogicalPlan.Operator opr = 1;</code>
         * @return Whether the opr field is set.
         */
        public boolean hasOpr() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * The node's operator
         * </pre>
         *
         * <code>.algebra.LogicalPlan.Operator opr = 1;</code>
         * @return The opr.
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator getOpr() {
          if (oprBuilder_ == null) {
            return opr_ == null ? com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator.getDefaultInstance() : opr_;
          } else {
            return oprBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The node's operator
         * </pre>
         *
         * <code>.algebra.LogicalPlan.Operator opr = 1;</code>
         */
        public Builder setOpr(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator value) {
          if (oprBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            opr_ = value;
          } else {
            oprBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The node's operator
         * </pre>
         *
         * <code>.algebra.LogicalPlan.Operator opr = 1;</code>
         */
        public Builder setOpr(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator.Builder builderForValue) {
          if (oprBuilder_ == null) {
            opr_ = builderForValue.build();
          } else {
            oprBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The node's operator
         * </pre>
         *
         * <code>.algebra.LogicalPlan.Operator opr = 1;</code>
         */
        public Builder mergeOpr(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator value) {
          if (oprBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0) &&
              opr_ != null &&
              opr_ != com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator.getDefaultInstance()) {
              getOprBuilder().mergeFrom(value);
            } else {
              opr_ = value;
            }
          } else {
            oprBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The node's operator
         * </pre>
         *
         * <code>.algebra.LogicalPlan.Operator opr = 1;</code>
         */
        public Builder clearOpr() {
          bitField0_ = (bitField0_ & ~0x00000001);
          opr_ = null;
          if (oprBuilder_ != null) {
            oprBuilder_.dispose();
            oprBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The node's operator
         * </pre>
         *
         * <code>.algebra.LogicalPlan.Operator opr = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator.Builder getOprBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getOprFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The node's operator
         * </pre>
         *
         * <code>.algebra.LogicalPlan.Operator opr = 1;</code>
         */
        public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.OperatorOrBuilder getOprOrBuilder() {
          if (oprBuilder_ != null) {
            return oprBuilder_.getMessageOrBuilder();
          } else {
            return opr_ == null ?
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator.getDefaultInstance() : opr_;
          }
        }
        /**
         * <pre>
         * The node's operator
         * </pre>
         *
         * <code>.algebra.LogicalPlan.Operator opr = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.OperatorOrBuilder> 
            getOprFieldBuilder() {
          if (oprBuilder_ == null) {
            oprBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Operator.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.OperatorOrBuilder>(
                    getOpr(),
                    getParentForChildren(),
                    isClean());
            opr_ = null;
          }
          return oprBuilder_;
        }

        private com.google.protobuf.Internal.IntList children_ = emptyIntList();
        private void ensureChildrenIsMutable() {
          if (!((bitField0_ & 0x00000002) != 0)) {
            children_ = mutableCopy(children_);
            bitField0_ |= 0x00000002;
          }
        }
        /**
         * <pre>
         * The children operators' identifiers, where the id refers to its array index in the plan
         * </pre>
         *
         * <code>repeated int32 children = 2;</code>
         * @return A list containing the children.
         */
        public java.util.List<java.lang.Integer>
            getChildrenList() {
          return ((bitField0_ & 0x00000002) != 0) ?
                   java.util.Collections.unmodifiableList(children_) : children_;
        }
        /**
         * <pre>
         * The children operators' identifiers, where the id refers to its array index in the plan
         * </pre>
         *
         * <code>repeated int32 children = 2;</code>
         * @return The count of children.
         */
        public int getChildrenCount() {
          return children_.size();
        }
        /**
         * <pre>
         * The children operators' identifiers, where the id refers to its array index in the plan
         * </pre>
         *
         * <code>repeated int32 children = 2;</code>
         * @param index The index of the element to return.
         * @return The children at the given index.
         */
        public int getChildren(int index) {
          return children_.getInt(index);
        }
        /**
         * <pre>
         * The children operators' identifiers, where the id refers to its array index in the plan
         * </pre>
         *
         * <code>repeated int32 children = 2;</code>
         * @param index The index to set the value at.
         * @param value The children to set.
         * @return This builder for chaining.
         */
        public Builder setChildren(
            int index, int value) {

          ensureChildrenIsMutable();
          children_.setInt(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The children operators' identifiers, where the id refers to its array index in the plan
         * </pre>
         *
         * <code>repeated int32 children = 2;</code>
         * @param value The children to add.
         * @return This builder for chaining.
         */
        public Builder addChildren(int value) {

          ensureChildrenIsMutable();
          children_.addInt(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The children operators' identifiers, where the id refers to its array index in the plan
         * </pre>
         *
         * <code>repeated int32 children = 2;</code>
         * @param values The children to add.
         * @return This builder for chaining.
         */
        public Builder addAllChildren(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureChildrenIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, children_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The children operators' identifiers, where the id refers to its array index in the plan
         * </pre>
         *
         * <code>repeated int32 children = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearChildren() {
          children_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:algebra.LogicalPlan.Node)
      }

      // @@protoc_insertion_point(class_scope:algebra.LogicalPlan.Node)
      private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node();
      }

      public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Node>
          PARSER = new com.google.protobuf.AbstractParser<Node>() {
        @java.lang.Override
        public Node parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Node> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Node> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int NODES_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node> nodes_;
    /**
     * <pre>
     * A array of nodes
     * </pre>
     *
     * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node> getNodesList() {
      return nodes_;
    }
    /**
     * <pre>
     * A array of nodes
     * </pre>
     *
     * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.NodeOrBuilder> 
        getNodesOrBuilderList() {
      return nodes_;
    }
    /**
     * <pre>
     * A array of nodes
     * </pre>
     *
     * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
     */
    @java.lang.Override
    public int getNodesCount() {
      return nodes_.size();
    }
    /**
     * <pre>
     * A array of nodes
     * </pre>
     *
     * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node getNodes(int index) {
      return nodes_.get(index);
    }
    /**
     * <pre>
     * A array of nodes
     * </pre>
     *
     * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
     */
    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.NodeOrBuilder getNodesOrBuilder(
        int index) {
      return nodes_.get(index);
    }

    public static final int ROOTS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList roots_;
    /**
     * <pre>
     *&#47; The root nodes' array indices
     * </pre>
     *
     * <code>repeated int32 roots = 2;</code>
     * @return A list containing the roots.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getRootsList() {
      return roots_;
    }
    /**
     * <pre>
     *&#47; The root nodes' array indices
     * </pre>
     *
     * <code>repeated int32 roots = 2;</code>
     * @return The count of roots.
     */
    public int getRootsCount() {
      return roots_.size();
    }
    /**
     * <pre>
     *&#47; The root nodes' array indices
     * </pre>
     *
     * <code>repeated int32 roots = 2;</code>
     * @param index The index of the element to return.
     * @return The roots at the given index.
     */
    public int getRoots(int index) {
      return roots_.getInt(index);
    }
    private int rootsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < nodes_.size(); i++) {
        output.writeMessage(1, nodes_.get(i));
      }
      if (getRootsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(rootsMemoizedSerializedSize);
      }
      for (int i = 0; i < roots_.size(); i++) {
        output.writeInt32NoTag(roots_.getInt(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < nodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, nodes_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < roots_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(roots_.getInt(i));
        }
        size += dataSize;
        if (!getRootsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        rootsMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan)) {
        return super.equals(obj);
      }
      com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan other = (com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan) obj;

      if (!getNodesList()
          .equals(other.getNodesList())) return false;
      if (!getRootsList()
          .equals(other.getRootsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getNodesCount() > 0) {
        hash = (37 * hash) + NODES_FIELD_NUMBER;
        hash = (53 * hash) + getNodesList().hashCode();
      }
      if (getRootsCount() > 0) {
        hash = (37 * hash) + ROOTS_FIELD_NUMBER;
        hash = (53 * hash) + getRootsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A logical plan of graph relation algebra forms a DAG, where each node is an operator and the
     * edge indicates the execution flow.
     * </pre>
     *
     * Protobuf type {@code algebra.LogicalPlan}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:algebra.LogicalPlan)
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlanOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_LogicalPlan_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_LogicalPlan_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.class, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Builder.class);
      }

      // Construct using com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
        } else {
          nodes_ = null;
          nodesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        roots_ = emptyIntList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.internal_static_algebra_LogicalPlan_descriptor;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan getDefaultInstanceForType() {
        return com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.getDefaultInstance();
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan build() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan buildPartial() {
        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan result = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan result) {
        if (nodesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            nodes_ = java.util.Collections.unmodifiableList(nodes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.nodes_ = nodes_;
        } else {
          result.nodes_ = nodesBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          roots_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.roots_ = roots_;
      }

      private void buildPartial0(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan) {
          return mergeFrom((com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan other) {
        if (other == com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.getDefaultInstance()) return this;
        if (nodesBuilder_ == null) {
          if (!other.nodes_.isEmpty()) {
            if (nodes_.isEmpty()) {
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNodesIsMutable();
              nodes_.addAll(other.nodes_);
            }
            onChanged();
          }
        } else {
          if (!other.nodes_.isEmpty()) {
            if (nodesBuilder_.isEmpty()) {
              nodesBuilder_.dispose();
              nodesBuilder_ = null;
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              nodesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNodesFieldBuilder() : null;
            } else {
              nodesBuilder_.addAllMessages(other.nodes_);
            }
          }
        }
        if (!other.roots_.isEmpty()) {
          if (roots_.isEmpty()) {
            roots_ = other.roots_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRootsIsMutable();
            roots_.addAll(other.roots_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node m =
                    input.readMessage(
                        com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node.parser(),
                        extensionRegistry);
                if (nodesBuilder_ == null) {
                  ensureNodesIsMutable();
                  nodes_.add(m);
                } else {
                  nodesBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 16: {
                int v = input.readInt32();
                ensureRootsIsMutable();
                roots_.addInt(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureRootsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  roots_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node> nodes_ =
        java.util.Collections.emptyList();
      private void ensureNodesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          nodes_ = new java.util.ArrayList<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node>(nodes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.NodeOrBuilder> nodesBuilder_;

      /**
       * <pre>
       * A array of nodes
       * </pre>
       *
       * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node> getNodesList() {
        if (nodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nodes_);
        } else {
          return nodesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A array of nodes
       * </pre>
       *
       * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
       */
      public int getNodesCount() {
        if (nodesBuilder_ == null) {
          return nodes_.size();
        } else {
          return nodesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A array of nodes
       * </pre>
       *
       * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node getNodes(int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);
        } else {
          return nodesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A array of nodes
       * </pre>
       *
       * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
       */
      public Builder setNodes(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.set(index, value);
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A array of nodes
       * </pre>
       *
       * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
       */
      public Builder setNodes(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A array of nodes
       * </pre>
       *
       * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
       */
      public Builder addNodes(com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A array of nodes
       * </pre>
       *
       * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
       */
      public Builder addNodes(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(index, value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A array of nodes
       * </pre>
       *
       * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
       */
      public Builder addNodes(
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A array of nodes
       * </pre>
       *
       * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
       */
      public Builder addNodes(
          int index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A array of nodes
       * </pre>
       *
       * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
       */
      public Builder addAllNodes(
          java.lang.Iterable<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node> values) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nodes_);
          onChanged();
        } else {
          nodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A array of nodes
       * </pre>
       *
       * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
       */
      public Builder clearNodes() {
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          nodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A array of nodes
       * </pre>
       *
       * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
       */
      public Builder removeNodes(int index) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.remove(index);
          onChanged();
        } else {
          nodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A array of nodes
       * </pre>
       *
       * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node.Builder getNodesBuilder(
          int index) {
        return getNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A array of nodes
       * </pre>
       *
       * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.NodeOrBuilder getNodesOrBuilder(
          int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);  } else {
          return nodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A array of nodes
       * </pre>
       *
       * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
       */
      public java.util.List<? extends com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.NodeOrBuilder> 
           getNodesOrBuilderList() {
        if (nodesBuilder_ != null) {
          return nodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nodes_);
        }
      }
      /**
       * <pre>
       * A array of nodes
       * </pre>
       *
       * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node.Builder addNodesBuilder() {
        return getNodesFieldBuilder().addBuilder(
            com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node.getDefaultInstance());
      }
      /**
       * <pre>
       * A array of nodes
       * </pre>
       *
       * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
       */
      public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node.Builder addNodesBuilder(
          int index) {
        return getNodesFieldBuilder().addBuilder(
            index, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node.getDefaultInstance());
      }
      /**
       * <pre>
       * A array of nodes
       * </pre>
       *
       * <code>repeated .algebra.LogicalPlan.Node nodes = 1;</code>
       */
      public java.util.List<com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node.Builder> 
           getNodesBuilderList() {
        return getNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.NodeOrBuilder> 
          getNodesFieldBuilder() {
        if (nodesBuilder_ == null) {
          nodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.Node.Builder, com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan.NodeOrBuilder>(
                  nodes_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          nodes_ = null;
        }
        return nodesBuilder_;
      }

      private com.google.protobuf.Internal.IntList roots_ = emptyIntList();
      private void ensureRootsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          roots_ = mutableCopy(roots_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <pre>
       *&#47; The root nodes' array indices
       * </pre>
       *
       * <code>repeated int32 roots = 2;</code>
       * @return A list containing the roots.
       */
      public java.util.List<java.lang.Integer>
          getRootsList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(roots_) : roots_;
      }
      /**
       * <pre>
       *&#47; The root nodes' array indices
       * </pre>
       *
       * <code>repeated int32 roots = 2;</code>
       * @return The count of roots.
       */
      public int getRootsCount() {
        return roots_.size();
      }
      /**
       * <pre>
       *&#47; The root nodes' array indices
       * </pre>
       *
       * <code>repeated int32 roots = 2;</code>
       * @param index The index of the element to return.
       * @return The roots at the given index.
       */
      public int getRoots(int index) {
        return roots_.getInt(index);
      }
      /**
       * <pre>
       *&#47; The root nodes' array indices
       * </pre>
       *
       * <code>repeated int32 roots = 2;</code>
       * @param index The index to set the value at.
       * @param value The roots to set.
       * @return This builder for chaining.
       */
      public Builder setRoots(
          int index, int value) {

        ensureRootsIsMutable();
        roots_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; The root nodes' array indices
       * </pre>
       *
       * <code>repeated int32 roots = 2;</code>
       * @param value The roots to add.
       * @return This builder for chaining.
       */
      public Builder addRoots(int value) {

        ensureRootsIsMutable();
        roots_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; The root nodes' array indices
       * </pre>
       *
       * <code>repeated int32 roots = 2;</code>
       * @param values The roots to add.
       * @return This builder for chaining.
       */
      public Builder addAllRoots(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRootsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, roots_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; The root nodes' array indices
       * </pre>
       *
       * <code>repeated int32 roots = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRoots() {
        roots_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:algebra.LogicalPlan)
    }

    // @@protoc_insertion_point(class_scope:algebra.LogicalPlan)
    private static final com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan();
    }

    public static com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LogicalPlan>
        PARSER = new com.google.protobuf.AbstractParser<LogicalPlan>() {
      @java.lang.Override
      public LogicalPlan parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<LogicalPlan> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LogicalPlan> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.alibaba.graphscope.ldbc.workload.proto.GraphAlgebra.LogicalPlan getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_MetaData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_MetaData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_Project_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_Project_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_Project_ExprAlias_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_Project_ExprAlias_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_Select_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_Select_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_Join_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_Join_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_Union_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_Union_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_Intersect_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_Intersect_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_GroupBy_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_GroupBy_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_GroupBy_AggFunc_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_GroupBy_AggFunc_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_GroupBy_KeyAlias_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_GroupBy_KeyAlias_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_OrderBy_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_OrderBy_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_OrderBy_OrderingPair_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_OrderBy_OrderingPair_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_Dedup_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_Dedup_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_Unfold_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_Unfold_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_Range_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_Range_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_Limit_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_Limit_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_IndexPredicate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_IndexPredicate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_IndexPredicate_Triplet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_IndexPredicate_Triplet_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_IndexPredicate_AndPredicate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_IndexPredicate_AndPredicate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_QueryParams_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_QueryParams_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_QueryParams_ExtraEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_QueryParams_ExtraEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_Scan_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_Scan_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_GetV_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_GetV_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_As_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_As_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_EdgeExpand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_EdgeExpand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_PathExpand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_PathExpand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_PathExpand_ExpandBase_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_PathExpand_ExpandBase_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_Apply_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_Apply_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_SegmentApply_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_SegmentApply_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_Pattern_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_Pattern_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_Pattern_Binder_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_Pattern_Binder_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_Pattern_Sentence_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_Pattern_Sentence_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_Sample_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_Sample_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_Sample_SampleByRatio_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_Sample_SampleByRatio_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_Sample_SampleByNum_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_Sample_SampleByNum_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_Sample_SampleType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_Sample_SampleType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_Sink_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_Sink_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_Sink_SinkTarget_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_Sink_SinkTarget_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_SinkDefault_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_SinkDefault_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_SinkDefault_IdNameMapping_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_SinkDefault_IdNameMapping_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_SinkVineyard_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_SinkVineyard_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_Root_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_Root_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_Branch_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_Branch_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_LogicalPlan_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_LogicalPlan_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_LogicalPlan_Operator_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_LogicalPlan_Operator_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_algebra_LogicalPlan_Node_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_algebra_LogicalPlan_Node_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\ralgebra.proto\022\007algebra\032\014common.proto\032\n" +
      "expr.proto\032\014schema.proto\032\ntype.proto\032\036go" +
      "ogle/protobuf/wrappers.proto\";\n\010MetaData" +
      "\022 \n\004type\030\001 \001(\0132\022.common.IrDataType\022\r\n\005al" +
      "ias\030\002 \001(\005\"\300\001\n\007Project\022,\n\010mappings\030\001 \003(\0132" +
      "\032.algebra.Project.ExprAlias\022\021\n\tis_append" +
      "\030\002 \001(\010\022$\n\tmeta_data\030\003 \003(\0132\021.algebra.Meta" +
      "Data\032N\n\tExprAlias\022 \n\004expr\030\001 \001(\0132\022.common" +
      ".Expression\022\037\n\005alias\030\002 \001(\0132\020.common.Name" +
      "OrId\"/\n\006Select\022%\n\tpredicate\030\001 \001(\0132\022.comm" +
      "on.Expression\"\336\001\n\004Join\022#\n\tleft_keys\030\001 \003(" +
      "\0132\020.common.Variable\022$\n\nright_keys\030\002 \003(\0132" +
      "\020.common.Variable\022$\n\004kind\030\003 \001(\0162\026.algebr" +
      "a.Join.JoinKind\"e\n\010JoinKind\022\t\n\005INNER\020\000\022\016" +
      "\n\nLEFT_OUTER\020\001\022\017\n\013RIGHT_OUTER\020\002\022\016\n\nFULL_" +
      "OUTER\020\003\022\010\n\004SEMI\020\004\022\010\n\004ANTI\020\005\022\t\n\005TIMES\020\006\"\030" +
      "\n\005Union\022\017\n\007parents\030\001 \003(\005\";\n\tIntersect\022\017\n" +
      "\007parents\030\001 \003(\005\022\035\n\003key\030\002 \001(\0132\020.common.Nam" +
      "eOrId\"\315\003\n\007GroupBy\022+\n\010mappings\030\001 \003(\0132\031.al" +
      "gebra.GroupBy.KeyAlias\022+\n\tfunctions\030\002 \003(" +
      "\0132\030.algebra.GroupBy.AggFunc\022$\n\tmeta_data" +
      "\030\003 \003(\0132\021.algebra.MetaData\032\365\001\n\007AggFunc\022\036\n" +
      "\004vars\030\001 \003(\0132\020.common.Variable\0225\n\taggrega" +
      "te\030\002 \001(\0162\".algebra.GroupBy.AggFunc.Aggre" +
      "gate\022\037\n\005alias\030\003 \001(\0132\020.common.NameOrId\"r\n" +
      "\tAggregate\022\007\n\003SUM\020\000\022\007\n\003MIN\020\001\022\007\n\003MAX\020\002\022\t\n" +
      "\005COUNT\020\003\022\022\n\016COUNT_DISTINCT\020\004\022\013\n\007TO_LIST\020" +
      "\005\022\n\n\006TO_SET\020\006\022\007\n\003AVG\020\007\022\t\n\005FIRST\020\010\032J\n\010Key" +
      "Alias\022\035\n\003key\030\001 \001(\0132\020.common.Variable\022\037\n\005" +
      "alias\030\002 \001(\0132\020.common.NameOrId\"\343\001\n\007OrderB" +
      "y\022,\n\005pairs\030\002 \003(\0132\035.algebra.OrderBy.Order" +
      "ingPair\022\035\n\005limit\030\003 \001(\0132\016.algebra.Range\032\212" +
      "\001\n\014OrderingPair\022\035\n\003key\030\001 \001(\0132\020.common.Va" +
      "riable\0222\n\005order\030\002 \001(\0162#.algebra.OrderBy." +
      "OrderingPair.Order\"\'\n\005Order\022\013\n\007SHUFFLE\020\000" +
      "\022\007\n\003ASC\020\001\022\010\n\004DESC\020\002\"\'\n\005Dedup\022\036\n\004keys\030\001 \003" +
      "(\0132\020.common.Variable\"n\n\006Unfold\022\035\n\003tag\030\001 " +
      "\001(\0132\020.common.NameOrId\022\037\n\005alias\030\002 \001(\0132\020.c" +
      "ommon.NameOrId\022$\n\tmeta_data\030\003 \001(\0132\021.alge" +
      "bra.MetaData\"%\n\005Range\022\r\n\005lower\030\001 \001(\005\022\r\n\005" +
      "upper\030\002 \001(\005\"&\n\005Limit\022\035\n\005range\030\001 \001(\0132\016.al" +
      "gebra.Range\"\250\002\n\016IndexPredicate\022;\n\ror_pre" +
      "dicates\030\001 \003(\0132$.algebra.IndexPredicate.A" +
      "ndPredicate\032\223\001\n\007Triplet\022\035\n\003key\030\001 \001(\0132\020.c" +
      "ommon.Property\022\036\n\005const\030\002 \001(\0132\r.common.V" +
      "alueH\000\022%\n\005param\030\003 \001(\0132\024.common.DynamicPa" +
      "ramH\000\022\031\n\003cmp\030\004 \001(\0132\014.common.NoneB\007\n\005valu" +
      "e\032C\n\014AndPredicate\0223\n\npredicates\030\001 \003(\0132\037." +
      "algebra.IndexPredicate.Triplet\"\244\002\n\013Query" +
      "Params\022 \n\006tables\030\001 \003(\0132\020.common.NameOrId" +
      "\022!\n\007columns\030\002 \003(\0132\020.common.NameOrId\022\026\n\016i" +
      "s_all_columns\030\003 \001(\010\022\035\n\005limit\030\004 \001(\0132\016.alg" +
      "ebra.Range\022%\n\tpredicate\030\005 \001(\0132\022.common.E" +
      "xpression\022\024\n\014sample_ratio\030\006 \001(\001\022.\n\005extra" +
      "\030\007 \003(\0132\037.algebra.QueryParams.ExtraEntry\032" +
      ",\n\nExtraEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(" +
      "\t:\0028\001\"\217\002\n\004Scan\022\'\n\010scan_opt\030\001 \001(\0162\025.algeb" +
      "ra.Scan.ScanOpt\022\037\n\005alias\030\002 \001(\0132\020.common." +
      "NameOrId\022$\n\006params\030\003 \001(\0132\024.algebra.Query" +
      "Params\022.\n\ridx_predicate\030\004 \001(\0132\027.algebra." +
      "IndexPredicate\022\025\n\ris_count_only\030\005 \001(\010\022$\n" +
      "\tmeta_data\030\006 \001(\0132\021.algebra.MetaData\"*\n\007S" +
      "canOpt\022\n\n\006VERTEX\020\000\022\010\n\004EDGE\020\001\022\t\n\005TABLE\020\002\"" +
      "\344\001\n\004GetV\022\035\n\003tag\030\001 \001(\0132\020.common.NameOrId\022" +
      "\037\n\003opt\030\002 \001(\0162\022.algebra.GetV.VOpt\022$\n\006para" +
      "ms\030\003 \001(\0132\024.algebra.QueryParams\022\037\n\005alias\030" +
      "\004 \001(\0132\020.common.NameOrId\022$\n\tmeta_data\030\005 \001" +
      "(\0132\021.algebra.MetaData\"/\n\004VOpt\022\t\n\005START\020\000" +
      "\022\007\n\003END\020\001\022\t\n\005OTHER\020\002\022\010\n\004BOTH\020\003\"%\n\002As\022\037\n\005" +
      "alias\030\001 \001(\0132\020.common.NameOrId\"\326\002\n\nEdgeEx" +
      "pand\022\037\n\005v_tag\030\001 \001(\0132\020.common.NameOrId\0220\n" +
      "\tdirection\030\002 \001(\0162\035.algebra.EdgeExpand.Di" +
      "rection\022$\n\006params\030\003 \001(\0132\024.algebra.QueryP" +
      "arams\022\037\n\005alias\030\004 \001(\0132\020.common.NameOrId\0221" +
      "\n\nexpand_opt\030\005 \001(\0162\035.algebra.EdgeExpand." +
      "ExpandOpt\022$\n\tmeta_data\030\006 \001(\0132\021.algebra.M" +
      "etaData\"&\n\tDirection\022\007\n\003OUT\020\000\022\006\n\002IN\020\001\022\010\n" +
      "\004BOTH\020\002\"-\n\tExpandOpt\022\n\n\006VERTEX\020\000\022\010\n\004EDGE" +
      "\020\001\022\n\n\006DEGREE\020\002\"\330\003\n\nPathExpand\022,\n\004base\030\001 " +
      "\001(\0132\036.algebra.PathExpand.ExpandBase\022#\n\ts" +
      "tart_tag\030\002 \001(\0132\020.common.NameOrId\022\037\n\005alia" +
      "s\030\003 \001(\0132\020.common.NameOrId\022!\n\thop_range\030\004" +
      " \001(\0132\016.algebra.Range\022-\n\010path_opt\030\005 \001(\0162\033" +
      ".algebra.PathExpand.PathOpt\0221\n\nresult_op" +
      "t\030\006 \001(\0162\035.algebra.PathExpand.ResultOpt\022%" +
      "\n\tcondition\030\007 \001(\0132\022.common.Expression\032T\n" +
      "\nExpandBase\022(\n\013edge_expand\030\001 \001(\0132\023.algeb" +
      "ra.EdgeExpand\022\034\n\005get_V\030\002 \001(\0132\r.algebra.G" +
      "etV\"$\n\007PathOpt\022\r\n\tARBITRARY\020\000\022\n\n\006SIMPLE\020" +
      "\001\".\n\tResultOpt\022\t\n\005END_V\020\000\022\t\n\005ALL_V\020\001\022\013\n\007" +
      "ALL_V_E\020\002\"\204\001\n\005Apply\022)\n\tjoin_kind\030\001 \001(\0162\026" +
      ".algebra.Join.JoinKind\022\036\n\004tags\030\002 \003(\0132\020.c" +
      "ommon.NameOrId\022\017\n\007subtask\030\003 \001(\005\022\037\n\005alias" +
      "\030\004 \001(\0132\020.common.NameOrId\"U\n\014SegmentApply" +
      "\022\036\n\004keys\030\001 \003(\0132\020.common.NameOrId\022%\n\rappl" +
      "y_subtask\030\002 \001(\0132\016.algebra.Apply\"\240\003\n\007Patt" +
      "ern\022,\n\tsentences\030\001 \003(\0132\031.algebra.Pattern" +
      ".Sentence\022$\n\tmeta_data\030\002 \003(\0132\021.algebra.M" +
      "etaData\032\236\001\n\006Binder\022#\n\004edge\030\001 \001(\0132\023.algeb" +
      "ra.EdgeExpandH\000\022#\n\004path\030\002 \001(\0132\023.algebra." +
      "PathExpandH\000\022\037\n\006vertex\030\003 \001(\0132\r.algebra.G" +
      "etVH\000\022!\n\006select\030\004 \001(\0132\017.algebra.SelectH\000" +
      "B\006\n\004item\032\237\001\n\010Sentence\022\037\n\005start\030\001 \001(\0132\020.c" +
      "ommon.NameOrId\022(\n\007binders\030\002 \003(\0132\027.algebr" +
      "a.Pattern.Binder\022\035\n\003end\030\003 \001(\0132\020.common.N" +
      "ameOrId\022)\n\tjoin_kind\030\004 \001(\0162\026.algebra.Joi" +
      "n.JoinKind\"\321\002\n\006Sample\022/\n\013sample_type\030\001 \001" +
      "(\0132\032.algebra.Sample.SampleType\022)\n\004seed\030\002" +
      " \001(\0132\033.google.protobuf.Int32Value\022\'\n\rsam" +
      "ple_weight\030\003 \001(\0132\020.common.Variable\032\036\n\rSa" +
      "mpleByRatio\022\r\n\005ratio\030\001 \001(\001\032\032\n\013SampleByNu" +
      "m\022\013\n\003num\030\001 \001(\005\032\205\001\n\nSampleType\0228\n\017sample_" +
      "by_ratio\030\001 \001(\0132\035.algebra.Sample.SampleBy" +
      "RatioH\000\0224\n\rsample_by_num\030\002 \001(\0132\033.algebra" +
      ".Sample.SampleByNumH\000B\007\n\005inner\"\315\001\n\004Sink\022" +
      "!\n\004tags\030\001 \003(\0132\023.common.NameOrIdKey\022-\n\013si" +
      "nk_target\030\002 \001(\0132\030.algebra.Sink.SinkTarge" +
      "t\032s\n\nSinkTarget\022,\n\014sink_default\030\001 \001(\0132\024." +
      "algebra.SinkDefaultH\000\022.\n\rsink_vineyard\030\002" +
      " \001(\0132\025.algebra.SinkVineyardH\000B\007\n\005inner\"\343" +
      "\001\n\013SinkDefault\022<\n\020id_name_mappings\030\001 \003(\013" +
      "2\".algebra.SinkDefault.IdNameMapping\032[\n\r" +
      "IdNameMapping\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022" +
      "0\n\tmeta_type\030\003 \001(\0162\035.algebra.SinkDefault" +
      ".MetaType\"9\n\010MetaType\022\n\n\006ENTITY\020\000\022\014\n\010REL" +
      "ATION\020\001\022\n\n\006COLUMN\020\002\022\007\n\003TAG\020\003\"H\n\014SinkVine" +
      "yard\022\022\n\ngraph_name\030\001 \001(\t\022$\n\014graph_schema" +
      "\030\002 \001(\0132\016.schema.Schema\"\006\n\004Root\"\010\n\006Branch" +
      "\"\235\007\n\013LogicalPlan\022(\n\005nodes\030\001 \003(\0132\031.algebr" +
      "a.LogicalPlan.Node\022\r\n\005roots\030\002 \003(\005\032\216\006\n\010Op" +
      "erator\022#\n\007project\030\001 \001(\0132\020.algebra.Projec" +
      "tH\000\022!\n\006select\030\002 \001(\0132\017.algebra.SelectH\000\022\035" +
      "\n\004join\030\003 \001(\0132\r.algebra.JoinH\000\022\037\n\005union\030\004" +
      " \001(\0132\016.algebra.UnionH\000\022$\n\010group_by\030\005 \001(\013" +
      "2\020.algebra.GroupByH\000\022$\n\010order_by\030\006 \001(\0132\020" +
      ".algebra.OrderByH\000\022\037\n\005dedup\030\007 \001(\0132\016.alge" +
      "bra.DedupH\000\022!\n\006unfold\030\010 \001(\0132\017.algebra.Un" +
      "foldH\000\022\037\n\005apply\030\t \001(\0132\016.algebra.ApplyH\000\022" +
      "*\n\tseg_apply\030\n \001(\0132\025.algebra.SegmentAppl" +
      "yH\000\022\035\n\004scan\030\013 \001(\0132\r.algebra.ScanH\000\022\037\n\005li" +
      "mit\030\014 \001(\0132\016.algebra.LimitH\000\022\031\n\002as\030\016 \001(\0132" +
      "\013.algebra.AsH\000\022\'\n\tintersect\030\017 \001(\0132\022.alge" +
      "bra.IntersectH\000\022\035\n\004sink\030\020 \001(\0132\r.algebra." +
      "SinkH\000\022\035\n\004root\030\021 \001(\0132\r.algebra.RootH\000\022!\n" +
      "\006sample\030\022 \001(\0132\017.algebra.SampleH\000\022!\n\006bran" +
      "ch\030\023 \001(\0132\017.algebra.BranchH\000\022\037\n\006vertex\030\036 " +
      "\001(\0132\r.algebra.GetVH\000\022#\n\004edge\030\037 \001(\0132\023.alg" +
      "ebra.EdgeExpandH\000\022#\n\004path\030  \001(\0132\023.algebr" +
      "a.PathExpandH\000\022#\n\007pattern\030# \001(\0132\020.algebr" +
      "a.PatternH\000B\005\n\003opr\032D\n\004Node\022*\n\003opr\030\001 \001(\0132" +
      "\035.algebra.LogicalPlan.Operator\022\020\n\010childr" +
      "en\030\002 \003(\005B:\n*com.alibaba.graphscope.ldbc." +
      "workload.protoB\014GraphAlgebrab\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.alibaba.graphscope.ldbc.workload.proto.Common.getDescriptor(),
          com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.getDescriptor(),
          com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.getDescriptor(),
          com.alibaba.graphscope.ldbc.workload.proto.DataType.getDescriptor(),
          com.google.protobuf.WrappersProto.getDescriptor(),
        });
    internal_static_algebra_MetaData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_algebra_MetaData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_MetaData_descriptor,
        new java.lang.String[] { "Type", "Alias", });
    internal_static_algebra_Project_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_algebra_Project_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_Project_descriptor,
        new java.lang.String[] { "Mappings", "IsAppend", "MetaData", });
    internal_static_algebra_Project_ExprAlias_descriptor =
      internal_static_algebra_Project_descriptor.getNestedTypes().get(0);
    internal_static_algebra_Project_ExprAlias_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_Project_ExprAlias_descriptor,
        new java.lang.String[] { "Expr", "Alias", });
    internal_static_algebra_Select_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_algebra_Select_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_Select_descriptor,
        new java.lang.String[] { "Predicate", });
    internal_static_algebra_Join_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_algebra_Join_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_Join_descriptor,
        new java.lang.String[] { "LeftKeys", "RightKeys", "Kind", });
    internal_static_algebra_Union_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_algebra_Union_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_Union_descriptor,
        new java.lang.String[] { "Parents", });
    internal_static_algebra_Intersect_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_algebra_Intersect_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_Intersect_descriptor,
        new java.lang.String[] { "Parents", "Key", });
    internal_static_algebra_GroupBy_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_algebra_GroupBy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_GroupBy_descriptor,
        new java.lang.String[] { "Mappings", "Functions", "MetaData", });
    internal_static_algebra_GroupBy_AggFunc_descriptor =
      internal_static_algebra_GroupBy_descriptor.getNestedTypes().get(0);
    internal_static_algebra_GroupBy_AggFunc_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_GroupBy_AggFunc_descriptor,
        new java.lang.String[] { "Vars", "Aggregate", "Alias", });
    internal_static_algebra_GroupBy_KeyAlias_descriptor =
      internal_static_algebra_GroupBy_descriptor.getNestedTypes().get(1);
    internal_static_algebra_GroupBy_KeyAlias_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_GroupBy_KeyAlias_descriptor,
        new java.lang.String[] { "Key", "Alias", });
    internal_static_algebra_OrderBy_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_algebra_OrderBy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_OrderBy_descriptor,
        new java.lang.String[] { "Pairs", "Limit", });
    internal_static_algebra_OrderBy_OrderingPair_descriptor =
      internal_static_algebra_OrderBy_descriptor.getNestedTypes().get(0);
    internal_static_algebra_OrderBy_OrderingPair_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_OrderBy_OrderingPair_descriptor,
        new java.lang.String[] { "Key", "Order", });
    internal_static_algebra_Dedup_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_algebra_Dedup_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_Dedup_descriptor,
        new java.lang.String[] { "Keys", });
    internal_static_algebra_Unfold_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_algebra_Unfold_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_Unfold_descriptor,
        new java.lang.String[] { "Tag", "Alias", "MetaData", });
    internal_static_algebra_Range_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_algebra_Range_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_Range_descriptor,
        new java.lang.String[] { "Lower", "Upper", });
    internal_static_algebra_Limit_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_algebra_Limit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_Limit_descriptor,
        new java.lang.String[] { "Range", });
    internal_static_algebra_IndexPredicate_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_algebra_IndexPredicate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_IndexPredicate_descriptor,
        new java.lang.String[] { "OrPredicates", });
    internal_static_algebra_IndexPredicate_Triplet_descriptor =
      internal_static_algebra_IndexPredicate_descriptor.getNestedTypes().get(0);
    internal_static_algebra_IndexPredicate_Triplet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_IndexPredicate_Triplet_descriptor,
        new java.lang.String[] { "Key", "Const", "Param", "Cmp", "Value", });
    internal_static_algebra_IndexPredicate_AndPredicate_descriptor =
      internal_static_algebra_IndexPredicate_descriptor.getNestedTypes().get(1);
    internal_static_algebra_IndexPredicate_AndPredicate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_IndexPredicate_AndPredicate_descriptor,
        new java.lang.String[] { "Predicates", });
    internal_static_algebra_QueryParams_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_algebra_QueryParams_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_QueryParams_descriptor,
        new java.lang.String[] { "Tables", "Columns", "IsAllColumns", "Limit", "Predicate", "SampleRatio", "Extra", });
    internal_static_algebra_QueryParams_ExtraEntry_descriptor =
      internal_static_algebra_QueryParams_descriptor.getNestedTypes().get(0);
    internal_static_algebra_QueryParams_ExtraEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_QueryParams_ExtraEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_algebra_Scan_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_algebra_Scan_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_Scan_descriptor,
        new java.lang.String[] { "ScanOpt", "Alias", "Params", "IdxPredicate", "IsCountOnly", "MetaData", });
    internal_static_algebra_GetV_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_algebra_GetV_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_GetV_descriptor,
        new java.lang.String[] { "Tag", "Opt", "Params", "Alias", "MetaData", });
    internal_static_algebra_As_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_algebra_As_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_As_descriptor,
        new java.lang.String[] { "Alias", });
    internal_static_algebra_EdgeExpand_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_algebra_EdgeExpand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_EdgeExpand_descriptor,
        new java.lang.String[] { "VTag", "Direction", "Params", "Alias", "ExpandOpt", "MetaData", });
    internal_static_algebra_PathExpand_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_algebra_PathExpand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_PathExpand_descriptor,
        new java.lang.String[] { "Base", "StartTag", "Alias", "HopRange", "PathOpt", "ResultOpt", "Condition", });
    internal_static_algebra_PathExpand_ExpandBase_descriptor =
      internal_static_algebra_PathExpand_descriptor.getNestedTypes().get(0);
    internal_static_algebra_PathExpand_ExpandBase_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_PathExpand_ExpandBase_descriptor,
        new java.lang.String[] { "EdgeExpand", "GetV", });
    internal_static_algebra_Apply_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_algebra_Apply_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_Apply_descriptor,
        new java.lang.String[] { "JoinKind", "Tags", "Subtask", "Alias", });
    internal_static_algebra_SegmentApply_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_algebra_SegmentApply_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_SegmentApply_descriptor,
        new java.lang.String[] { "Keys", "ApplySubtask", });
    internal_static_algebra_Pattern_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_algebra_Pattern_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_Pattern_descriptor,
        new java.lang.String[] { "Sentences", "MetaData", });
    internal_static_algebra_Pattern_Binder_descriptor =
      internal_static_algebra_Pattern_descriptor.getNestedTypes().get(0);
    internal_static_algebra_Pattern_Binder_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_Pattern_Binder_descriptor,
        new java.lang.String[] { "Edge", "Path", "Vertex", "Select", "Item", });
    internal_static_algebra_Pattern_Sentence_descriptor =
      internal_static_algebra_Pattern_descriptor.getNestedTypes().get(1);
    internal_static_algebra_Pattern_Sentence_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_Pattern_Sentence_descriptor,
        new java.lang.String[] { "Start", "Binders", "End", "JoinKind", });
    internal_static_algebra_Sample_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_algebra_Sample_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_Sample_descriptor,
        new java.lang.String[] { "SampleType", "Seed", "SampleWeight", });
    internal_static_algebra_Sample_SampleByRatio_descriptor =
      internal_static_algebra_Sample_descriptor.getNestedTypes().get(0);
    internal_static_algebra_Sample_SampleByRatio_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_Sample_SampleByRatio_descriptor,
        new java.lang.String[] { "Ratio", });
    internal_static_algebra_Sample_SampleByNum_descriptor =
      internal_static_algebra_Sample_descriptor.getNestedTypes().get(1);
    internal_static_algebra_Sample_SampleByNum_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_Sample_SampleByNum_descriptor,
        new java.lang.String[] { "Num", });
    internal_static_algebra_Sample_SampleType_descriptor =
      internal_static_algebra_Sample_descriptor.getNestedTypes().get(2);
    internal_static_algebra_Sample_SampleType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_Sample_SampleType_descriptor,
        new java.lang.String[] { "SampleByRatio", "SampleByNum", "Inner", });
    internal_static_algebra_Sink_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_algebra_Sink_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_Sink_descriptor,
        new java.lang.String[] { "Tags", "SinkTarget", });
    internal_static_algebra_Sink_SinkTarget_descriptor =
      internal_static_algebra_Sink_descriptor.getNestedTypes().get(0);
    internal_static_algebra_Sink_SinkTarget_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_Sink_SinkTarget_descriptor,
        new java.lang.String[] { "SinkDefault", "SinkVineyard", "Inner", });
    internal_static_algebra_SinkDefault_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_algebra_SinkDefault_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_SinkDefault_descriptor,
        new java.lang.String[] { "IdNameMappings", });
    internal_static_algebra_SinkDefault_IdNameMapping_descriptor =
      internal_static_algebra_SinkDefault_descriptor.getNestedTypes().get(0);
    internal_static_algebra_SinkDefault_IdNameMapping_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_SinkDefault_IdNameMapping_descriptor,
        new java.lang.String[] { "Id", "Name", "MetaType", });
    internal_static_algebra_SinkVineyard_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_algebra_SinkVineyard_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_SinkVineyard_descriptor,
        new java.lang.String[] { "GraphName", "GraphSchema", });
    internal_static_algebra_Root_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_algebra_Root_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_Root_descriptor,
        new java.lang.String[] { });
    internal_static_algebra_Branch_descriptor =
      getDescriptor().getMessageTypes().get(27);
    internal_static_algebra_Branch_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_Branch_descriptor,
        new java.lang.String[] { });
    internal_static_algebra_LogicalPlan_descriptor =
      getDescriptor().getMessageTypes().get(28);
    internal_static_algebra_LogicalPlan_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_LogicalPlan_descriptor,
        new java.lang.String[] { "Nodes", "Roots", });
    internal_static_algebra_LogicalPlan_Operator_descriptor =
      internal_static_algebra_LogicalPlan_descriptor.getNestedTypes().get(0);
    internal_static_algebra_LogicalPlan_Operator_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_LogicalPlan_Operator_descriptor,
        new java.lang.String[] { "Project", "Select", "Join", "Union", "GroupBy", "OrderBy", "Dedup", "Unfold", "Apply", "SegApply", "Scan", "Limit", "As", "Intersect", "Sink", "Root", "Sample", "Branch", "Vertex", "Edge", "Path", "Pattern", "Opr", });
    internal_static_algebra_LogicalPlan_Node_descriptor =
      internal_static_algebra_LogicalPlan_descriptor.getNestedTypes().get(1);
    internal_static_algebra_LogicalPlan_Node_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_algebra_LogicalPlan_Node_descriptor,
        new java.lang.String[] { "Opr", "Children", });
    com.alibaba.graphscope.ldbc.workload.proto.Common.getDescriptor();
    com.alibaba.graphscope.ldbc.workload.proto.OuterExpression.getDescriptor();
    com.alibaba.graphscope.ldbc.workload.proto.OuterSchema.getDescriptor();
    com.alibaba.graphscope.ldbc.workload.proto.DataType.getDescriptor();
    com.google.protobuf.WrappersProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
